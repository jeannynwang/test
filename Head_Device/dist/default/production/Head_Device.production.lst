

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Nov 24 00:45:50 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F2480
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           	psect	idataCOMRAM
    61  00116C                     __pidataCOMRAM:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _ListeningIdleData
    65  00116C  03                 	db	3
    66  00116D  00                 	db	0
    67                           
    68                           ;initializer for _ListeningLeftData
    69  00116E  03                 	db	3
    70  00116F  01                 	db	1
    71                           
    72                           ;initializer for _ListeningRightData
    73  001170  03                 	db	3
    74  001171  02                 	db	2
    75                           
    76                           ;initializer for _LoadingData
    77  001172  02                 	db	2
    78                           
    79                           ;initializer for _SpeakingData
    80  001173  01                 	db	1
    81                           
    82                           	psect	idataBANK0
    83  00118C                     __pidataBANK0:
    84                           	opt stack 0
    85                           
    86                           ;initializer for _ListeningCenterData
    87  00118C  03                 	db	3
    88  00118D  03                 	db	3
    89                           
    90                           	psect	smallconst
    91  000300                     __psmallconst:
    92                           	opt stack 0
    93  000300  00                 	db	0
    94  000301                     _BitNum2SetMask:
    95                           	opt stack 0
    96  000301  0001               	dw	1
    97  000303  0002               	dw	2
    98  000305  0004               	dw	4
    99  000307  0008               	dw	8
   100  000309  0010               	dw	16
   101  00030B  0020               	dw	32
   102  00030D  0040               	dw	64
   103  00030F  0080               	dw	128
   104  000311  0100               	dw	256
   105  000313  0200               	dw	512
   106  000315  0400               	dw	1024
   107  000317  0800               	dw	2048
   108  000319  1000               	dw	4096
   109  00031B  2000               	dw	8192
   110  00031D  4000               	dw	16384
   111  00031F  8000               	dw	32768
   112  000321                     __end_of_BitNum2SetMask:
   113                           	opt stack 0
   114  000321                     _Timer2PostFunc:
   115                           	opt stack 0
   116  000321  1E                 	db	low _PostCan_XmitService
   117  000322  11                 	db	high _PostCan_XmitService
   118  000323  0A                 	db	low _PostButtonDebounceSM
   119  000324  11                 	db	high _PostButtonDebounceSM
   120  000325  00                 	db	0
   121  000326  00                 	db	0
   122  000327  00                 	db	0
   123  000328  00                 	db	0
   124  000329  00                 	db	0
   125  00032A  00                 	db	0
   126  00032B  00                 	db	0
   127  00032C  00                 	db	0
   128  00032D  00                 	db	0
   129  00032E  00                 	db	0
   130  00032F  00                 	db	0
   131  000330  00                 	db	0
   132  000331  00                 	db	0
   133  000332  00                 	db	0
   134  000333  00                 	db	0
   135  000334  00                 	db	0
   136  000335  00                 	db	0
   137  000336  00                 	db	0
   138  000337  00                 	db	0
   139  000338  00                 	db	0
   140  000339  00                 	db	0
   141  00033A  00                 	db	0
   142  00033B  00                 	db	0
   143  00033C  00                 	db	0
   144  00033D  00                 	db	0
   145  00033E  00                 	db	0
   146  00033F  00                 	db	0
   147  000340  00                 	db	0
   148  000341                     __end_of_Timer2PostFunc:
   149                           	opt stack 0
   150  000341                     _Nybble2MSBitNum:
   151                           	opt stack 0
   152  000341  00                 	db	0
   153  000342  01                 	db	1
   154  000343  01                 	db	1
   155  000344  02                 	db	2
   156  000345  02                 	db	2
   157  000346  02                 	db	2
   158  000347  02                 	db	2
   159  000348  03                 	db	3
   160  000349  03                 	db	3
   161  00034A  03                 	db	3
   162  00034B  03                 	db	3
   163  00034C  03                 	db	3
   164  00034D  03                 	db	3
   165  00034E  03                 	db	3
   166  00034F  03                 	db	3
   167  000350                     __end_of_Nybble2MSBitNum:
   168                           	opt stack 0
   169  000350                     _ServDescList:
   170                           	opt stack 0
   171  000350  1E                 	db	low _InitCan_XmitService
   172  000351  10                 	db	high _InitCan_XmitService
   173  000352  BE                 	db	low _RunCan_XmitService
   174  000353  03                 	db	high _RunCan_XmitService
   175  000354  A0                 	db	low _InitializeButtonDebounce
   176  000355  10                 	db	high _InitializeButtonDebounce
   177  000356  8C                 	db	low _RunButtonDebounceSM
   178  000357  0A                 	db	high _RunButtonDebounceSM
   179  000358                     __end_of_ServDescList:
   180                           	opt stack 0
   181  000358                     _EventQueues:
   182                           	opt stack 0
   183  000358  82                 	db	low _Queue0
   184  000359  00                 	db	high _Queue0
   185  00035A  04                 	db	4
   186  00035B  8E                 	db	low _Queue1
   187  00035C  00                 	db	high _Queue1
   188  00035D  04                 	db	4
   189  00035E                     __end_of_EventQueues:
   190                           	opt stack 0
   191  00035E                     _ES_EventList:
   192                           	opt stack 0
   193  00035E  88                 	db	low _Check4Keystroke
   194  00035F  11                 	db	high _Check4Keystroke
   195  000360  4C                 	db	low _CheckButtonEvents
   196  000361  0E                 	db	high _CheckButtonEvents
   197  000362                     __end_of_ES_EventList:
   198                           	opt stack 0
   199  000362                     _DistList00:
   200                           	opt stack 0
   201  000362  1E                 	db	low _PostCan_XmitService
   202  000363  11                 	db	high _PostCan_XmitService
   203  000364                     __end_of_DistList00:
   204                           	opt stack 0
   205  0000                     _RXF0EIDH	set	3842
   206  0000                     _RXF0EIDL	set	3843
   207  0000                     _RXF0SIDH	set	3840
   208  0000                     _RXF0SIDL	set	3841
   209  0000                     _RXM0EIDH	set	3866
   210  0000                     _RXM0EIDL	set	3867
   211  0000                     _RXM0SIDH	set	3864
   212  0000                     _RXM0SIDL	set	3865
   213  0000                     _TXB0CONbits	set	3904
   214  0000                     _TXB0D0	set	3910
   215  0000                     _TXB0D1	set	3911
   216  0000                     _TXB0DLC	set	3909
   217  0000                     _TXB0EIDH	set	3907
   218  0000                     _TXB0EIDL	set	3908
   219  0000                     _TXB0SIDH	set	3905
   220  0000                     _TXB0SIDL	set	3906
   221  0000                     _ADCON1	set	4033
   222  0000                     _BRGCON1bits	set	3952
   223  0000                     _BRGCON2bits	set	3953
   224  0000                     _BRGCON3bits	set	3954
   225  0000                     _CANCON	set	3951
   226  0000                     _CANSTATbits	set	3950
   227  0000                     _CCP1CON	set	4029
   228  0000                     _CCPR1H	set	4031
   229  0000                     _CCPR1L	set	4030
   230  0000                     _CIOCON	set	3955
   231  0000                     _ECANCON	set	3959
   232  0000                     _INTCON	set	4082
   233  0000                     _LATB	set	3978
   234  0000                     _LATC	set	3979
   235  0000                     _PIE1	set	3997
   236  0000                     _PORTB	set	3969
   237  0000                     _PORTC	set	3970
   238  0000                     _RXB0CONbits	set	3936
   239  0000                     _T1CON	set	4045
   240  0000                     _TRISBbits	set	3987
   241  0000                     _CCP1IF	set	31986
   242  0000                     _ERRIE	set	32029
   243  0000                     _ERRIF	set	32037
   244  0000                     _GIE	set	32663
   245  0000                     _IRCF0	set	32412
   246  0000                     _IRCF1	set	32413
   247  0000                     _IRCF2	set	32414
   248  0000                     _IRXIE	set	32031
   249  0000                     _IRXIF	set	32039
   250  0000                     _PEIE	set	32662
   251  0000                     _RXB0IE	set	32024
   252  0000                     _RXB0IF	set	32032
   253  0000                     _SCS1	set	32409
   254  0000                     _TXB0IE	set	32026
   255  0000                     _TXB0IF	set	32034
   256  000364                     STR_1:
   257  000364  46                 	db	70	;'F'
   258  000365  61                 	db	97	;'a'
   259  000366  69                 	db	105	;'i'
   260  000367  6C                 	db	108	;'l'
   261  000368  65                 	db	101	;'e'
   262  000369  64                 	db	100	;'d'
   263  00036A  20                 	db	32
   264  00036B  6F                 	db	111	;'o'
   265  00036C  6E                 	db	110	;'n'
   266  00036D  20                 	db	32
   267  00036E  61                 	db	97	;'a'
   268  00036F  74                 	db	116	;'t'
   269  000370  74                 	db	116	;'t'
   270  000371  65                 	db	101	;'e'
   271  000372  6D                 	db	109	;'m'
   272  000373  70                 	db	112	;'p'
   273  000374  74                 	db	116	;'t'
   274  000375  20                 	db	32
   275  000376  74                 	db	116	;'t'
   276  000377  6F                 	db	111	;'o'
   277  000378  20                 	db	32
   278  000379  50                 	db	80	;'P'
   279  00037A  6F                 	db	111	;'o'
   280  00037B  73                 	db	115	;'s'
   281  00037C  74                 	db	116	;'t'
   282  00037D  0A                 	db	10
   283  00037E  00                 	db	0
   284  00037F                     STR_2:
   285  00037F  46                 	db	70	;'F'
   286  000380  61                 	db	97	;'a'
   287  000381  69                 	db	105	;'i'
   288  000382  6C                 	db	108	;'l'
   289  000383  65                 	db	101	;'e'
   290  000384  64                 	db	100	;'d'
   291  000385  20                 	db	32
   292  000386  6F                 	db	111	;'o'
   293  000387  6E                 	db	110	;'n'
   294  000388  20                 	db	32
   295  000389  4E                 	db	78	;'N'
   296  00038A  55                 	db	85	;'U'
   297  00038B  4C                 	db	76	;'L'
   298  00038C  4C                 	db	76	;'L'
   299  00038D  20                 	db	32
   300  00038E  70                 	db	112	;'p'
   301  00038F  6F                 	db	111	;'o'
   302  000390  69                 	db	105	;'i'
   303  000391  6E                 	db	110	;'n'
   304  000392  74                 	db	116	;'t'
   305  000393  65                 	db	101	;'e'
   306  000394  72                 	db	114	;'r'
   307  000395  0A                 	db	10
   308  000396  00                 	db	0
   309  000397                     STR_3:
   310  000397  46                 	db	70	;'F'
   311  000398  61                 	db	97	;'a'
   312  000399  69                 	db	105	;'i'
   313  00039A  6C                 	db	108	;'l'
   314  00039B  65                 	db	101	;'e'
   315  00039C  64                 	db	100	;'d'
   316  00039D  20                 	db	32
   317  00039E  49                 	db	73	;'I'
   318  00039F  6E                 	db	110	;'n'
   319  0003A0  69                 	db	105	;'i'
   320  0003A1  74                 	db	116	;'t'
   321  0003A2  69                 	db	105	;'i'
   322  0003A3  61                 	db	97	;'a'
   323  0003A4  6C                 	db	108	;'l'
   324  0003A5  69                 	db	105	;'i'
   325  0003A6  7A                 	db	122	;'z'
   326  0003A7  61                 	db	97	;'a'
   327  0003A8  74                 	db	116	;'t'
   328  0003A9  69                 	db	105	;'i'
   329  0003AA  6F                 	db	111	;'o'
   330  0003AB  6E                 	db	110	;'n'
   331  0003AC  0A                 	db	10
   332  0003AD  00                 	db	0
   333  0003AE                     STR_4:
   334  0003AE  4F                 	db	79	;'O'
   335  0003AF  74                 	db	116	;'t'
   336  0003B0  68                 	db	104	;'h'
   337  0003B1  65                 	db	101	;'e'
   338  0003B2  72                 	db	114	;'r'
   339  0003B3  20                 	db	32
   340  0003B4  46                 	db	70	;'F'
   341  0003B5  61                 	db	97	;'a'
   342  0003B6  69                 	db	105	;'i'
   343  0003B7  6C                 	db	108	;'l'
   344  0003B8  75                 	db	117	;'u'
   345  0003B9  72                 	db	114	;'r'
   346  0003BA  65                 	db	101	;'e'
   347  0003BB  0A                 	db	10
   348  0003BC  00                 	db	0
   349                           
   350                           ; #config settings
   351  0003BD  00                 	db	0	; dummy byte at the end
   352  0000                     
   353                           	psect	cinit
   354  000EB4                     __pcinit:
   355                           	opt stack 0
   356  000EB4                     start_initialization:
   357                           	opt stack 0
   358  000EB4                     __initialization:
   359                           	opt stack 0
   360                           
   361                           ; Initialize objects allocated to BANK0 (2 bytes)
   362                           ; load TBLPTR registers with __pidataBANK0
   363  000EB4  0E8C               	movlw	low __pidataBANK0
   364  000EB6  6EF6               	movwf	tblptrl,c
   365  000EB8  0E11               	movlw	high __pidataBANK0
   366  000EBA  6EF7               	movwf	tblptrh,c
   367  000EBC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   368  000EBE  6EF8               	movwf	tblptru,c
   369  000EC0  0009               	tblrd		*+	;fetch initializer
   370  000EC2  CFF5 F0AA          	movff	tablat,__pdataBANK0
   371  000EC6  0009               	tblrd		*+	;fetch initializer
   372  000EC8  CFF5 F0AB          	movff	tablat,__pdataBANK0+1
   373                           
   374                           ; Initialize objects allocated to COMRAM (8 bytes)
   375                           ; load TBLPTR registers with __pidataCOMRAM
   376  000ECC  0E6C               	movlw	low __pidataCOMRAM
   377  000ECE  6EF6               	movwf	tblptrl,c
   378  000ED0  0E11               	movlw	high __pidataCOMRAM
   379  000ED2  6EF7               	movwf	tblptrh,c
   380  000ED4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   381  000ED6  6EF8               	movwf	tblptru,c
   382  000ED8  EE00  F047         	lfsr	0,__pdataCOMRAM
   383  000EDC  EE10 F008          	lfsr	1,8
   384  000EE0                     copy_data0:
   385  000EE0  0009               	tblrd		*+
   386  000EE2  CFF5 FFEE          	movff	tablat,postinc0
   387  000EE6  50E5               	movf	postdec1,w,c
   388  000EE8  50E1               	movf	fsr1l,w,c
   389  000EEA  E1FA               	bnz	copy_data0
   390                           
   391                           ; Clear objects allocated to BANK0 (58 bytes)
   392  000EEC  EE00  F060         	lfsr	0,__pbssBANK0
   393  000EF0  0E3A               	movlw	58
   394  000EF2                     clear_0:
   395  000EF2  6AEE               	clrf	postinc0,c
   396  000EF4  06E8               	decf	wreg,f,c
   397  000EF6  E1FD               	bnz	clear_0
   398                           
   399                           ; Clear objects allocated to COMRAM (26 bytes)
   400  000EF8  EE00  F02D         	lfsr	0,__pbssCOMRAM
   401  000EFC  0E1A               	movlw	26
   402  000EFE                     clear_1:
   403  000EFE  6AEE               	clrf	postinc0,c
   404  000F00  06E8               	decf	wreg,f,c
   405  000F02  E1FD               	bnz	clear_1
   406  000F04                     end_of_initialization:
   407                           	opt stack 0
   408  000F04                     __end_of__initialization:
   409                           	opt stack 0
   410  000F04  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   411  000F06  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   412  000F08  0E00               	movlw	low (__Lmediumconst shr (0+16))
   413  000F0A  6EF8               	movwf	tblptru,c
   414  000F0C  0100               	movlb	0
   415  000F0E  EF8D  F005         	goto	_main	;jump to C main() function
   416                           tblptru	equ	0xFF8
   417                           tblptrh	equ	0xFF7
   418                           tblptrl	equ	0xFF6
   419                           tablat	equ	0xFF5
   420                           postinc0	equ	0xFEE
   421                           wreg	equ	0xFE8
   422                           postdec1	equ	0xFE5
   423                           fsr1l	equ	0xFE1
   424                           
   425                           	psect	bssCOMRAM
   426  00002D                     __pbssCOMRAM:
   427                           	opt stack 0
   428  00002D                     ES_Timer_Tick_Resp@NewEvent:
   429                           	opt stack 0
   430  00002D                     	ds	3
   431  000030                     ES_Timer_Tick_Resp@NeedsProcessing:
   432                           	opt stack 0
   433  000030                     	ds	2
   434  000032                     ISR@LastTime:
   435                           	opt stack 0
   436  000032                     	ds	2
   437  000034                     ISR@NextTime:
   438                           	opt stack 0
   439  000034                     	ds	2
   440  000036                     _Ready:
   441                           	opt stack 0
   442  000036                     	ds	2
   443  000038                     _SysTickCounter:
   444                           	opt stack 0
   445  000038                     	ds	2
   446  00003A                     _TMR_ActiveFlags:
   447                           	opt stack 0
   448  00003A                     	ds	2
   449  00003C                     Can_XmitService@MyPriority:
   450                           	opt stack 0
   451  00003C                     	ds	1
   452  00003D                     ES_Timer_Tick_Resp@NextTimer2Process:
   453                           	opt stack 0
   454  00003D                     	ds	1
   455  00003E                     _CurrentState:
   456                           	opt stack 0
   457  00003E                     	ds	1
   458  00003F                     _IsListening:
   459                           	opt stack 0
   460  00003F                     	ds	1
   461  000040                     _LastButtonState:
   462                           	opt stack 0
   463  000040                     	ds	1
   464  000041                     _MyPriority:
   465                           	opt stack 0
   466  000041                     	ds	1
   467  000042                     _TickCount:
   468                           	opt stack 0
   469  000042                     	ds	1
   470  000043                     ES_Run@ThisEvent:
   471                           	opt stack 0
   472  000043                     	ds	3
   473  000046                     _IdleData:
   474                           	opt stack 0
   475  000046                     	ds	1
   476                           tblptru	equ	0xFF8
   477                           tblptrh	equ	0xFF7
   478                           tblptrl	equ	0xFF6
   479                           tablat	equ	0xFF5
   480                           postinc0	equ	0xFEE
   481                           wreg	equ	0xFE8
   482                           postdec1	equ	0xFE5
   483                           fsr1l	equ	0xFE1
   484                           
   485                           	psect	dataCOMRAM
   486  000047                     __pdataCOMRAM:
   487                           	opt stack 0
   488  000047                     _ListeningIdleData:
   489                           	opt stack 0
   490  000047                     	ds	2
   491  000049                     _ListeningLeftData:
   492                           	opt stack 0
   493  000049                     	ds	2
   494  00004B                     _ListeningRightData:
   495                           	opt stack 0
   496  00004B                     	ds	2
   497  00004D                     _LoadingData:
   498                           	opt stack 0
   499  00004D                     	ds	1
   500  00004E                     _SpeakingData:
   501                           	opt stack 0
   502  00004E                     	ds	1
   503                           tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           postinc0	equ	0xFEE
   508                           wreg	equ	0xFE8
   509                           postdec1	equ	0xFE5
   510                           fsr1l	equ	0xFE1
   511                           
   512                           	psect	bssBANK0
   513  000060                     __pbssBANK0:
   514                           	opt stack 0
   515  000060                     _TMR_TimerArray:
   516                           	opt stack 0
   517  000060                     	ds	32
   518  000080                     __PRIMASK_temp:
   519                           	opt stack 0
   520  000080                     	ds	2
   521  000082                     _Queue0:
   522                           	opt stack 0
   523  000082                     	ds	12
   524  00008E                     _Queue1:
   525                           	opt stack 0
   526  00008E                     	ds	12
   527                           tblptru	equ	0xFF8
   528                           tblptrh	equ	0xFF7
   529                           tblptrl	equ	0xFF6
   530                           tablat	equ	0xFF5
   531                           postinc0	equ	0xFEE
   532                           wreg	equ	0xFE8
   533                           postdec1	equ	0xFE5
   534                           fsr1l	equ	0xFE1
   535                           
   536                           	psect	dataBANK0
   537  0000AA                     __pdataBANK0:
   538                           	opt stack 0
   539  0000AA                     _ListeningCenterData:
   540                           	opt stack 0
   541  0000AA                     	ds	2
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           postinc0	equ	0xFEE
   547                           wreg	equ	0xFE8
   548                           postdec1	equ	0xFE5
   549                           fsr1l	equ	0xFE1
   550                           
   551                           	psect	cstackBANK0
   552  00009A                     __pcstackBANK0:
   553                           	opt stack 0
   554  00009A                     ES_PostAll@i:
   555                           	opt stack 0
   556  00009A                     ES_PostToService@WhichService:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x0
   560  00009A                     	ds	1
   561  00009B                     ?_RunCan_XmitService:
   562                           	opt stack 0
   563  00009B                     ?_RunButtonDebounceSM:
   564                           	opt stack 0
   565  00009B                     PostButtonDebounceSM@ThisEvent:
   566                           	opt stack 0
   567  00009B                     RunButtonDebounceSM@ThisEvent:
   568                           	opt stack 0
   569  00009B                     InitCan_XmitService@ThisEvent:
   570                           	opt stack 0
   571  00009B                     PostCan_XmitService@ThisEvent:
   572                           	opt stack 0
   573  00009B                     RunCan_XmitService@ThisEvent:
   574                           	opt stack 0
   575                           
   576                           ; 3 bytes @ 0x1
   577  00009B                     	ds	3
   578  00009E                     ??_RunCan_XmitService:
   579  00009E                     ??_ES_Timer_Tick_Resp:
   580  00009E                     CheckButtonEvents@ReturnVal:
   581                           	opt stack 0
   582  00009E                     InitCan_XmitService@Priority:
   583                           	opt stack 0
   584  00009E                     RunButtonDebounceSM@ReturnEvent:
   585                           	opt stack 0
   586                           
   587                           ; 3 bytes @ 0x4
   588  00009E                     	ds	1
   589  00009F                     ES_Initialize@NewRate:
   590                           	opt stack 0
   591  00009F                     CheckButtonEvents@ThisEvent:
   592                           	opt stack 0
   593                           
   594                           ; 3 bytes @ 0x5
   595  00009F                     	ds	1
   596  0000A0                     RunCan_XmitService@ReturnEvent:
   597                           	opt stack 0
   598                           
   599                           ; 3 bytes @ 0x6
   600  0000A0                     	ds	1
   601  0000A1                     ES_Initialize@i:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x7
   605  0000A1                     	ds	1
   606  0000A2                     CheckButtonEvents@CurrentButtonState:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x8
   610  0000A2                     	ds	1
   611  0000A3                     ES_CheckUserEvents@i:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x9
   615  0000A3                     	ds	1
   616  0000A4                     ??_ES_Run:
   617                           
   618                           ; 1 bytes @ 0xA
   619  0000A4                     	ds	4
   620  0000A8                     ES_Run@HighestPrior:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0xE
   624  0000A8                     	ds	1
   625  0000A9                     main@ErrorType:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0xF
   629  0000A9                     	ds	1
   630                           tblptru	equ	0xFF8
   631                           tblptrh	equ	0xFF7
   632                           tblptrl	equ	0xFF6
   633                           tablat	equ	0xFF5
   634                           postinc0	equ	0xFEE
   635                           wreg	equ	0xFE8
   636                           postdec1	equ	0xFE5
   637                           fsr1l	equ	0xFE1
   638                           
   639                           	psect	cstackCOMRAM
   640  000001                     __pcstackCOMRAM:
   641                           	opt stack 0
   642  000001                     ??_ISR:
   643  000001                     
   644                           ; 1 bytes @ 0x0
   645  000001                     	ds	16
   646  000011                     ??_ES_Timer_StopTimer:
   647  000011                     ?_printf:
   648                           	opt stack 0
   649  000011                     ?___awmod:
   650                           	opt stack 0
   651  000011                     ___lbmod@divisor:
   652                           	opt stack 0
   653  000011                     ES_GetMSBitSet@Val2Check:
   654                           	opt stack 0
   655  000011                     __HW_Timer_Init@Rate:
   656                           	opt stack 0
   657  000011                     ES_InitQueue@pBlock:
   658                           	opt stack 0
   659  000011                     ES_Timer_InitTimer@NewTime:
   660                           	opt stack 0
   661  000011                     XmitData@DataBytes:
   662                           	opt stack 0
   663  000011                     printf@f:
   664                           	opt stack 0
   665  000011                     ___awmod@dividend:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x10
   669  000011                     	ds	1
   670  000012                     ___lbmod@dividend:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0x11
   674  000012                     	ds	1
   675  000013                     ??_ES_Timer_InitTimer:
   676  000013                     ??_ES_GetMSBitSet:
   677  000013                     ES_InitQueue@BlockSize:
   678                           	opt stack 0
   679  000013                     XmitData@numBytes:
   680                           	opt stack 0
   681  000013                     ___lbmod@counter:
   682                           	opt stack 0
   683  000013                     ES_Timer_Init@Rate:
   684                           	opt stack 0
   685  000013                     printf@ap:
   686                           	opt stack 0
   687  000013                     ___awmod@divisor:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x12
   691  000013                     	ds	1
   692  000014                     ___lbmod@rem:
   693                           	opt stack 0
   694  000014                     ES_InitQueue@pThisQueue:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x13
   698  000014                     	ds	1
   699  000015                     ES_Timer_StopTimer@Num:
   700                           	opt stack 0
   701  000015                     ES_Timer_InitTimer@Num:
   702                           	opt stack 0
   703  000015                     printf@c:
   704                           	opt stack 0
   705  000015                     ___awmod@counter:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x14
   709  000015                     	ds	1
   710  000016                     InitializeButtonDebounce@Priority:
   711                           	opt stack 0
   712  000016                     ___awmod@sign:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0x15
   716  000016                     	ds	1
   717  000017                     ?___wmul:
   718                           	opt stack 0
   719  000017                     ___wmul@multiplier:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x16
   723  000017                     	ds	1
   724  000018                     ES_GetMSBitSet@ReturnVal:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0x17
   728  000018                     	ds	1
   729  000019                     ES_GetMSBitSet@Nybble2Test:
   730                           	opt stack 0
   731  000019                     ___wmul@multiplicand:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0x18
   735  000019                     	ds	1
   736  00001A                     ES_GetMSBitSet@LoopCntr:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x19
   740  00001A                     	ds	1
   741  00001B                     ___wmul@product:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x1A
   745  00001B                     	ds	2
   746  00001D                     ES_EnQueueFIFO@pBlock:
   747                           	opt stack 0
   748  00001D                     ES_DeQueue@pBlock:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x1C
   752  00001D                     	ds	2
   753  00001F                     ES_DeQueue@pReturnEvent:
   754                           	opt stack 0
   755  00001F                     ES_EnQueueFIFO@Event2Add:
   756                           	opt stack 0
   757                           
   758                           ; 3 bytes @ 0x1E
   759  00001F                     	ds	2
   760  000021                     ??_ES_DeQueue:
   761                           
   762                           ; 1 bytes @ 0x20
   763  000021                     	ds	1
   764  000022                     ??_ES_EnQueueFIFO:
   765                           
   766                           ; 1 bytes @ 0x21
   767  000022                     	ds	1
   768  000023                     ES_DeQueue@SaveCrit:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x22
   772  000023                     	ds	1
   773  000024                     ES_DeQueue@NumLeft:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x23
   777  000024                     	ds	1
   778  000025                     ES_EnQueueFIFO@SaveCrit:
   779                           	opt stack 0
   780  000025                     ES_DeQueue@pThisQueue:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x24
   784  000025                     	ds	1
   785  000026                     ES_EnQueueFIFO@pThisQueue:
   786                           	opt stack 0
   787                           
   788                           ; 2 bytes @ 0x25
   789  000026                     	ds	2
   790  000028                     ES_PostAll@ThisEvent:
   791                           	opt stack 0
   792  000028                     ES_PostToService@TheEvent:
   793                           	opt stack 0
   794                           
   795                           ; 3 bytes @ 0x27
   796  000028                     	ds	3
   797  00002B                     ??_ES_PostToService:
   798  00002B                     ??_ES_PostAll:
   799                           
   800                           ; 1 bytes @ 0x2A
   801  00002B                     	ds	2
   802  00002D                     tblptru	equ	0xFF8
   803                           tblptrh	equ	0xFF7
   804                           tblptrl	equ	0xFF6
   805                           tablat	equ	0xFF5
   806                           postinc0	equ	0xFEE
   807                           wreg	equ	0xFE8
   808                           postdec1	equ	0xFE5
   809                           fsr1l	equ	0xFE1
   810                           
   811                           ; 1 bytes @ 0x2C
   812 ;;
   813 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   814 ;;
   815 ;; *************** function _main *****************
   816 ;; Defined at:
   817 ;;		line 25 in file "main.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  ErrorType       1   15[BANK0 ] enum E15644
   822 ;; Return value:  Size  Location     Type
   823 ;;                  2  361[None  ] int 
   824 ;; Registers used:
   825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   831 ;;      Params:         0       0       0       0
   832 ;;      Locals:         0       1       0       0
   833 ;;      Temps:          0       0       0       0
   834 ;;      Totals:         0       1       0       0
   835 ;;Total ram usage:        1 bytes
   836 ;; Hardware stack levels required when called:    9
   837 ;; This function calls:
   838 ;;		_ES_Initialize
   839 ;;		_ES_Run
   840 ;;		_printf
   841 ;; This function is called by:
   842 ;;		Startup code after reset
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text0
   847  000B1A                     __ptext0:
   848                           	opt stack 0
   849  000B1A                     _main:
   850                           	opt stack 22
   851                           
   852                           ;main.c: 28: IRCF0 = 1;
   853                           
   854                           ;incstack = 0
   855  000B1A  88D3               	bsf	4051,4,c	;volatile
   856                           
   857                           ;main.c: 29: IRCF1 = 1;
   858  000B1C  8AD3               	bsf	4051,5,c	;volatile
   859                           
   860                           ;main.c: 30: IRCF2 = 1;
   861  000B1E  8CD3               	bsf	4051,6,c	;volatile
   862                           
   863                           ;main.c: 31: SCS1 = 1;
   864  000B20  82D3               	bsf	4051,1,c	;volatile
   865                           
   866                           ;main.c: 32: ADCON1 = 0x0F;
   867  000B22  0E0F               	movlw	15
   868  000B24  6EC1               	movwf	4033,c	;volatile
   869                           
   870                           ;main.c: 40: ES_Return_t ErrorType;
   871                           ;main.c: 56: ErrorType = ES_Initialize(ES_Timer_RATE_1mS);
   872  000B26  0E9C               	movlw	156
   873  000B28  0100               	movlb	0	; () banked
   874  000B2A  6FA0               	movwf	(ES_Initialize@NewRate+1)& (0+255),b
   875  000B2C  0E3F               	movlw	63
   876  000B2E  6F9F               	movwf	ES_Initialize@NewRate& (0+255),b
   877  000B30  ECA1  F003         	call	_ES_Initialize	;wreg free
   878  000B34  0100               	movlb	0	; () banked
   879  000B36  6FA9               	movwf	main@ErrorType& (0+255),b
   880                           
   881                           ; BSR set to: 0
   882                           ;main.c: 57: if ( ErrorType == Success ) {
   883  000B38  0100               	movlb	0	; () banked
   884  000B3A  51A9               	movf	main@ErrorType& (0+255),w,b
   885  000B3C  0100               	movlb	0	; () banked
   886  000B3E  A4D8               	btfss	status,2,c
   887  000B40  D021               	goto	l3252
   888                           
   889                           ; BSR set to: 0
   890                           ;main.c: 59: ErrorType = ES_Run();
   891  000B42  EC17  F004         	call	_ES_Run	;wreg free
   892  000B46  0100               	movlb	0	; () banked
   893  000B48  6FA9               	movwf	main@ErrorType& (0+255),b
   894                           
   895                           ; BSR set to: 0
   896                           ;main.c: 61: }
   897                           ;main.c: 63: switch (ErrorType){
   898  000B4A  D01C               	goto	l3252
   899  000B4C                     l3242:
   900                           
   901                           ; BSR set to: 0
   902                           ;main.c: 65: printf("Failed on attempt to Post\n");
   903  000B4C  0E64               	movlw	low STR_1
   904  000B4E  6E11               	movwf	printf@f,c
   905  000B50  0E03               	movlw	high STR_1
   906  000B52  6E12               	movwf	printf@f+1,c
   907  000B54  EC26  F008         	call	_printf	;wreg free
   908                           
   909                           ;main.c: 66: break;
   910  000B58  D021               	goto	l369
   911  000B5A                     l3244:
   912                           
   913                           ;main.c: 68: printf("Failed on NULL pointer\n");
   914  000B5A  0E7F               	movlw	low STR_2
   915  000B5C  6E11               	movwf	printf@f,c
   916  000B5E  0E03               	movlw	high STR_2
   917  000B60  6E12               	movwf	printf@f+1,c
   918  000B62  EC26  F008         	call	_printf	;wreg free
   919                           
   920                           ;main.c: 69: break;
   921  000B66  D01A               	goto	l369
   922  000B68                     l3246:
   923                           
   924                           ;main.c: 71: printf("Failed Initialization\n");
   925  000B68  0E97               	movlw	low STR_3
   926  000B6A  6E11               	movwf	printf@f,c
   927  000B6C  0E03               	movlw	high STR_3
   928  000B6E  6E12               	movwf	printf@f+1,c
   929  000B70  EC26  F008         	call	_printf	;wreg free
   930                           
   931                           ;main.c: 72: break;
   932  000B74  D013               	goto	l369
   933  000B76                     l3248:
   934                           
   935                           ;main.c: 74: printf("Other Failure\n");
   936  000B76  0EAE               	movlw	low STR_4
   937  000B78  6E11               	movwf	printf@f,c
   938  000B7A  0E03               	movlw	high STR_4
   939  000B7C  6E12               	movwf	printf@f+1,c
   940  000B7E  EC26  F008         	call	_printf	;wreg free
   941                           
   942                           ;main.c: 76: }
   943                           
   944                           ;main.c: 75: break;
   945  000B82  D00C               	goto	l369
   946  000B84                     l3252:
   947  000B84  0100               	movlb	0	; () banked
   948  000B86  51A9               	movf	main@ErrorType& (0+255),w,b
   949                           
   950                           ; Switch size 1, requested type "space"
   951                           ; Number of cases is 3, Range of values is 1 to 5
   952                           ; switch strategies available:
   953                           ; Name         Instructions Cycles
   954                           ; simple_byte           10     6 (average)
   955                           ;	Chosen strategy is simple_byte
   956  000B88  0A01               	xorlw	1	; case 1
   957  000B8A  B4D8               	btfsc	status,2,c
   958  000B8C  D7DF               	goto	l3242
   959  000B8E  0A02               	xorlw	2	; case 3
   960  000B90  B4D8               	btfsc	status,2,c
   961  000B92  D7E3               	goto	l3244
   962  000B94  0A06               	xorlw	6	; case 5
   963  000B96  B4D8               	btfsc	status,2,c
   964  000B98  D7E7               	goto	l3246
   965  000B9A  D7ED               	goto	l3248
   966  000B9C                     l369:
   967                           
   968                           ;main.c: 78: ;
   969  000B9C  D7FF               	goto	l369
   970  000B9E                     __end_of_main:
   971                           	opt stack 0
   972                           tblptru	equ	0xFF8
   973                           tblptrh	equ	0xFF7
   974                           tblptrl	equ	0xFF6
   975                           tablat	equ	0xFF5
   976                           postinc0	equ	0xFEE
   977                           wreg	equ	0xFE8
   978                           postdec1	equ	0xFE5
   979                           fsr1l	equ	0xFE1
   980                           status	equ	0xFD8
   981                           
   982 ;; *************** function _printf *****************
   983 ;; Defined at:
   984 ;;		line 464 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  f               2   16[COMRAM] PTR const unsigned char 
   987 ;;		 -> STR_4(15), STR_3(23), STR_2(24), STR_1(27), 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  tmpval          4    0        struct .
   990 ;;  cp              3    0        PTR const unsigned char 
   991 ;;  ap              2   18[COMRAM] PTR void [1]
   992 ;;		 -> ?_printf(2), 
   993 ;;  len             2    0        unsigned int 
   994 ;;  val             2    0        unsigned int 
   995 ;;  c               1   20[COMRAM] char 
   996 ;;  flag            1    0        unsigned char 
   997 ;;  prec            1    0        char 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  2   16[COMRAM] int 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1007 ;;      Params:         2       0       0       0
  1008 ;;      Locals:         3       0       0       0
  1009 ;;      Temps:          0       0       0       0
  1010 ;;      Totals:         5       0       0       0
  1011 ;;Total ram usage:        5 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    3
  1014 ;; This function calls:
  1015 ;;		_putch
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text1
  1022  00104C                     __ptext1:
  1023                           	opt stack 0
  1024  00104C                     _printf:
  1025                           	opt stack 27
  1026                           
  1027                           ;doprnt.c: 466: va_list ap;
  1028                           ;doprnt.c: 499: signed char c;
  1029                           ;doprnt.c: 506: signed char prec;
  1030                           ;doprnt.c: 508: unsigned char flag;
  1031                           ;doprnt.c: 523: union {
  1032                           ;doprnt.c: 524: unsigned long vd;
  1033                           ;doprnt.c: 525: double integ;
  1034                           ;doprnt.c: 526: } tmpval;
  1035                           ;doprnt.c: 528: unsigned int val;
  1036                           ;doprnt.c: 529: unsigned len;
  1037                           ;doprnt.c: 530: const char * cp;
  1038                           ;doprnt.c: 533: *ap = __va_start();
  1039                           
  1040                           ;incstack = 0
  1041  00104C  0E13               	movlw	low (?_printf+2)
  1042  00104E  6E13               	movwf	printf@ap,c
  1043  001050  0E00               	movlw	high (?_printf+2)
  1044  001052  6E14               	movwf	printf@ap+1,c
  1045                           
  1046                           ;doprnt.c: 536: while(c = *f++) {
  1047  001054  D003               	goto	l3158
  1048  001056                     l3156:
  1049                           
  1050                           ;doprnt.c: 540: {
  1051                           ;doprnt.c: 541: (putch(c) );
  1052  001056  5015               	movf	printf@c,w,c
  1053  001058  ECC7  F008         	call	_putch
  1054  00105C                     l3158:
  1055  00105C  C011  FFF6         	movff	printf@f,tblptrl
  1056  001060  C012  FFF7         	movff	printf@f+1,tblptrh
  1057  001064  4A11               	infsnz	printf@f,f,c
  1058  001066  2A12               	incf	printf@f+1,f,c
  1059  001068                     	if	0	;tblptru may be non-zero
  1060  001068                     	endif
  1061  001068                     	if	0	;tblptru may be non-zero
  1062  001068                     	endif
  1063  001068  0008               	tblrd		*
  1064  00106A  CFF5 F015          	movff	tablat,printf@c
  1065  00106E  5015               	movf	printf@c,w,c
  1066  001070  B4D8               	btfsc	status,2,c
  1067  001072  0012               	return	
  1068  001074  D7F0               	goto	l3156
  1069  001076                     __end_of_printf:
  1070                           	opt stack 0
  1071                           tblptru	equ	0xFF8
  1072                           tblptrh	equ	0xFF7
  1073                           tblptrl	equ	0xFF6
  1074                           tablat	equ	0xFF5
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           postdec1	equ	0xFE5
  1078                           fsr1l	equ	0xFE1
  1079                           status	equ	0xFD8
  1080                           
  1081 ;; *************** function _putch *****************
  1082 ;; Defined at:
  1083 ;;		line 7 in file "/Applications/microchip/xc8/v1.38/sources/common/putch.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  c               1    wreg     unsigned char 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  c               1    0[COMRAM] unsigned char 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1097 ;;      Params:         0       0       0       0
  1098 ;;      Locals:         0       0       0       0
  1099 ;;      Temps:          0       0       0       0
  1100 ;;      Totals:         0       0       0       0
  1101 ;;Total ram usage:        0 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; Hardware stack levels required when called:    2
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_printf
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text2
  1112  00118E                     __ptext2:
  1113                           	opt stack 0
  1114  00118E                     _putch:
  1115                           	opt stack 27
  1116                           
  1117                           ;incstack = 0
  1118  00118E  0012               	return		;funcret
  1119  001190                     __end_of_putch:
  1120                           	opt stack 0
  1121                           tblptru	equ	0xFF8
  1122                           tblptrh	equ	0xFF7
  1123                           tblptrl	equ	0xFF6
  1124                           tablat	equ	0xFF5
  1125                           postinc0	equ	0xFEE
  1126                           wreg	equ	0xFE8
  1127                           postdec1	equ	0xFE5
  1128                           fsr1l	equ	0xFE1
  1129                           status	equ	0xFD8
  1130                           
  1131 ;; *************** function _ES_Run *****************
  1132 ;; Defined at:
  1133 ;;		line 277 in file "ES_Framework.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;		None
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  HighestPrior    1   14[BANK0 ] unsigned char 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      enum E15492
  1140 ;; Registers used:
  1141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1147 ;;      Params:         0       0       0       0
  1148 ;;      Locals:         0       1       0       0
  1149 ;;      Temps:          0       4       0       0
  1150 ;;      Totals:         0       5       0       0
  1151 ;;Total ram usage:        5 bytes
  1152 ;; Hardware stack levels used:    1
  1153 ;; Hardware stack levels required when called:    8
  1154 ;; This function calls:
  1155 ;;		_ES_CheckUserEvents
  1156 ;;		_ES_DeQueue
  1157 ;;		_ES_GetMSBitSet
  1158 ;;		_RunButtonDebounceSM
  1159 ;;		_RunCan_XmitService
  1160 ;;		__HW_Process_Pending_Ints
  1161 ;; This function is called by:
  1162 ;;		_main
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text3
  1167  00082E                     __ptext3:
  1168                           	opt stack 0
  1169  00082E                     _ES_Run:
  1170                           	opt stack 22
  1171                           
  1172                           ;ES_Framework.c: 287: while( (_HW_Process_Pending_Ints()) && (Ready != 0)){
  1173                           
  1174                           ;incstack = 0
  1175                           ;ES_Framework.c: 279: uint8_t HighestPrior;
  1176                           ;ES_Framework.c: 280: static ES_Event ThisEvent;
  1177                           ;ES_Framework.c: 282: while(1){
  1178  00082E  D067               	goto	l3144
  1179  000830                     l3132:
  1180                           
  1181                           ;ES_Framework.c: 288: HighestPrior = ES_GetMSBitSet(Ready);
  1182  000830  C036  F011         	movff	_Ready,ES_GetMSBitSet@Val2Check
  1183  000834  C037  F012         	movff	_Ready+1,ES_GetMSBitSet@Val2Check+1
  1184  000838  EC11  F006         	call	_ES_GetMSBitSet	;wreg free
  1185  00083C  0100               	movlb	0	; () banked
  1186  00083E  6FA8               	movwf	ES_Run@HighestPrior& (0+255),b
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;ES_Framework.c: 289: if ( ES_DeQueue( EventQueues[HighestPrior].pMem, &ThisEvent ) == 0
      +                           ){
  1190  000840  0100               	movlb	0	; () banked
  1191  000842  51A8               	movf	ES_Run@HighestPrior& (0+255),w,b
  1192  000844  0D03               	mullw	3
  1193  000846  0E58               	movlw	low _EventQueues
  1194  000848  24F3               	addwf	prodl,w,c
  1195  00084A  6EF6               	movwf	tblptrl,c
  1196  00084C  0E03               	movlw	high _EventQueues
  1197  00084E  20F4               	addwfc	prodh,w,c
  1198  000850  6EF7               	movwf	tblptrh,c
  1199  000852                     	if	0	;There are less than 3 active tblptr bytes
  1200  000852                     	endif
  1201  000852  0009               	tblrd		*+
  1202  000854  CFF5 F01D          	movff	tablat,ES_DeQueue@pBlock
  1203  000858  000A               	tblrd		*-
  1204  00085A  CFF5 F01E          	movff	tablat,ES_DeQueue@pBlock+1
  1205  00085E  0E43               	movlw	low ES_Run@ThisEvent
  1206  000860  6E1F               	movwf	ES_DeQueue@pReturnEvent,c
  1207  000862  0E00               	movlw	high ES_Run@ThisEvent
  1208  000864  6E20               	movwf	ES_DeQueue@pReturnEvent+1,c
  1209  000866  ECA6  F002         	call	_ES_DeQueue	;wreg free
  1210  00086A  0900               	iorlw	0
  1211  00086C  A4D8               	btfss	status,2,c
  1212  00086E  D01D               	goto	l3138
  1213                           
  1214                           ;ES_Framework.c: 290: Ready &= ~BitNum2SetMask[HighestPrior];
  1215  000870  0100               	movlb	0	; () banked
  1216  000872  51A8               	movf	ES_Run@HighestPrior& (0+255),w,b
  1217  000874  0D02               	mullw	2
  1218  000876  0E01               	movlw	low _BitNum2SetMask
  1219  000878  24F3               	addwf	prodl,w,c
  1220  00087A  6EF6               	movwf	tblptrl,c
  1221  00087C  0E03               	movlw	high _BitNum2SetMask
  1222  00087E  20F4               	addwfc	prodh,w,c
  1223  000880  6EF7               	movwf	tblptrh,c
  1224  000882                     	if	0	;There are less than 3 active tblptr bytes
  1225  000882                     	endif
  1226  000882  0009               	tblrd		*+
  1227  000884  CFF5 F0A4          	movff	tablat,??_ES_Run
  1228  000888  0009               	tblrd		*+
  1229  00088A  CFF5 F0A5          	movff	tablat,??_ES_Run+1
  1230  00088E  0100               	movlb	0	; () banked
  1231  000890  1DA4               	comf	??_ES_Run& (0+255),w,b
  1232  000892  0100               	movlb	0	; () banked
  1233  000894  6FA6               	movwf	(??_ES_Run+2)& (0+255),b
  1234  000896  0100               	movlb	0	; () banked
  1235  000898  1DA5               	comf	(??_ES_Run+1)& (0+255),w,b
  1236  00089A  0100               	movlb	0	; () banked
  1237  00089C  6FA7               	movwf	(??_ES_Run+3)& (0+255),b
  1238  00089E  0100               	movlb	0	; () banked
  1239  0008A0  51A6               	movf	(??_ES_Run+2)& (0+255),w,b
  1240  0008A2  1636               	andwf	_Ready,f,c
  1241  0008A4  0100               	movlb	0	; () banked
  1242  0008A6  51A7               	movf	(??_ES_Run+3)& (0+255),w,b
  1243  0008A8  1637               	andwf	_Ready+1,f,c
  1244  0008AA                     l3138:
  1245                           
  1246                           ;ES_Framework.c: 291: }
  1247                           ;ES_Framework.c: 292: if( ServDescList[HighestPrior].RunFunc(ThisEvent).EventType != ES_
      +                          NO_EVENT) {
  1248  0008AA  C043  F09B         	movff	ES_Run@ThisEvent,RunCan_XmitService@ThisEvent
  1249  0008AE  C044  F09C         	movff	ES_Run@ThisEvent+1,RunCan_XmitService@ThisEvent+1
  1250  0008B2  C045  F09D         	movff	ES_Run@ThisEvent+2,RunCan_XmitService@ThisEvent+2
  1251  0008B6  0100               	movlb	0	; () banked
  1252  0008B8  51A8               	movf	ES_Run@HighestPrior& (0+255),w,b
  1253  0008BA  0D04               	mullw	4
  1254  0008BC  0E02               	movlw	2
  1255  0008BE  26F3               	addwf	prodl,f,c
  1256  0008C0  0E00               	movlw	0
  1257  0008C2  22F4               	addwfc	prodh,f,c
  1258  0008C4  0E50               	movlw	low _ServDescList
  1259  0008C6  24F3               	addwf	prodl,w,c
  1260  0008C8  6EF6               	movwf	tblptrl,c
  1261  0008CA  0E03               	movlw	high _ServDescList
  1262  0008CC  20F4               	addwfc	prodh,w,c
  1263  0008CE  6EF7               	movwf	tblptrh,c
  1264  0008D0                     	if	0	;There are less than 3 active tblptr bytes
  1265  0008D0                     	endif
  1266  0008D0  D801               	call	u2148
  1267  0008D2  D00C               	goto	u2149
  1268  0008D4                     u2148:
  1269  0008D4  0005               	push	
  1270  0008D6  6EFA               	movwf	pclath,c
  1271  0008D8  0009               	tblrd		*+
  1272  0008DA  50F5               	movf	tablat,w,c
  1273  0008DC  6EFD               	movwf	tosl,c
  1274  0008DE  0009               	tblrd		*+
  1275  0008E0  50F5               	movf	tablat,w,c
  1276  0008E2  6EFE               	movwf	tosh,c
  1277  0008E4  50F8               	movf	tblptru,w,c
  1278  0008E6  6EFF               	movwf	tosu,c
  1279  0008E8  50FA               	movf	pclath,w,c
  1280  0008EA  0012               	return		;indir
  1281  0008EC                     u2149:
  1282  0008EC  0E9B               	movlw	low ?_RunCan_XmitService
  1283  0008EE  6ED9               	movwf	fsr2l,c
  1284  0008F0  0E00               	movlw	high ?_RunCan_XmitService
  1285  0008F2  6EDA               	movwf	fsr2h,c
  1286  0008F4  50DF               	movf	indf2,w,c
  1287  0008F6  B4D8               	btfsc	status,2,c
  1288  0008F8  D002               	goto	l3144
  1289                           
  1290                           ;ES_Framework.c: 293: return FailedRun;
  1291  0008FA  0E02               	movlw	2
  1292  0008FC  0012               	return	
  1293  0008FE                     l3144:
  1294  0008FE  EC99  F008         	call	__HW_Process_Pending_Ints	;wreg free
  1295  000902  0900               	iorlw	0
  1296  000904  B4D8               	btfsc	status,2,c
  1297  000906  D004               	goto	l3148
  1298  000908  5036               	movf	_Ready,w,c
  1299  00090A  1037               	iorwf	_Ready+1,w,c
  1300  00090C  A4D8               	btfss	status,2,c
  1301  00090E  D790               	goto	l3132
  1302  000910                     l3148:
  1303                           
  1304                           ;ES_Framework.c: 294: }
  1305                           ;ES_Framework.c: 295: }
  1306                           ;ES_Framework.c: 298: ES_CheckUserEvents();
  1307  000910  ECB3  F007         	call	_ES_CheckUserEvents	;wreg free
  1308  000914  D7F4               	goto	l3144
  1309  000916                     __end_of_ES_Run:
  1310                           	opt stack 0
  1311                           tosu	equ	0xFFF
  1312                           tosh	equ	0xFFE
  1313                           tosl	equ	0xFFD
  1314                           pclath	equ	0xFFA
  1315                           tblptru	equ	0xFF8
  1316                           tblptrh	equ	0xFF7
  1317                           tblptrl	equ	0xFF6
  1318                           tablat	equ	0xFF5
  1319                           prodh	equ	0xFF4
  1320                           prodl	equ	0xFF3
  1321                           postinc0	equ	0xFEE
  1322                           wreg	equ	0xFE8
  1323                           postdec1	equ	0xFE5
  1324                           fsr1l	equ	0xFE1
  1325                           indf2	equ	0xFDF
  1326                           fsr2h	equ	0xFDA
  1327                           fsr2l	equ	0xFD9
  1328                           status	equ	0xFD8
  1329                           
  1330 ;; *************** function __HW_Process_Pending_Ints *****************
  1331 ;; Defined at:
  1332 ;;		line 220 in file "ES_Port.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;		None
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      unsigned char 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1346 ;;      Params:         0       0       0       0
  1347 ;;      Locals:         0       0       0       0
  1348 ;;      Temps:          0       0       0       0
  1349 ;;      Totals:         0       0       0       0
  1350 ;;Total ram usage:        0 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    7
  1353 ;; This function calls:
  1354 ;;		_ES_Timer_Tick_Resp
  1355 ;; This function is called by:
  1356 ;;		_ES_Run
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text4
  1361  001132                     __ptext4:
  1362                           	opt stack 0
  1363  001132                     __HW_Process_Pending_Ints:
  1364                           	opt stack 22
  1365                           
  1366                           ;ES_Port.c: 222: while (TickCount > 0)
  1367                           
  1368                           ;incstack = 0
  1369  001132  D003               	goto	l3004
  1370  001134                     l3000:
  1371                           
  1372                           ;ES_Port.c: 223: {
  1373                           ;ES_Port.c: 225: ES_Timer_Tick_Resp();
  1374  001134  EC25  F003         	call	_ES_Timer_Tick_Resp	;wreg free
  1375                           
  1376                           ;ES_Port.c: 226: TickCount--;
  1377  001138  0642               	decf	_TickCount,f,c	;volatile
  1378  00113A                     l3004:
  1379  00113A  5042               	movf	_TickCount,w,c	;volatile
  1380  00113C  A4D8               	btfss	status,2,c
  1381  00113E  D7FA               	goto	l3000
  1382                           
  1383                           ;ES_Port.c: 227: }
  1384                           ;ES_Port.c: 229: return 1;
  1385  001140  0E01               	movlw	1
  1386  001142  0012               	return	
  1387  001144                     __end_of__HW_Process_Pending_Ints:
  1388                           	opt stack 0
  1389                           tosu	equ	0xFFF
  1390                           tosh	equ	0xFFE
  1391                           tosl	equ	0xFFD
  1392                           pclath	equ	0xFFA
  1393                           tblptru	equ	0xFF8
  1394                           tblptrh	equ	0xFF7
  1395                           tblptrl	equ	0xFF6
  1396                           tablat	equ	0xFF5
  1397                           prodh	equ	0xFF4
  1398                           prodl	equ	0xFF3
  1399                           postinc0	equ	0xFEE
  1400                           wreg	equ	0xFE8
  1401                           postdec1	equ	0xFE5
  1402                           fsr1l	equ	0xFE1
  1403                           indf2	equ	0xFDF
  1404                           fsr2h	equ	0xFDA
  1405                           fsr2l	equ	0xFD9
  1406                           status	equ	0xFD8
  1407                           
  1408 ;; *************** function _ES_Timer_Tick_Resp *****************
  1409 ;; Defined at:
  1410 ;;		line 284 in file "ES_Timers.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1424 ;;      Params:         0       0       0       0
  1425 ;;      Locals:         0       0       0       0
  1426 ;;      Temps:          0       4       0       0
  1427 ;;      Totals:         0       4       0       0
  1428 ;;Total ram usage:        4 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; Hardware stack levels required when called:    6
  1431 ;; This function calls:
  1432 ;;		Absolute function
  1433 ;;		_ES_GetMSBitSet
  1434 ;;		_PostButtonDebounceSM
  1435 ;;		_PostCan_XmitService
  1436 ;; This function is called by:
  1437 ;;		__HW_Process_Pending_Ints
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text5
  1442  00064A                     __ptext5:
  1443                           	opt stack 0
  1444  00064A                     _ES_Timer_Tick_Resp:
  1445                           	opt stack 22
  1446                           
  1447                           ;ES_Timers.c: 286: static Tflag_t NeedsProcessing;
  1448                           ;ES_Timers.c: 287: static uint8_t NextTimer2Process;
  1449                           ;ES_Timers.c: 288: static ES_Event NewEvent;
  1450                           ;ES_Timers.c: 290: if (TMR_ActiveFlags != 0)
  1451                           
  1452                           ;incstack = 0
  1453  00064A  503A               	movf	_TMR_ActiveFlags,w,c
  1454  00064C  103B               	iorwf	_TMR_ActiveFlags+1,w,c
  1455  00064E  B4D8               	btfsc	status,2,c
  1456  000650  0012               	return	
  1457                           
  1458                           ;ES_Timers.c: 291: {
  1459                           ;ES_Timers.c: 293: NeedsProcessing = TMR_ActiveFlags;
  1460  000652  C03A  F030         	movff	_TMR_ActiveFlags,ES_Timer_Tick_Resp@NeedsProcessing
  1461  000656  C03B  F031         	movff	_TMR_ActiveFlags+1,ES_Timer_Tick_Resp@NeedsProcessing+1
  1462  00065A                     l2782:
  1463                           
  1464                           ;ES_Timers.c: 296: NextTimer2Process = ES_GetMSBitSet(NeedsProcessing);
  1465  00065A  C030  F011         	movff	ES_Timer_Tick_Resp@NeedsProcessing,ES_GetMSBitSet@Val2Check
  1466  00065E  C031  F012         	movff	ES_Timer_Tick_Resp@NeedsProcessing+1,ES_GetMSBitSet@Val2Check+1
  1467  000662  EC11  F006         	call	_ES_GetMSBitSet	;wreg free
  1468  000666  6E3D               	movwf	ES_Timer_Tick_Resp@NextTimer2Process,c
  1469                           
  1470                           ;ES_Timers.c: 298: if(--TMR_TimerArray[NextTimer2Process] == 0)
  1471  000668  503D               	movf	ES_Timer_Tick_Resp@NextTimer2Process,w,c
  1472  00066A  0D02               	mullw	2
  1473  00066C  0E60               	movlw	low _TMR_TimerArray
  1474  00066E  24F3               	addwf	prodl,w,c
  1475  000670  6ED9               	movwf	fsr2l,c
  1476  000672  0E00               	movlw	high _TMR_TimerArray
  1477  000674  20F4               	addwfc	prodh,w,c
  1478  000676  6EDA               	movwf	fsr2h,c
  1479  000678  06DE               	decf	postinc2,f,c
  1480  00067A  0E00               	movlw	0
  1481  00067C  5ADD               	subwfb	postdec2,f,c
  1482  00067E  50DE               	movf	postinc2,w,c
  1483  000680  10DE               	iorwf	postinc2,w,c
  1484  000682  A4D8               	btfss	status,2,c
  1485  000684  D03D               	goto	l2794
  1486                           
  1487                           ;ES_Timers.c: 299: {
  1488                           ;ES_Timers.c: 300: NewEvent.EventType = ES_TIMEOUT;
  1489  000686  0E03               	movlw	3
  1490  000688  6E2D               	movwf	ES_Timer_Tick_Resp@NewEvent,c
  1491                           
  1492                           ;ES_Timers.c: 301: NewEvent.EventParam = NextTimer2Process;
  1493  00068A  C03D  F02E         	movff	ES_Timer_Tick_Resp@NextTimer2Process,ES_Timer_Tick_Resp@NewEvent+1
  1494  00068E  6A2F               	clrf	ES_Timer_Tick_Resp@NewEvent+2,c
  1495                           
  1496                           ;ES_Timers.c: 303: Timer2PostFunc[NextTimer2Process](NewEvent);
  1497  000690  C02D  F09B         	movff	ES_Timer_Tick_Resp@NewEvent,PostCan_XmitService@ThisEvent
  1498  000694  C02E  F09C         	movff	ES_Timer_Tick_Resp@NewEvent+1,PostCan_XmitService@ThisEvent+1
  1499  000698  C02F  F09D         	movff	ES_Timer_Tick_Resp@NewEvent+2,PostCan_XmitService@ThisEvent+2
  1500  00069C  503D               	movf	ES_Timer_Tick_Resp@NextTimer2Process,w,c
  1501  00069E  0D02               	mullw	2
  1502  0006A0  0E21               	movlw	low _Timer2PostFunc
  1503  0006A2  24F3               	addwf	prodl,w,c
  1504  0006A4  6EF6               	movwf	tblptrl,c
  1505  0006A6  0E03               	movlw	high _Timer2PostFunc
  1506  0006A8  20F4               	addwfc	prodh,w,c
  1507  0006AA  6EF7               	movwf	tblptrh,c
  1508  0006AC                     	if	0	;There are less than 3 active tblptr bytes
  1509  0006AC                     	endif
  1510  0006AC  D801               	call	u1828
  1511  0006AE  D00C               	goto	l2792
  1512  0006B0                     u1828:
  1513  0006B0  0005               	push	
  1514  0006B2  6EFA               	movwf	pclath,c
  1515  0006B4  0009               	tblrd		*+
  1516  0006B6  50F5               	movf	tablat,w,c
  1517  0006B8  6EFD               	movwf	tosl,c
  1518  0006BA  0009               	tblrd		*+
  1519  0006BC  50F5               	movf	tablat,w,c
  1520  0006BE  6EFE               	movwf	tosh,c
  1521  0006C0  50F8               	movf	tblptru,w,c
  1522  0006C2  6EFF               	movwf	tosu,c
  1523  0006C4  50FA               	movf	pclath,w,c
  1524  0006C6  0012               	return		;indir
  1525  0006C8                     l2792:
  1526                           
  1527                           ;ES_Timers.c: 305: TMR_ActiveFlags &= ~BitNum2SetMask[NextTimer2Process];
  1528  0006C8  503D               	movf	ES_Timer_Tick_Resp@NextTimer2Process,w,c
  1529  0006CA  0D02               	mullw	2
  1530  0006CC  0E01               	movlw	low _BitNum2SetMask
  1531  0006CE  24F3               	addwf	prodl,w,c
  1532  0006D0  6EF6               	movwf	tblptrl,c
  1533  0006D2  0E03               	movlw	high _BitNum2SetMask
  1534  0006D4  20F4               	addwfc	prodh,w,c
  1535  0006D6  6EF7               	movwf	tblptrh,c
  1536  0006D8                     	if	0	;There are less than 3 active tblptr bytes
  1537  0006D8                     	endif
  1538  0006D8  0009               	tblrd		*+
  1539  0006DA  CFF5 F09E          	movff	tablat,??_ES_Timer_Tick_Resp
  1540  0006DE  0009               	tblrd		*+
  1541  0006E0  CFF5 F09F          	movff	tablat,??_ES_Timer_Tick_Resp+1
  1542  0006E4  0100               	movlb	0	; () banked
  1543  0006E6  1D9E               	comf	??_ES_Timer_Tick_Resp& (0+255),w,b
  1544  0006E8  0100               	movlb	0	; () banked
  1545  0006EA  6FA0               	movwf	(??_ES_Timer_Tick_Resp+2)& (0+255),b
  1546  0006EC  0100               	movlb	0	; () banked
  1547  0006EE  1D9F               	comf	(??_ES_Timer_Tick_Resp+1)& (0+255),w,b
  1548  0006F0  0100               	movlb	0	; () banked
  1549  0006F2  6FA1               	movwf	(??_ES_Timer_Tick_Resp+3)& (0+255),b
  1550  0006F4  0100               	movlb	0	; () banked
  1551  0006F6  51A0               	movf	(??_ES_Timer_Tick_Resp+2)& (0+255),w,b
  1552  0006F8  163A               	andwf	_TMR_ActiveFlags,f,c
  1553  0006FA  0100               	movlb	0	; () banked
  1554  0006FC  51A1               	movf	(??_ES_Timer_Tick_Resp+3)& (0+255),w,b
  1555  0006FE  163B               	andwf	_TMR_ActiveFlags+1,f,c
  1556  000700                     l2794:
  1557                           
  1558                           ;ES_Timers.c: 306: }
  1559                           ;ES_Timers.c: 308: NeedsProcessing &= ~BitNum2SetMask[NextTimer2Process];
  1560  000700  503D               	movf	ES_Timer_Tick_Resp@NextTimer2Process,w,c
  1561  000702  0D02               	mullw	2
  1562  000704  0E01               	movlw	low _BitNum2SetMask
  1563  000706  24F3               	addwf	prodl,w,c
  1564  000708  6EF6               	movwf	tblptrl,c
  1565  00070A  0E03               	movlw	high _BitNum2SetMask
  1566  00070C  20F4               	addwfc	prodh,w,c
  1567  00070E  6EF7               	movwf	tblptrh,c
  1568  000710                     	if	0	;There are less than 3 active tblptr bytes
  1569  000710                     	endif
  1570  000710  0009               	tblrd		*+
  1571  000712  CFF5 F09E          	movff	tablat,??_ES_Timer_Tick_Resp
  1572  000716  0009               	tblrd		*+
  1573  000718  CFF5 F09F          	movff	tablat,??_ES_Timer_Tick_Resp+1
  1574  00071C  0100               	movlb	0	; () banked
  1575  00071E  1D9E               	comf	??_ES_Timer_Tick_Resp& (0+255),w,b
  1576  000720  0100               	movlb	0	; () banked
  1577  000722  6FA0               	movwf	(??_ES_Timer_Tick_Resp+2)& (0+255),b
  1578  000724  0100               	movlb	0	; () banked
  1579  000726  1D9F               	comf	(??_ES_Timer_Tick_Resp+1)& (0+255),w,b
  1580  000728  0100               	movlb	0	; () banked
  1581  00072A  6FA1               	movwf	(??_ES_Timer_Tick_Resp+3)& (0+255),b
  1582  00072C  0100               	movlb	0	; () banked
  1583  00072E  51A0               	movf	(??_ES_Timer_Tick_Resp+2)& (0+255),w,b
  1584  000730  1630               	andwf	ES_Timer_Tick_Resp@NeedsProcessing,f,c
  1585  000732  0100               	movlb	0	; () banked
  1586  000734  51A1               	movf	(??_ES_Timer_Tick_Resp+3)& (0+255),w,b
  1587  000736  1631               	andwf	ES_Timer_Tick_Resp@NeedsProcessing+1,f,c
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;ES_Timers.c: 309: }while(NeedsProcessing != 0);
  1591  000738  5030               	movf	ES_Timer_Tick_Resp@NeedsProcessing,w,c
  1592  00073A  1031               	iorwf	ES_Timer_Tick_Resp@NeedsProcessing+1,w,c
  1593  00073C  B4D8               	btfsc	status,2,c
  1594  00073E  0012               	return	
  1595  000740  D78C               	goto	l2782
  1596  000742                     __end_of_ES_Timer_Tick_Resp:
  1597                           	opt stack 0
  1598                           tosu	equ	0xFFF
  1599                           tosh	equ	0xFFE
  1600                           tosl	equ	0xFFD
  1601                           pclath	equ	0xFFA
  1602                           tblptru	equ	0xFF8
  1603                           tblptrh	equ	0xFF7
  1604                           tblptrl	equ	0xFF6
  1605                           tablat	equ	0xFF5
  1606                           prodh	equ	0xFF4
  1607                           prodl	equ	0xFF3
  1608                           postinc0	equ	0xFEE
  1609                           wreg	equ	0xFE8
  1610                           postdec1	equ	0xFE5
  1611                           fsr1l	equ	0xFE1
  1612                           indf2	equ	0xFDF
  1613                           postinc2	equ	0xFDE
  1614                           postdec2	equ	0xFDD
  1615                           fsr2h	equ	0xFDA
  1616                           fsr2l	equ	0xFD9
  1617                           status	equ	0xFD8
  1618                           
  1619 ;; *************** function _PostButtonDebounceSM *****************
  1620 ;; Defined at:
  1621 ;;		line 75 in file "Button.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  ThisEvent       3    1[BANK0 ] struct ES_Event_t
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      unsigned char 
  1628 ;; Registers used:
  1629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1635 ;;      Params:         0       3       0       0
  1636 ;;      Locals:         0       0       0       0
  1637 ;;      Temps:          0       0       0       0
  1638 ;;      Totals:         0       3       0       0
  1639 ;;Total ram usage:        3 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    5
  1642 ;; This function calls:
  1643 ;;		_ES_PostToService
  1644 ;; This function is called by:
  1645 ;;		_CheckButtonEvents
  1646 ;;		_ES_Timer_Tick_Resp
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text6
  1651  00110A                     __ptext6:
  1652                           	opt stack 0
  1653  00110A                     _PostButtonDebounceSM:
  1654                           	opt stack 22
  1655                           
  1656                           ;Button.c: 78: return ES_PostToService(MyPriority, ThisEvent);
  1657                           ;	Return value of _PostButtonDebounceSM is never used
  1658                           
  1659                           ;incstack = 0
  1660  00110A  C09B  F028         	movff	PostButtonDebounceSM@ThisEvent,ES_PostToService@TheEvent
  1661  00110E  C09C  F029         	movff	PostButtonDebounceSM@ThisEvent+1,ES_PostToService@TheEvent+1
  1662  001112  C09D  F02A         	movff	PostButtonDebounceSM@ThisEvent+2,ES_PostToService@TheEvent+2
  1663  001116  5041               	movf	_MyPriority,w,c
  1664  001118  ECBA  F006         	call	_ES_PostToService
  1665  00111C  0012               	return	
  1666  00111E                     __end_of_PostButtonDebounceSM:
  1667                           	opt stack 0
  1668                           tosu	equ	0xFFF
  1669                           tosh	equ	0xFFE
  1670                           tosl	equ	0xFFD
  1671                           pclath	equ	0xFFA
  1672                           tblptru	equ	0xFF8
  1673                           tblptrh	equ	0xFF7
  1674                           tblptrl	equ	0xFF6
  1675                           tablat	equ	0xFF5
  1676                           prodh	equ	0xFF4
  1677                           prodl	equ	0xFF3
  1678                           postinc0	equ	0xFEE
  1679                           wreg	equ	0xFE8
  1680                           postdec1	equ	0xFE5
  1681                           fsr1l	equ	0xFE1
  1682                           indf2	equ	0xFDF
  1683                           postinc2	equ	0xFDE
  1684                           postdec2	equ	0xFDD
  1685                           fsr2h	equ	0xFDA
  1686                           fsr2l	equ	0xFD9
  1687                           status	equ	0xFD8
  1688                           
  1689 ;; *************** function _PostCan_XmitService *****************
  1690 ;; Defined at:
  1691 ;;		line 118 in file "Can_XmitService.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  ThisEvent       3    1[BANK0 ] struct ES_Event_t
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      unsigned char 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1705 ;;      Params:         0       3       0       0
  1706 ;;      Locals:         0       0       0       0
  1707 ;;      Temps:          0       0       0       0
  1708 ;;      Totals:         0       3       0       0
  1709 ;;Total ram usage:        3 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    5
  1712 ;; This function calls:
  1713 ;;		_ES_PostToService
  1714 ;; This function is called by:
  1715 ;;		_ES_Timer_Tick_Resp
  1716 ;;		_PostToList
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text7
  1721  00111E                     __ptext7:
  1722                           	opt stack 0
  1723  00111E                     _PostCan_XmitService:
  1724                           	opt stack 22
  1725                           
  1726                           ;Can_XmitService.c: 120: return ES_PostToService( MyPriority, ThisEvent);
  1727                           
  1728                           ;incstack = 0
  1729  00111E  C09B  F028         	movff	PostCan_XmitService@ThisEvent,ES_PostToService@TheEvent
  1730  001122  C09C  F029         	movff	PostCan_XmitService@ThisEvent+1,ES_PostToService@TheEvent+1
  1731  001126  C09D  F02A         	movff	PostCan_XmitService@ThisEvent+2,ES_PostToService@TheEvent+2
  1732  00112A  503C               	movf	Can_XmitService@MyPriority,w,c
  1733  00112C  ECBA  F006         	call	_ES_PostToService
  1734  001130  0012               	return	
  1735  001132                     __end_of_PostCan_XmitService:
  1736                           	opt stack 0
  1737                           tosu	equ	0xFFF
  1738                           tosh	equ	0xFFE
  1739                           tosl	equ	0xFFD
  1740                           pclath	equ	0xFFA
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           prodh	equ	0xFF4
  1746                           prodl	equ	0xFF3
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           postdec1	equ	0xFE5
  1750                           fsr1l	equ	0xFE1
  1751                           indf2	equ	0xFDF
  1752                           postinc2	equ	0xFDE
  1753                           postdec2	equ	0xFDD
  1754                           fsr2h	equ	0xFDA
  1755                           fsr2l	equ	0xFD9
  1756                           status	equ	0xFD8
  1757                           
  1758 ;; *************** function _ES_GetMSBitSet *****************
  1759 ;; Defined at:
  1760 ;;		line 79 in file "ES_LookupTables.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  Val2Check       2   16[COMRAM] unsigned int 
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;  LoopCntr        1   25[COMRAM] char 
  1765 ;;  Nybble2Test     1   24[COMRAM] unsigned char 
  1766 ;;  ReturnVal       1   23[COMRAM] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      unsigned char 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1776 ;;      Params:         2       0       0       0
  1777 ;;      Locals:         3       0       0       0
  1778 ;;      Temps:          5       0       0       0
  1779 ;;      Totals:        10       0       0       0
  1780 ;;Total ram usage:       10 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    2
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_ES_Run
  1787 ;;		_ES_Timer_Tick_Resp
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text8
  1792  000C22                     __ptext8:
  1793                           	opt stack 0
  1794  000C22                     _ES_GetMSBitSet:
  1795                           	opt stack 25
  1796                           
  1797                           ;ES_LookupTables.c: 81: int8_t LoopCntr;
  1798                           ;ES_LookupTables.c: 82: uint8_t Nybble2Test;
  1799                           ;ES_LookupTables.c: 83: uint8_t ReturnVal = 128;
  1800                           
  1801                           ;incstack = 0
  1802  000C22  0E80               	movlw	128
  1803  000C24  6E18               	movwf	ES_GetMSBitSet@ReturnVal,c
  1804                           
  1805                           ;ES_LookupTables.c: 86: for( LoopCntr = sizeof(Val2Check) * (8/4)-1;
  1806  000C26  0E03               	movlw	3
  1807  000C28  6E1A               	movwf	ES_GetMSBitSet@LoopCntr,c
  1808  000C2A                     l2684:
  1809                           
  1810                           ;ES_LookupTables.c: 87: LoopCntr >= 0; LoopCntr--) {
  1811  000C2A  BE1A               	btfsc	ES_GetMSBitSet@LoopCntr,7,c
  1812  000C2C  D031               	goto	l2698
  1813                           
  1814                           ;ES_LookupTables.c: 89: Nybble2Test = (uint8_t)
  1815                           ;ES_LookupTables.c: 90: ((Val2Check >> (uint8_t)(LoopCntr * 4)) &
  1816                           ;ES_LookupTables.c: 91: 0x0F);
  1817  000C2E  501A               	movf	ES_GetMSBitSet@LoopCntr,w,c
  1818  000C30  0D04               	mullw	4
  1819  000C32  CFF3 F013          	movff	prodl,??_ES_GetMSBitSet
  1820  000C36  C011  F014         	movff	ES_GetMSBitSet@Val2Check,??_ES_GetMSBitSet+1
  1821  000C3A  C012  F015         	movff	ES_GetMSBitSet@Val2Check+1,??_ES_GetMSBitSet+2
  1822  000C3E  2A13               	incf	??_ES_GetMSBitSet,f,c
  1823  000C40  D003               	goto	u1694
  1824  000C42                     u1695:
  1825  000C42  90D8               	bcf	status,0,c
  1826  000C44  3215               	rrcf	??_ES_GetMSBitSet+2,f,c
  1827  000C46  3214               	rrcf	??_ES_GetMSBitSet+1,f,c
  1828  000C48                     u1694:
  1829  000C48  2E13               	decfsz	??_ES_GetMSBitSet,f,c
  1830  000C4A  D7FB               	goto	u1695
  1831  000C4C  5014               	movf	??_ES_GetMSBitSet+1,w,c
  1832  000C4E  0B0F               	andlw	15
  1833  000C50  6E19               	movwf	ES_GetMSBitSet@Nybble2Test,c
  1834                           
  1835                           ;ES_LookupTables.c: 92: if ( Nybble2Test != 0){
  1836  000C52  5019               	movf	ES_GetMSBitSet@Nybble2Test,w,c
  1837  000C54  B4D8               	btfsc	status,2,c
  1838  000C56  D01A               	goto	l2694
  1839                           
  1840                           ;ES_LookupTables.c: 94: ReturnVal = Nybble2MSBitNum[Nybble2Test-1] +
  1841                           ;ES_LookupTables.c: 95: (LoopCntr * 4);
  1842  000C58  0EFF               	movlw	255
  1843  000C5A  6E13               	movwf	??_ES_GetMSBitSet& (0+255),c
  1844  000C5C  0EFF               	movlw	255
  1845  000C5E  6E14               	movwf	(??_ES_GetMSBitSet+1)& (0+255),c
  1846  000C60  5019               	movf	ES_GetMSBitSet@Nybble2Test,w,c
  1847  000C62  6E15               	movwf	(??_ES_GetMSBitSet+2)& (0+255),c
  1848  000C64  6A16               	clrf	(??_ES_GetMSBitSet+3)& (0+255),c
  1849  000C66  5013               	movf	??_ES_GetMSBitSet,w,c
  1850  000C68  2615               	addwf	??_ES_GetMSBitSet+2,f,c
  1851  000C6A  5014               	movf	??_ES_GetMSBitSet+1,w,c
  1852  000C6C  2216               	addwfc	??_ES_GetMSBitSet+3,f,c
  1853  000C6E  0E41               	movlw	low _Nybble2MSBitNum
  1854  000C70  2415               	addwf	??_ES_GetMSBitSet+2,w,c
  1855  000C72  6EF6               	movwf	tblptrl,c
  1856  000C74  0E03               	movlw	high _Nybble2MSBitNum
  1857  000C76  2016               	addwfc	??_ES_GetMSBitSet+3,w,c
  1858  000C78  6EF7               	movwf	tblptrh,c
  1859  000C7A                     	if	0	;There are less than 3 active tblptr bytes
  1860  000C7A                     	endif
  1861  000C7A  0008               	tblrd		*
  1862  000C7C  CFF5 F017          	movff	tablat,??_ES_GetMSBitSet+4
  1863  000C80  501A               	movf	ES_GetMSBitSet@LoopCntr,w,c
  1864  000C82  0D04               	mullw	4
  1865  000C84  50F3               	movf	prodl,w,c
  1866  000C86  2417               	addwf	??_ES_GetMSBitSet+4,w,c
  1867  000C88  6E18               	movwf	ES_GetMSBitSet@ReturnVal,c
  1868                           
  1869                           ;ES_LookupTables.c: 96: break;
  1870  000C8A  D002               	goto	l2698
  1871  000C8C                     l2694:
  1872  000C8C  061A               	decf	ES_GetMSBitSet@LoopCntr,f,c
  1873  000C8E  D7CD               	goto	l2684
  1874  000C90                     l2698:
  1875                           
  1876                           ;ES_LookupTables.c: 97: }
  1877                           ;ES_LookupTables.c: 98: }
  1878                           ;ES_LookupTables.c: 99: return ReturnVal;
  1879  000C90  5018               	movf	ES_GetMSBitSet@ReturnVal,w,c
  1880  000C92  0012               	return	
  1881  000C94                     __end_of_ES_GetMSBitSet:
  1882                           	opt stack 0
  1883                           tosu	equ	0xFFF
  1884                           tosh	equ	0xFFE
  1885                           tosl	equ	0xFFD
  1886                           pclath	equ	0xFFA
  1887                           tblptru	equ	0xFF8
  1888                           tblptrh	equ	0xFF7
  1889                           tblptrl	equ	0xFF6
  1890                           tablat	equ	0xFF5
  1891                           prodh	equ	0xFF4
  1892                           prodl	equ	0xFF3
  1893                           postinc0	equ	0xFEE
  1894                           wreg	equ	0xFE8
  1895                           postdec1	equ	0xFE5
  1896                           fsr1l	equ	0xFE1
  1897                           indf2	equ	0xFDF
  1898                           postinc2	equ	0xFDE
  1899                           postdec2	equ	0xFDD
  1900                           fsr2h	equ	0xFDA
  1901                           fsr2l	equ	0xFD9
  1902                           status	equ	0xFD8
  1903                           
  1904 ;; *************** function _RunButtonDebounceSM *****************
  1905 ;; Defined at:
  1906 ;;		line 83 in file "Button.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  ThisEvent       3    1[BANK0 ] struct ES_Event_t
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  ReturnEvent     3    4[BANK0 ] struct ES_Event_t
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  3    1[BANK0 ] struct ES_Event_t
  1913 ;; Registers used:
  1914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1920 ;;      Params:         0       3       0       0
  1921 ;;      Locals:         0       3       0       0
  1922 ;;      Temps:          0       0       0       0
  1923 ;;      Totals:         0       6       0       0
  1924 ;;Total ram usage:        6 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    5
  1927 ;; This function calls:
  1928 ;;		_ES_PostAll
  1929 ;;		_ES_Timer_InitTimer
  1930 ;; This function is called by:
  1931 ;;		_ES_Run
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           	psect	text9
  1936  000A8C                     __ptext9:
  1937                           	opt stack 0
  1938  000A8C                     _RunButtonDebounceSM:
  1939                           	opt stack 24
  1940                           
  1941                           ;Button.c: 87: switch (CurrentState) {
  1942                           
  1943                           ;incstack = 0
  1944  000A8C  D035               	goto	l2932
  1945  000A8E                     l2910:
  1946                           
  1947                           ;Button.c: 92: if (ThisEvent.EventType == ES_TIMEOUT) {
  1948  000A8E  0E03               	movlw	3
  1949  000A90  0100               	movlb	0	; () banked
  1950  000A92  199B               	xorwf	RunButtonDebounceSM@ThisEvent& (0+255),w,b
  1951  000A94  A4D8               	btfss	status,2,c
  1952  000A96  D037               	goto	l2934
  1953                           
  1954                           ; BSR set to: 0
  1955                           ;Button.c: 94: CurrentState = Ready2Sample;
  1956  000A98  0E01               	movlw	1
  1957  000A9A  6E3E               	movwf	_CurrentState,c
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;Button.c: 95: }
  1961                           ;Button.c: 96: break;
  1962  000A9C  D034               	goto	l2934
  1963  000A9E                     l2914:
  1964                           
  1965                           ;Button.c: 101: if (ThisEvent.EventType == DBButtonUp) {
  1966  000A9E  0E06               	movlw	6
  1967  000AA0  0100               	movlb	0	; () banked
  1968  000AA2  199B               	xorwf	RunButtonDebounceSM@ThisEvent& (0+255),w,b
  1969  000AA4  A4D8               	btfss	status,2,c
  1970  000AA6  D011               	goto	l2922
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;Button.c: 103: ES_Timer_InitTimer(1, 2);
  1974  000AA8  0E00               	movlw	0
  1975  000AAA  6E12               	movwf	ES_Timer_InitTimer@NewTime+1,c
  1976  000AAC  0E02               	movlw	2
  1977  000AAE  6E11               	movwf	ES_Timer_InitTimer@NewTime,c
  1978  000AB0  0E01               	movlw	1
  1979  000AB2  ECF1  F006         	call	_ES_Timer_InitTimer
  1980                           
  1981                           ;Button.c: 105: CurrentState = Debouncing;
  1982  000AB6  0E00               	movlw	0
  1983  000AB8  6E3E               	movwf	_CurrentState,c
  1984                           
  1985                           ;Button.c: 107: ES_PostAll(ThisEvent);
  1986  000ABA  C09B  F028         	movff	RunButtonDebounceSM@ThisEvent,ES_PostAll@ThisEvent
  1987  000ABE  C09C  F029         	movff	RunButtonDebounceSM@ThisEvent+1,ES_PostAll@ThisEvent+1
  1988  000AC2  C09D  F02A         	movff	RunButtonDebounceSM@ThisEvent+2,ES_PostAll@ThisEvent+2
  1989  000AC6  EC4A  F006         	call	_ES_PostAll	;wreg free
  1990  000ACA                     l2922:
  1991                           
  1992                           ;Button.c: 108: }
  1993                           ;Button.c: 110: if (ThisEvent.EventType == DBButtonDown) {
  1994  000ACA  0E05               	movlw	5
  1995  000ACC  0100               	movlb	0	; () banked
  1996  000ACE  199B               	xorwf	RunButtonDebounceSM@ThisEvent& (0+255),w,b
  1997  000AD0  A4D8               	btfss	status,2,c
  1998  000AD2  D019               	goto	l2934
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;Button.c: 114: ES_Timer_InitTimer(1, 2);
  2002  000AD4  0E00               	movlw	0
  2003  000AD6  6E12               	movwf	ES_Timer_InitTimer@NewTime+1,c
  2004  000AD8  0E02               	movlw	2
  2005  000ADA  6E11               	movwf	ES_Timer_InitTimer@NewTime,c
  2006  000ADC  0E01               	movlw	1
  2007  000ADE  ECF1  F006         	call	_ES_Timer_InitTimer
  2008                           
  2009                           ;Button.c: 116: CurrentState = Debouncing;
  2010  000AE2  0E00               	movlw	0
  2011  000AE4  6E3E               	movwf	_CurrentState,c
  2012                           
  2013                           ;Button.c: 117: ES_PostAll(ThisEvent);
  2014  000AE6  C09B  F028         	movff	RunButtonDebounceSM@ThisEvent,ES_PostAll@ThisEvent
  2015  000AEA  C09C  F029         	movff	RunButtonDebounceSM@ThisEvent+1,ES_PostAll@ThisEvent+1
  2016  000AEE  C09D  F02A         	movff	RunButtonDebounceSM@ThisEvent+2,ES_PostAll@ThisEvent+2
  2017  000AF2  EC4A  F006         	call	_ES_PostAll	;wreg free
  2018                           
  2019                           ;Button.c: 120: }
  2020                           
  2021                           ;Button.c: 118: }
  2022                           ;Button.c: 119: break;
  2023  000AF6  D007               	goto	l2934
  2024  000AF8                     l2932:
  2025  000AF8  503E               	movf	_CurrentState,w,c
  2026                           
  2027                           ; Switch size 1, requested type "space"
  2028                           ; Number of cases is 2, Range of values is 0 to 1
  2029                           ; switch strategies available:
  2030                           ; Name         Instructions Cycles
  2031                           ; simple_byte            7     4 (average)
  2032                           ;	Chosen strategy is simple_byte
  2033  000AFA  0A00               	xorlw	0	; case 0
  2034  000AFC  B4D8               	btfsc	status,2,c
  2035  000AFE  D7C7               	goto	l2910
  2036  000B00  0A01               	xorlw	1	; case 1
  2037  000B02  B4D8               	btfsc	status,2,c
  2038  000B04  D7CC               	goto	l2914
  2039  000B06                     l2934:
  2040                           
  2041                           ;Button.c: 122: ES_Event ReturnEvent;
  2042                           ;Button.c: 123: ReturnEvent.EventType = ES_NO_EVENT;
  2043  000B06  0E00               	movlw	0
  2044  000B08  0100               	movlb	0	; () banked
  2045  000B0A  6F9E               	movwf	RunButtonDebounceSM@ReturnEvent& (0+255),b
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;Button.c: 124: return ReturnEvent;
  2049  000B0C  C09E  F09B         	movff	RunButtonDebounceSM@ReturnEvent,?_RunButtonDebounceSM
  2050  000B10  C09F  F09C         	movff	RunButtonDebounceSM@ReturnEvent+1,?_RunButtonDebounceSM+1
  2051  000B14  C0A0  F09D         	movff	RunButtonDebounceSM@ReturnEvent+2,?_RunButtonDebounceSM+2
  2052  000B18  0012               	return	
  2053  000B1A                     __end_of_RunButtonDebounceSM:
  2054                           	opt stack 0
  2055                           tosu	equ	0xFFF
  2056                           tosh	equ	0xFFE
  2057                           tosl	equ	0xFFD
  2058                           pclath	equ	0xFFA
  2059                           tblptru	equ	0xFF8
  2060                           tblptrh	equ	0xFF7
  2061                           tblptrl	equ	0xFF6
  2062                           tablat	equ	0xFF5
  2063                           prodh	equ	0xFF4
  2064                           prodl	equ	0xFF3
  2065                           postinc0	equ	0xFEE
  2066                           wreg	equ	0xFE8
  2067                           postdec1	equ	0xFE5
  2068                           fsr1l	equ	0xFE1
  2069                           indf2	equ	0xFDF
  2070                           postinc2	equ	0xFDE
  2071                           postdec2	equ	0xFDD
  2072                           fsr2h	equ	0xFDA
  2073                           fsr2l	equ	0xFD9
  2074                           status	equ	0xFD8
  2075                           
  2076 ;; *************** function _RunCan_XmitService *****************
  2077 ;; Defined at:
  2078 ;;		line 138 in file "Can_XmitService.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  ThisEvent       3    1[BANK0 ] struct ES_Event_t
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  ReturnEvent     3    6[BANK0 ] struct ES_Event_t
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  3    1[BANK0 ] struct ES_Event_t
  2085 ;; Registers used:
  2086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2092 ;;      Params:         0       3       0       0
  2093 ;;      Locals:         0       3       0       0
  2094 ;;      Temps:          0       2       0       0
  2095 ;;      Totals:         0       8       0       0
  2096 ;;Total ram usage:        8 bytes
  2097 ;; Hardware stack levels used:    1
  2098 ;; Hardware stack levels required when called:    3
  2099 ;; This function calls:
  2100 ;;		_ES_Timer_InitTimer
  2101 ;;		_ES_Timer_StopTimer
  2102 ;;		_InitCanHardware
  2103 ;;		_InitPins
  2104 ;;		_XmitData
  2105 ;; This function is called by:
  2106 ;;		_ES_Run
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text10
  2111  0003BE                     __ptext10:
  2112                           	opt stack 0
  2113  0003BE                     _RunCan_XmitService:
  2114                           	opt stack 26
  2115                           
  2116                           ;Can_XmitService.c: 140: ES_Event ReturnEvent;
  2117                           ;Can_XmitService.c: 142: if (ThisEvent.EventType == ES_INIT) {
  2118                           
  2119                           ; BSR set to: 0
  2120                           ;incstack = 0
  2121  0003BE  0E02               	movlw	2
  2122  0003C0  0100               	movlb	0	; () banked
  2123  0003C2  199B               	xorwf	RunCan_XmitService@ThisEvent& (0+255),w,b
  2124  0003C4  A4D8               	btfss	status,2,c
  2125  0003C6  D005               	goto	l3030
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;Can_XmitService.c: 143: InitPins();
  2129  0003C8  ECA2  F008         	call	_InitPins	;wreg free
  2130                           
  2131                           ;Can_XmitService.c: 144: InitCanHardware();
  2132  0003CC  ECCF  F005         	call	_InitCanHardware	;wreg free
  2133                           
  2134                           ;Can_XmitService.c: 145: } else if (ThisEvent.EventType == ES_TIMEOUT) {
  2135  0003D0  D0B3               	goto	l3088
  2136  0003D2                     l3030:
  2137  0003D2  0E03               	movlw	3
  2138  0003D4  0100               	movlb	0	; () banked
  2139  0003D6  199B               	xorwf	RunCan_XmitService@ThisEvent& (0+255),w,b
  2140  0003D8  A4D8               	btfss	status,2,c
  2141  0003DA  D011               	goto	l3038
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;Can_XmitService.c: 146: if (ThisEvent.EventParam == 0) {
  2145  0003DC  0100               	movlb	0	; () banked
  2146  0003DE  519C               	movf	(RunCan_XmitService@ThisEvent+1)& (0+255),w,b
  2147  0003E0  0100               	movlb	0	; () banked
  2148  0003E2  119D               	iorwf	(RunCan_XmitService@ThisEvent+2)& (0+255),w,b
  2149  0003E4  A4D8               	btfss	status,2,c
  2150  0003E6  D0A8               	goto	l3088
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;Can_XmitService.c: 147: XmitData(IdleData, sizeof(IdleData));
  2154  0003E8  0E46               	movlw	low _IdleData
  2155  0003EA  6E11               	movwf	XmitData@DataBytes,c
  2156  0003EC  0E00               	movlw	high _IdleData
  2157  0003EE  6E12               	movwf	XmitData@DataBytes+1,c
  2158  0003F0  0E01               	movlw	1
  2159  0003F2  6E13               	movwf	XmitData@numBytes,c
  2160  0003F4  EC89  F007         	call	_XmitData	;wreg free
  2161                           
  2162                           ;Can_XmitService.c: 148: IsListening = 0;
  2163  0003F8  0E00               	movlw	0
  2164  0003FA  6E3F               	movwf	_IsListening,c
  2165                           
  2166                           ;Can_XmitService.c: 149: }
  2167                           ;Can_XmitService.c: 150: } else if (ThisEvent.EventType == DBButtonDown) {
  2168  0003FC  D09D               	goto	l3088
  2169  0003FE                     l3038:
  2170  0003FE  0E05               	movlw	5
  2171  000400  0100               	movlb	0	; () banked
  2172  000402  199B               	xorwf	RunCan_XmitService@ThisEvent& (0+255),w,b
  2173  000404  B4D8               	btfsc	status,2,c
  2174  000406  D076               	goto	l3086
  2175  000408  D097               	goto	l3088
  2176  00040A                     l3042:
  2177                           
  2178                           ; BSR set to: 0
  2179                           ;Can_XmitService.c: 153: IsListening = 0;
  2180  00040A  0E00               	movlw	0
  2181  00040C  6E3F               	movwf	_IsListening,c
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;Can_XmitService.c: 154: ES_Timer_StopTimer(0);
  2185  00040E  0E00               	movlw	0
  2186  000410  ECD8  F007         	call	_ES_Timer_StopTimer
  2187                           
  2188                           ;Can_XmitService.c: 155: XmitData(IdleData, sizeof(IdleData));
  2189  000414  0E46               	movlw	low _IdleData
  2190  000416  6E11               	movwf	XmitData@DataBytes,c
  2191  000418  0E00               	movlw	high _IdleData
  2192  00041A  6E12               	movwf	XmitData@DataBytes+1,c
  2193  00041C  0E01               	movlw	1
  2194  00041E  6E13               	movwf	XmitData@numBytes,c
  2195  000420  EC89  F007         	call	_XmitData	;wreg free
  2196                           
  2197                           ;Can_XmitService.c: 156: break;
  2198  000424  D089               	goto	l3088
  2199  000426                     l3048:
  2200                           
  2201                           ;Can_XmitService.c: 158: IsListening = 0;
  2202  000426  0E00               	movlw	0
  2203  000428  6E3F               	movwf	_IsListening,c
  2204                           
  2205                           ;Can_XmitService.c: 159: ES_Timer_StopTimer(0);
  2206  00042A  0E00               	movlw	0
  2207  00042C  ECD8  F007         	call	_ES_Timer_StopTimer
  2208                           
  2209                           ;Can_XmitService.c: 160: XmitData(SpeakingData, sizeof(SpeakingData));
  2210  000430  0E4E               	movlw	low _SpeakingData
  2211  000432  6E11               	movwf	XmitData@DataBytes,c
  2212  000434  0E00               	movlw	high _SpeakingData
  2213  000436  6E12               	movwf	XmitData@DataBytes+1,c
  2214  000438  0E01               	movlw	1
  2215  00043A  6E13               	movwf	XmitData@numBytes,c
  2216  00043C  EC89  F007         	call	_XmitData	;wreg free
  2217                           
  2218                           ;Can_XmitService.c: 161: break;
  2219  000440  D07B               	goto	l3088
  2220  000442                     l3054:
  2221                           
  2222                           ;Can_XmitService.c: 163: IsListening = 0;
  2223  000442  0E00               	movlw	0
  2224  000444  6E3F               	movwf	_IsListening,c
  2225                           
  2226                           ;Can_XmitService.c: 164: ES_Timer_StopTimer(0);
  2227  000446  0E00               	movlw	0
  2228  000448  ECD8  F007         	call	_ES_Timer_StopTimer
  2229                           
  2230                           ;Can_XmitService.c: 165: XmitData(LoadingData, sizeof(LoadingData));
  2231  00044C  0E4D               	movlw	low _LoadingData
  2232  00044E  6E11               	movwf	XmitData@DataBytes,c
  2233  000450  0E00               	movlw	high _LoadingData
  2234  000452  6E12               	movwf	XmitData@DataBytes+1,c
  2235  000454  0E01               	movlw	1
  2236  000456  6E13               	movwf	XmitData@numBytes,c
  2237  000458  EC89  F007         	call	_XmitData	;wreg free
  2238                           
  2239                           ;Can_XmitService.c: 166: break;
  2240  00045C  D06D               	goto	l3088
  2241  00045E                     l3060:
  2242                           
  2243                           ;Can_XmitService.c: 168: IsListening = 1;
  2244  00045E  0E01               	movlw	1
  2245  000460  6E3F               	movwf	_IsListening,c
  2246                           
  2247                           ;Can_XmitService.c: 169: ES_Timer_InitTimer(0, 25*10);
  2248  000462  0E00               	movlw	0
  2249  000464  6E12               	movwf	ES_Timer_InitTimer@NewTime+1,c
  2250  000466  0EFA               	movlw	250
  2251  000468  6E11               	movwf	ES_Timer_InitTimer@NewTime,c
  2252  00046A  0E00               	movlw	0
  2253  00046C  ECF1  F006         	call	_ES_Timer_InitTimer
  2254                           
  2255                           ;Can_XmitService.c: 170: XmitData(ListeningIdleData, sizeof(ListeningIdleData));
  2256  000470  0E47               	movlw	low _ListeningIdleData
  2257  000472  6E11               	movwf	XmitData@DataBytes,c
  2258  000474  0E00               	movlw	high _ListeningIdleData
  2259  000476  6E12               	movwf	XmitData@DataBytes+1,c
  2260  000478  0E02               	movlw	2
  2261  00047A  6E13               	movwf	XmitData@numBytes,c
  2262  00047C  EC89  F007         	call	_XmitData	;wreg free
  2263                           
  2264                           ;Can_XmitService.c: 171: break;
  2265  000480  D05B               	goto	l3088
  2266  000482                     l3066:
  2267                           
  2268                           ;Can_XmitService.c: 173: if (IsListening == 1) {
  2269  000482  043F               	decf	_IsListening,w,c
  2270  000484  A4D8               	btfss	status,2,c
  2271  000486  D058               	goto	l3088
  2272                           
  2273                           ;Can_XmitService.c: 174: ES_Timer_InitTimer(0, 25*10);
  2274  000488  0E00               	movlw	0
  2275  00048A  6E12               	movwf	ES_Timer_InitTimer@NewTime+1,c
  2276  00048C  0EFA               	movlw	250
  2277  00048E  6E11               	movwf	ES_Timer_InitTimer@NewTime,c
  2278  000490  0E00               	movlw	0
  2279  000492  ECF1  F006         	call	_ES_Timer_InitTimer
  2280                           
  2281                           ;Can_XmitService.c: 175: XmitData(ListeningLeftData, sizeof(ListeningLeftData));
  2282  000496  0E49               	movlw	low _ListeningLeftData
  2283  000498  6E11               	movwf	XmitData@DataBytes,c
  2284  00049A  0E00               	movlw	high _ListeningLeftData
  2285  00049C  6E12               	movwf	XmitData@DataBytes+1,c
  2286  00049E  0E02               	movlw	2
  2287  0004A0  6E13               	movwf	XmitData@numBytes,c
  2288  0004A2  EC89  F007         	call	_XmitData	;wreg free
  2289                           
  2290                           ;Can_XmitService.c: 176: }
  2291                           ;Can_XmitService.c: 177: break;
  2292  0004A6  D048               	goto	l3088
  2293  0004A8                     l3072:
  2294                           
  2295                           ;Can_XmitService.c: 179: if (IsListening == 1) {
  2296  0004A8  043F               	decf	_IsListening,w,c
  2297  0004AA  A4D8               	btfss	status,2,c
  2298  0004AC  D045               	goto	l3088
  2299                           
  2300                           ;Can_XmitService.c: 180: ES_Timer_InitTimer(0, 25*10);
  2301  0004AE  0E00               	movlw	0
  2302  0004B0  6E12               	movwf	ES_Timer_InitTimer@NewTime+1,c
  2303  0004B2  0EFA               	movlw	250
  2304  0004B4  6E11               	movwf	ES_Timer_InitTimer@NewTime,c
  2305  0004B6  0E00               	movlw	0
  2306  0004B8  ECF1  F006         	call	_ES_Timer_InitTimer
  2307                           
  2308                           ;Can_XmitService.c: 181: XmitData(ListeningRightData, sizeof(ListeningRightData));
  2309  0004BC  0E4B               	movlw	low _ListeningRightData
  2310  0004BE  6E11               	movwf	XmitData@DataBytes,c
  2311  0004C0  0E00               	movlw	high _ListeningRightData
  2312  0004C2  6E12               	movwf	XmitData@DataBytes+1,c
  2313  0004C4  0E02               	movlw	2
  2314  0004C6  6E13               	movwf	XmitData@numBytes,c
  2315  0004C8  EC89  F007         	call	_XmitData	;wreg free
  2316                           
  2317                           ;Can_XmitService.c: 182: }
  2318                           ;Can_XmitService.c: 183: break;
  2319  0004CC  D035               	goto	l3088
  2320  0004CE                     l3078:
  2321                           
  2322                           ;Can_XmitService.c: 185: if (IsListening == 1) {
  2323  0004CE  043F               	decf	_IsListening,w,c
  2324  0004D0  A4D8               	btfss	status,2,c
  2325  0004D2  D032               	goto	l3088
  2326                           
  2327                           ;Can_XmitService.c: 186: ES_Timer_InitTimer(0, 25*10);
  2328  0004D4  0E00               	movlw	0
  2329  0004D6  6E12               	movwf	ES_Timer_InitTimer@NewTime+1,c
  2330  0004D8  0EFA               	movlw	250
  2331  0004DA  6E11               	movwf	ES_Timer_InitTimer@NewTime,c
  2332  0004DC  0E00               	movlw	0
  2333  0004DE  ECF1  F006         	call	_ES_Timer_InitTimer
  2334                           
  2335                           ;Can_XmitService.c: 187: XmitData(ListeningCenterData, sizeof(ListeningCenterData));
  2336  0004E2  0EAA               	movlw	low _ListeningCenterData
  2337  0004E4  6E11               	movwf	XmitData@DataBytes,c
  2338  0004E6  0E00               	movlw	high _ListeningCenterData
  2339  0004E8  6E12               	movwf	XmitData@DataBytes+1,c
  2340  0004EA  0E02               	movlw	2
  2341  0004EC  6E13               	movwf	XmitData@numBytes,c
  2342  0004EE  EC89  F007         	call	_XmitData	;wreg free
  2343                           
  2344                           ;Can_XmitService.c: 190: }
  2345                           
  2346                           ;Can_XmitService.c: 188: }
  2347                           ;Can_XmitService.c: 189: break;
  2348  0004F2  D022               	goto	l3088
  2349  0004F4                     l3086:
  2350  0004F4  EE20  F09C         	lfsr	2,RunCan_XmitService@ThisEvent+1
  2351  0004F8  CFDE F09E          	movff	postinc2,??_RunCan_XmitService
  2352  0004FC  CFDD F09F          	movff	postdec2,??_RunCan_XmitService+1
  2353                           
  2354                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2355                           ; Switch size 1, requested type "space"
  2356                           ; Number of cases is 1, Range of values is 0 to 0
  2357                           ; switch strategies available:
  2358                           ; Name         Instructions Cycles
  2359                           ; simple_byte            4     3 (average)
  2360                           ;	Chosen strategy is simple_byte
  2361  000500  0100               	movlb	0	; () banked
  2362  000502  519F               	movf	(??_RunCan_XmitService+1)& (0+255),w,b
  2363  000504  0A00               	xorlw	0	; case 0
  2364  000506  A4D8               	btfss	status,2,c
  2365  000508  D017               	goto	l3088
  2366                           
  2367                           ; BSR set to: 0
  2368                           ; Switch size 1, requested type "space"
  2369                           ; Number of cases is 7, Range of values is 63 to 126
  2370                           ; switch strategies available:
  2371                           ; Name         Instructions Cycles
  2372                           ; simple_byte           22    12 (average)
  2373                           ;	Chosen strategy is simple_byte
  2374  00050A  0100               	movlb	0	; () banked
  2375  00050C  519E               	movf	??_RunCan_XmitService& (0+255),w,b
  2376  00050E  0A3F               	xorlw	63	; case 63
  2377  000510  B4D8               	btfsc	status,2,c
  2378  000512  D7DD               	goto	l3078
  2379  000514  0A60               	xorlw	96	; case 95
  2380  000516  B4D8               	btfsc	status,2,c
  2381  000518  D7C7               	goto	l3072
  2382  00051A  0A30               	xorlw	48	; case 111
  2383  00051C  B4D8               	btfsc	status,2,c
  2384  00051E  D7B1               	goto	l3066
  2385  000520  0A18               	xorlw	24	; case 119
  2386  000522  B4D8               	btfsc	status,2,c
  2387  000524  D79C               	goto	l3060
  2388  000526  0A0C               	xorlw	12	; case 123
  2389  000528  B4D8               	btfsc	status,2,c
  2390  00052A  D78B               	goto	l3054
  2391  00052C  0A06               	xorlw	6	; case 125
  2392  00052E  B4D8               	btfsc	status,2,c
  2393  000530  D77A               	goto	l3048
  2394  000532  0A03               	xorlw	3	; case 126
  2395  000534  B4D8               	btfsc	status,2,c
  2396  000536  D769               	goto	l3042
  2397  000538                     l3088:
  2398                           
  2399                           ;Can_XmitService.c: 191: }
  2400                           ;Can_XmitService.c: 192: ReturnEvent.EventType = ES_NO_EVENT;
  2401  000538  0E00               	movlw	0
  2402  00053A  0100               	movlb	0	; () banked
  2403  00053C  6FA0               	movwf	RunCan_XmitService@ReturnEvent& (0+255),b
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;Can_XmitService.c: 193: return ReturnEvent;
  2407  00053E  C0A0  F09B         	movff	RunCan_XmitService@ReturnEvent,?_RunCan_XmitService
  2408  000542  C0A1  F09C         	movff	RunCan_XmitService@ReturnEvent+1,?_RunCan_XmitService+1
  2409  000546  C0A2  F09D         	movff	RunCan_XmitService@ReturnEvent+2,?_RunCan_XmitService+2
  2410  00054A  0012               	return	
  2411  00054C                     __end_of_RunCan_XmitService:
  2412                           	opt stack 0
  2413                           tosu	equ	0xFFF
  2414                           tosh	equ	0xFFE
  2415                           tosl	equ	0xFFD
  2416                           pclath	equ	0xFFA
  2417                           tblptru	equ	0xFF8
  2418                           tblptrh	equ	0xFF7
  2419                           tblptrl	equ	0xFF6
  2420                           tablat	equ	0xFF5
  2421                           prodh	equ	0xFF4
  2422                           prodl	equ	0xFF3
  2423                           postinc0	equ	0xFEE
  2424                           wreg	equ	0xFE8
  2425                           postdec1	equ	0xFE5
  2426                           fsr1l	equ	0xFE1
  2427                           indf2	equ	0xFDF
  2428                           postinc2	equ	0xFDE
  2429                           postdec2	equ	0xFDD
  2430                           fsr2h	equ	0xFDA
  2431                           fsr2l	equ	0xFD9
  2432                           status	equ	0xFD8
  2433                           
  2434 ;; *************** function _XmitData *****************
  2435 ;; Defined at:
  2436 ;;		line 300 in file "Can_XmitService.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  DataBytes       2   16[COMRAM] PTR unsigned char 
  2439 ;;		 -> ListeningCenterData(2), ListeningRightData(2), ListeningLeftData(2), ListeningIdleData(2), 
  2440 ;;		 -> LoadingData(1), SpeakingData(1), IdleData(1), 
  2441 ;;  numBytes        1   18[COMRAM] unsigned char 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;		None
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      void 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2453 ;;      Params:         3       0       0       0
  2454 ;;      Locals:         0       0       0       0
  2455 ;;      Temps:          0       0       0       0
  2456 ;;      Totals:         3       0       0       0
  2457 ;;Total ram usage:        3 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    2
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_RunCan_XmitService
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text11
  2468  000F12                     __ptext11:
  2469                           	opt stack 0
  2470  000F12                     _XmitData:
  2471                           	opt stack 26
  2472                           
  2473                           ;Can_XmitService.c: 301: TXB0CONbits.TXREQ = 0;
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;incstack = 0
  2477  000F12  010F               	movlb	15	; () banked
  2478  000F14  9740               	bcf	64,3,b	;volatile
  2479                           
  2480                           ;Can_XmitService.c: 304: TXB0DLC = numBytes;;
  2481  000F16  C013  FF45         	movff	XmitData@numBytes,3909	;volatile
  2482                           
  2483                           ; BSR set to: 15
  2484                           ;Can_XmitService.c: 305: TXB0D0 = DataBytes[0];
  2485  000F1A  C011  FFD9         	movff	XmitData@DataBytes,fsr2l
  2486  000F1E  C012  FFDA         	movff	XmitData@DataBytes+1,fsr2h
  2487  000F22  50DF               	movf	indf2,w,c
  2488  000F24  010F               	movlb	15	; () banked
  2489  000F26  6F46               	movwf	70,b	;volatile
  2490                           
  2491                           ; BSR set to: 15
  2492                           ;Can_XmitService.c: 306: if (numBytes > 1) {
  2493  000F28  0E01               	movlw	1
  2494  000F2A  6413               	cpfsgt	XmitData@numBytes,c
  2495  000F2C  D009               	goto	l2864
  2496                           
  2497                           ; BSR set to: 15
  2498                           ;Can_XmitService.c: 307: TXB0D1 = DataBytes[1];
  2499  000F2E  EE20 F001          	lfsr	2,1
  2500  000F32  5011               	movf	XmitData@DataBytes,w,c
  2501  000F34  26D9               	addwf	fsr2l,f,c
  2502  000F36  5012               	movf	XmitData@DataBytes+1,w,c
  2503  000F38  22DA               	addwfc	fsr2h,f,c
  2504  000F3A  50DF               	movf	indf2,w,c
  2505  000F3C  010F               	movlb	15	; () banked
  2506  000F3E  6F47               	movwf	71,b	;volatile
  2507  000F40                     l2864:
  2508                           
  2509                           ; BSR set to: 15
  2510                           ;Can_XmitService.c: 308: }
  2511                           ;Can_XmitService.c: 311: TXB0SIDH = 0x00;
  2512  000F40  0E00               	movlw	0
  2513  000F42  010F               	movlb	15	; () banked
  2514  000F44  6F41               	movwf	65,b	;volatile
  2515                           
  2516                           ; BSR set to: 15
  2517                           ;Can_XmitService.c: 312: TXB0SIDL = 0x08;
  2518  000F46  0E08               	movlw	8
  2519  000F48  010F               	movlb	15	; () banked
  2520  000F4A  6F42               	movwf	66,b	;volatile
  2521                           
  2522                           ; BSR set to: 15
  2523                           ;Can_XmitService.c: 313: TXB0EIDH = 0x00;
  2524  000F4C  0E00               	movlw	0
  2525  000F4E  010F               	movlb	15	; () banked
  2526  000F50  6F43               	movwf	67,b	;volatile
  2527                           
  2528                           ; BSR set to: 15
  2529                           ;Can_XmitService.c: 314: TXB0EIDL = 0x01;
  2530  000F52  0E01               	movlw	1
  2531  000F54  010F               	movlb	15	; () banked
  2532  000F56  6F44               	movwf	68,b	;volatile
  2533                           
  2534                           ; BSR set to: 15
  2535                           ;Can_XmitService.c: 316: TXB0CONbits.TXPRI0 = 1;
  2536  000F58  010F               	movlb	15	; () banked
  2537  000F5A  8140               	bsf	64,0,b	;volatile
  2538                           
  2539                           ; BSR set to: 15
  2540                           ;Can_XmitService.c: 317: TXB0CONbits.TXPRI1 = 1;
  2541  000F5C  010F               	movlb	15	; () banked
  2542  000F5E  8340               	bsf	64,1,b	;volatile
  2543                           
  2544                           ; BSR set to: 15
  2545                           ;Can_XmitService.c: 319: TXB0CONbits.TXREQ = 1;
  2546  000F60  010F               	movlb	15	; () banked
  2547  000F62  8740               	bsf	64,3,b	;volatile
  2548                           
  2549                           ; BSR set to: 15
  2550  000F64  0012               	return		;funcret
  2551  000F66                     __end_of_XmitData:
  2552                           	opt stack 0
  2553                           tosu	equ	0xFFF
  2554                           tosh	equ	0xFFE
  2555                           tosl	equ	0xFFD
  2556                           pclath	equ	0xFFA
  2557                           tblptru	equ	0xFF8
  2558                           tblptrh	equ	0xFF7
  2559                           tblptrl	equ	0xFF6
  2560                           tablat	equ	0xFF5
  2561                           prodh	equ	0xFF4
  2562                           prodl	equ	0xFF3
  2563                           postinc0	equ	0xFEE
  2564                           wreg	equ	0xFE8
  2565                           postdec1	equ	0xFE5
  2566                           fsr1l	equ	0xFE1
  2567                           indf2	equ	0xFDF
  2568                           postinc2	equ	0xFDE
  2569                           postdec2	equ	0xFDD
  2570                           fsr2h	equ	0xFDA
  2571                           fsr2l	equ	0xFD9
  2572                           status	equ	0xFD8
  2573                           
  2574 ;; *************** function _InitPins *****************
  2575 ;; Defined at:
  2576 ;;		line 289 in file "Can_XmitService.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;		None
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, status,2
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2590 ;;      Params:         0       0       0       0
  2591 ;;      Locals:         0       0       0       0
  2592 ;;      Temps:          0       0       0       0
  2593 ;;      Totals:         0       0       0       0
  2594 ;;Total ram usage:        0 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    2
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_RunCan_XmitService
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text12
  2605  001144                     __ptext12:
  2606                           	opt stack 0
  2607  001144                     _InitPins:
  2608                           	opt stack 26
  2609                           
  2610                           ;Can_XmitService.c: 292: PORTB = 0x00;
  2611                           
  2612                           ; BSR set to: 15
  2613                           ;incstack = 0
  2614  001144  0E00               	movlw	0
  2615  001146  6E81               	movwf	3969,c	;volatile
  2616                           
  2617                           ;Can_XmitService.c: 293: LATB = 0x00;
  2618  001148  0E00               	movlw	0
  2619  00114A  6E8A               	movwf	3978,c	;volatile
  2620                           
  2621                           ;Can_XmitService.c: 294: TRISBbits.TRISB2 = 0;
  2622  00114C  9493               	bcf	3987,2,c	;volatile
  2623                           
  2624                           ;Can_XmitService.c: 295: TRISBbits.TRISB3 = 1;
  2625  00114E  8693               	bsf	3987,3,c	;volatile
  2626  001150  0012               	return		;funcret
  2627  001152                     __end_of_InitPins:
  2628                           	opt stack 0
  2629                           tosu	equ	0xFFF
  2630                           tosh	equ	0xFFE
  2631                           tosl	equ	0xFFD
  2632                           pclath	equ	0xFFA
  2633                           tblptru	equ	0xFF8
  2634                           tblptrh	equ	0xFF7
  2635                           tblptrl	equ	0xFF6
  2636                           tablat	equ	0xFF5
  2637                           prodh	equ	0xFF4
  2638                           prodl	equ	0xFF3
  2639                           postinc0	equ	0xFEE
  2640                           wreg	equ	0xFE8
  2641                           postdec1	equ	0xFE5
  2642                           fsr1l	equ	0xFE1
  2643                           indf2	equ	0xFDF
  2644                           postinc2	equ	0xFDE
  2645                           postdec2	equ	0xFDD
  2646                           fsr2h	equ	0xFDA
  2647                           fsr2l	equ	0xFD9
  2648                           status	equ	0xFD8
  2649                           
  2650 ;; *************** function _InitCanHardware *****************
  2651 ;; Defined at:
  2652 ;;		line 221 in file "Can_XmitService.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2666 ;;      Params:         0       0       0       0
  2667 ;;      Locals:         0       0       0       0
  2668 ;;      Temps:          0       0       0       0
  2669 ;;      Totals:         0       0       0       0
  2670 ;;Total ram usage:        0 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    2
  2673 ;; This function calls:
  2674 ;;		Nothing
  2675 ;; This function is called by:
  2676 ;;		_RunCan_XmitService
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text13
  2681  000B9E                     __ptext13:
  2682                           	opt stack 0
  2683  000B9E                     _InitCanHardware:
  2684                           	opt stack 26
  2685                           
  2686                           ;Can_XmitService.c: 225: CANCON = 0x80;
  2687                           
  2688                           ;incstack = 0
  2689  000B9E  0E80               	movlw	128
  2690  000BA0  6E6F               	movwf	3951,c	;volatile
  2691  000BA2                     l516:
  2692  000BA2  AE6E               	btfss	3950,7,c	;volatile
  2693  000BA4  D7FE               	goto	l516
  2694                           
  2695                           ;Can_XmitService.c: 228: CIOCON = 0x20;
  2696  000BA6  0E20               	movlw	32
  2697  000BA8  6E73               	movwf	3955,c	;volatile
  2698                           
  2699                           ;Can_XmitService.c: 231: BRGCON2bits.SEG2PHTS = 1;
  2700  000BAA  8E71               	bsf	3953,7,c	;volatile
  2701                           
  2702                           ;Can_XmitService.c: 233: BRGCON1bits.BRP0 = 0;
  2703  000BAC  9070               	bcf	3952,0,c	;volatile
  2704                           
  2705                           ;Can_XmitService.c: 234: BRGCON1bits.BRP1 = 1;
  2706  000BAE  8270               	bsf	3952,1,c	;volatile
  2707                           
  2708                           ;Can_XmitService.c: 235: BRGCON1bits.BRP2 = 1;
  2709  000BB0  8470               	bsf	3952,2,c	;volatile
  2710                           
  2711                           ;Can_XmitService.c: 236: BRGCON1bits.BRP3 = 0;
  2712  000BB2  9670               	bcf	3952,3,c	;volatile
  2713                           
  2714                           ;Can_XmitService.c: 238: BRGCON2bits.PRSEG0 = 0;
  2715  000BB4  9071               	bcf	3953,0,c	;volatile
  2716                           
  2717                           ;Can_XmitService.c: 239: BRGCON2bits.PRSEG1 = 0;
  2718  000BB6  9271               	bcf	3953,1,c	;volatile
  2719                           
  2720                           ;Can_XmitService.c: 240: BRGCON2bits.PRSEG2 = 0;
  2721  000BB8  9471               	bcf	3953,2,c	;volatile
  2722                           
  2723                           ;Can_XmitService.c: 242: BRGCON2bits.SEG1PH0 = 0;
  2724  000BBA  9671               	bcf	3953,3,c	;volatile
  2725                           
  2726                           ;Can_XmitService.c: 243: BRGCON2bits.SEG1PH1 = 0;
  2727  000BBC  9871               	bcf	3953,4,c	;volatile
  2728                           
  2729                           ;Can_XmitService.c: 244: BRGCON2bits.SEG1PH2 = 0;
  2730  000BBE  9A71               	bcf	3953,5,c	;volatile
  2731                           
  2732                           ;Can_XmitService.c: 246: BRGCON3bits.SEG2PH0 = 1;
  2733  000BC0  8072               	bsf	3954,0,c	;volatile
  2734                           
  2735                           ;Can_XmitService.c: 247: BRGCON3bits.SEG2PH1 = 0;
  2736  000BC2  9272               	bcf	3954,1,c	;volatile
  2737                           
  2738                           ;Can_XmitService.c: 248: BRGCON3bits.SEG2PH2 = 0;
  2739  000BC4  9472               	bcf	3954,2,c	;volatile
  2740                           
  2741                           ;Can_XmitService.c: 250: BRGCON1bits.SJW0 = 0;
  2742  000BC6  9C70               	bcf	3952,6,c	;volatile
  2743                           
  2744                           ;Can_XmitService.c: 254: RXB0CONbits.RXB0DBEN = 0;
  2745  000BC8  9460               	bcf	3936,2,c	;volatile
  2746                           
  2747                           ;Can_XmitService.c: 255: RXB0CONbits.RXM0 = 0;
  2748  000BCA  9A60               	bcf	3936,5,c	;volatile
  2749                           
  2750                           ;Can_XmitService.c: 256: RXB0CONbits.RXM1 = 0;
  2751  000BCC  9C60               	bcf	3936,6,c	;volatile
  2752                           
  2753                           ;Can_XmitService.c: 257: RXF0SIDH = 0x00;
  2754  000BCE  0E00               	movlw	0
  2755  000BD0  010F               	movlb	15	; () banked
  2756  000BD2  6F00               	movwf	0,b	;volatile
  2757                           
  2758                           ;Can_XmitService.c: 258: RXF0SIDL = 0x08;
  2759  000BD4  0E08               	movlw	8
  2760  000BD6  010F               	movlb	15	; () banked
  2761  000BD8  6F01               	movwf	1,b	;volatile
  2762                           
  2763                           ;Can_XmitService.c: 259: RXF0EIDH = 0x00;
  2764  000BDA  0E00               	movlw	0
  2765  000BDC  010F               	movlb	15	; () banked
  2766  000BDE  6F02               	movwf	2,b	;volatile
  2767                           
  2768                           ;Can_XmitService.c: 260: RXF0EIDL = 0x01;
  2769  000BE0  0E01               	movlw	1
  2770  000BE2  010F               	movlb	15	; () banked
  2771  000BE4  6F03               	movwf	3,b	;volatile
  2772                           
  2773                           ;Can_XmitService.c: 262: RXM0SIDH = 0x00;
  2774  000BE6  0E00               	movlw	0
  2775  000BE8  010F               	movlb	15	; () banked
  2776  000BEA  6F18               	movwf	24,b	;volatile
  2777                           
  2778                           ;Can_XmitService.c: 263: RXM0SIDL = 0x00;
  2779  000BEC  0E00               	movlw	0
  2780  000BEE  010F               	movlb	15	; () banked
  2781  000BF0  6F19               	movwf	25,b	;volatile
  2782                           
  2783                           ;Can_XmitService.c: 264: RXM0EIDH = 0x00;
  2784  000BF2  0E00               	movlw	0
  2785  000BF4  010F               	movlb	15	; () banked
  2786  000BF6  6F1A               	movwf	26,b	;volatile
  2787                           
  2788                           ;Can_XmitService.c: 265: RXM0EIDL = 0x01;
  2789  000BF8  0E01               	movlw	1
  2790  000BFA  010F               	movlb	15	; () banked
  2791  000BFC  6F1B               	movwf	27,b	;volatile
  2792                           
  2793                           ;Can_XmitService.c: 269: ECANCON = 0x00;
  2794  000BFE  0E00               	movlw	0
  2795  000C00  6E77               	movwf	3959,c	;volatile
  2796                           
  2797                           ;Can_XmitService.c: 270: CANCON = 0b00010000;
  2798  000C02  0E10               	movlw	16
  2799  000C04  6E6F               	movwf	3951,c	;volatile
  2800  000C06                     l519:
  2801  000C06  BE6E               	btfsc	3950,7,c	;volatile
  2802  000C08  D7FE               	goto	l519
  2803                           
  2804                           ;Can_XmitService.c: 274: RXB0IE = 1;
  2805  000C0A  80A3               	bsf	4003,0,c	;volatile
  2806                           
  2807                           ;Can_XmitService.c: 275: ERRIE = 1;
  2808  000C0C  8AA3               	bsf	4003,5,c	;volatile
  2809                           
  2810                           ;Can_XmitService.c: 276: IRXIE = 1;
  2811  000C0E  8EA3               	bsf	4003,7,c	;volatile
  2812                           
  2813                           ;Can_XmitService.c: 280: RXB0IF = 0;
  2814  000C10  90A4               	bcf	4004,0,c	;volatile
  2815                           
  2816                           ;Can_XmitService.c: 281: ERRIF = 0;
  2817  000C12  9AA4               	bcf	4004,5,c	;volatile
  2818                           
  2819                           ;Can_XmitService.c: 282: IRXIF = 0;
  2820  000C14  9EA4               	bcf	4004,7,c	;volatile
  2821                           
  2822                           ;Can_XmitService.c: 283: TXB0IE = 1;
  2823  000C16  84A3               	bsf	4003,2,c	;volatile
  2824                           
  2825                           ;Can_XmitService.c: 284: TXB0IF = 0;
  2826  000C18  94A4               	bcf	4004,2,c	;volatile
  2827                           
  2828                           ;Can_XmitService.c: 285: TXB0CONbits.TXREQ = 0;
  2829  000C1A  010F               	movlb	15	; () banked
  2830  000C1C  9740               	bcf	64,3,b	;volatile
  2831                           
  2832                           ;Can_XmitService.c: 286: RXB0CONbits.RXFUL = 0;
  2833  000C1E  9E60               	bcf	3936,7,c	;volatile
  2834                           
  2835                           ; BSR set to: 15
  2836  000C20  0012               	return		;funcret
  2837  000C22                     __end_of_InitCanHardware:
  2838                           	opt stack 0
  2839                           tosu	equ	0xFFF
  2840                           tosh	equ	0xFFE
  2841                           tosl	equ	0xFFD
  2842                           pclath	equ	0xFFA
  2843                           tblptru	equ	0xFF8
  2844                           tblptrh	equ	0xFF7
  2845                           tblptrl	equ	0xFF6
  2846                           tablat	equ	0xFF5
  2847                           prodh	equ	0xFF4
  2848                           prodl	equ	0xFF3
  2849                           postinc0	equ	0xFEE
  2850                           wreg	equ	0xFE8
  2851                           postdec1	equ	0xFE5
  2852                           fsr1l	equ	0xFE1
  2853                           indf2	equ	0xFDF
  2854                           postinc2	equ	0xFDE
  2855                           postdec2	equ	0xFDD
  2856                           fsr2h	equ	0xFDA
  2857                           fsr2l	equ	0xFD9
  2858                           status	equ	0xFD8
  2859                           
  2860 ;; *************** function _ES_Timer_StopTimer *****************
  2861 ;; Defined at:
  2862 ;;		line 205 in file "ES_Timers.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  Num             1    wreg     unsigned char 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  Num             1   20[COMRAM] unsigned char 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      enum E15470
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2876 ;;      Params:         0       0       0       0
  2877 ;;      Locals:         1       0       0       0
  2878 ;;      Temps:          4       0       0       0
  2879 ;;      Totals:         5       0       0       0
  2880 ;;Total ram usage:        5 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    2
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_RunCan_XmitService
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text14
  2891  000FB0                     __ptext14:
  2892                           	opt stack 0
  2893  000FB0                     _ES_Timer_StopTimer:
  2894                           	opt stack 26
  2895                           
  2896                           ; BSR set to: 15
  2897                           ;incstack = 0
  2898                           ;ES_Timer_StopTimer@Num stored from wreg
  2899  000FB0  6E15               	movwf	ES_Timer_StopTimer@Num,c
  2900                           
  2901                           ;ES_Timers.c: 207: if( Num >= (sizeof(TMR_TimerArray)/sizeof(TMR_TimerArray[0])) )
  2902  000FB2  0E0F               	movlw	15
  2903  000FB4  6415               	cpfsgt	ES_Timer_StopTimer@Num,c
  2904  000FB6  D001               	goto	l2802
  2905  000FB8  0012               	return	
  2906  000FBA                     l2802:
  2907                           
  2908                           ;ES_Timers.c: 209: TMR_ActiveFlags &= ~BitNum2SetMask[Num];
  2909  000FBA  5015               	movf	ES_Timer_StopTimer@Num,w,c
  2910  000FBC  0D02               	mullw	2
  2911  000FBE  0E01               	movlw	low _BitNum2SetMask
  2912  000FC0  24F3               	addwf	prodl,w,c
  2913  000FC2  6EF6               	movwf	tblptrl,c
  2914  000FC4  0E03               	movlw	high _BitNum2SetMask
  2915  000FC6  20F4               	addwfc	prodh,w,c
  2916  000FC8  6EF7               	movwf	tblptrh,c
  2917  000FCA                     	if	0	;There are less than 3 active tblptr bytes
  2918  000FCA                     	endif
  2919  000FCA  0009               	tblrd		*+
  2920  000FCC  CFF5 F011          	movff	tablat,??_ES_Timer_StopTimer
  2921  000FD0  0009               	tblrd		*+
  2922  000FD2  CFF5 F012          	movff	tablat,??_ES_Timer_StopTimer+1
  2923  000FD6  1C11               	comf	??_ES_Timer_StopTimer,w,c
  2924  000FD8  6E13               	movwf	(??_ES_Timer_StopTimer+2)& (0+255),c
  2925  000FDA  1C12               	comf	??_ES_Timer_StopTimer+1,w,c
  2926  000FDC  6E14               	movwf	(??_ES_Timer_StopTimer+3)& (0+255),c
  2927  000FDE  5013               	movf	??_ES_Timer_StopTimer+2,w,c
  2928  000FE0  163A               	andwf	_TMR_ActiveFlags,f,c
  2929  000FE2  5014               	movf	??_ES_Timer_StopTimer+3,w,c
  2930  000FE4  163B               	andwf	_TMR_ActiveFlags+1,f,c
  2931  000FE6  0012               	return	
  2932  000FE8                     __end_of_ES_Timer_StopTimer:
  2933                           	opt stack 0
  2934                           tosu	equ	0xFFF
  2935                           tosh	equ	0xFFE
  2936                           tosl	equ	0xFFD
  2937                           pclath	equ	0xFFA
  2938                           tblptru	equ	0xFF8
  2939                           tblptrh	equ	0xFF7
  2940                           tblptrl	equ	0xFF6
  2941                           tablat	equ	0xFF5
  2942                           prodh	equ	0xFF4
  2943                           prodl	equ	0xFF3
  2944                           postinc0	equ	0xFEE
  2945                           wreg	equ	0xFE8
  2946                           postdec1	equ	0xFE5
  2947                           fsr1l	equ	0xFE1
  2948                           indf2	equ	0xFDF
  2949                           postinc2	equ	0xFDE
  2950                           postdec2	equ	0xFDD
  2951                           fsr2h	equ	0xFDA
  2952                           fsr2l	equ	0xFD9
  2953                           status	equ	0xFD8
  2954                           
  2955 ;; *************** function _ES_PostAll *****************
  2956 ;; Defined at:
  2957 ;;		line 318 in file "ES_Framework.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  ThisEvent       3   39[COMRAM] struct ES_Event_t
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  i               1    0[BANK0 ] unsigned char 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      unsigned char 
  2964 ;; Registers used:
  2965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2971 ;;      Params:         3       0       0       0
  2972 ;;      Locals:         0       1       0       0
  2973 ;;      Temps:          2       0       0       0
  2974 ;;      Totals:         5       1       0       0
  2975 ;;Total ram usage:        6 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    4
  2978 ;; This function calls:
  2979 ;;		_ES_EnQueueFIFO
  2980 ;; This function is called by:
  2981 ;;		_RunButtonDebounceSM
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text15
  2986  000C94                     __ptext15:
  2987                           	opt stack 0
  2988  000C94                     _ES_PostAll:
  2989                           	opt stack 24
  2990                           
  2991                           ;ES_Framework.c: 320: uint8_t i;
  2992                           ;ES_Framework.c: 322: for ( i=0; i< (sizeof(EventQueues)/sizeof(EventQueues[0])); i++) {
  2993                           
  2994                           ;incstack = 0
  2995  000C94  0E00               	movlw	0
  2996  000C96  0100               	movlb	0	; () banked
  2997  000C98  6F9A               	movwf	ES_PostAll@i& (0+255),b
  2998  000C9A                     l2750:
  2999                           
  3000                           ; BSR set to: 0
  3001  000C9A  0E01               	movlw	1
  3002  000C9C  0100               	movlb	0	; () banked
  3003  000C9E  659A               	cpfsgt	ES_PostAll@i& (0+255),b
  3004  000CA0  D001               	goto	l2754
  3005  000CA2  0012               	return	
  3006  000CA4                     l2754:
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;ES_Framework.c: 323: if ( ES_EnQueueFIFO( EventQueues[i].pMem, ThisEvent ) != 1 ){
  3010  000CA4  0100               	movlb	0	; () banked
  3011  000CA6  519A               	movf	ES_PostAll@i& (0+255),w,b
  3012  000CA8  0D03               	mullw	3
  3013  000CAA  0E58               	movlw	low _EventQueues
  3014  000CAC  24F3               	addwf	prodl,w,c
  3015  000CAE  6EF6               	movwf	tblptrl,c
  3016  000CB0  0E03               	movlw	high _EventQueues
  3017  000CB2  20F4               	addwfc	prodh,w,c
  3018  000CB4  6EF7               	movwf	tblptrh,c
  3019  000CB6                     	if	0	;There are less than 3 active tblptr bytes
  3020  000CB6                     	endif
  3021  000CB6  0009               	tblrd		*+
  3022  000CB8  CFF5 F01D          	movff	tablat,ES_EnQueueFIFO@pBlock
  3023  000CBC  000A               	tblrd		*-
  3024  000CBE  CFF5 F01E          	movff	tablat,ES_EnQueueFIFO@pBlock+1
  3025  000CC2  C028  F01F         	movff	ES_PostAll@ThisEvent,ES_EnQueueFIFO@Event2Add
  3026  000CC6  C029  F020         	movff	ES_PostAll@ThisEvent+1,ES_EnQueueFIFO@Event2Add+1
  3027  000CCA  C02A  F021         	movff	ES_PostAll@ThisEvent+2,ES_EnQueueFIFO@Event2Add+2
  3028  000CCE  ECEC  F004         	call	_ES_EnQueueFIFO	;wreg free
  3029  000CD2  06E8               	decf	wreg,f,c
  3030  000CD4  A4D8               	btfss	status,2,c
  3031  000CD6  0012               	return	
  3032                           
  3033                           ;ES_Framework.c: 326: Ready |= BitNum2SetMask[i];
  3034                           
  3035                           ;ES_Framework.c: 325: }else{
  3036                           
  3037                           ;ES_Framework.c: 324: break;
  3038  000CD8  0100               	movlb	0	; () banked
  3039  000CDA  519A               	movf	ES_PostAll@i& (0+255),w,b
  3040  000CDC  0D02               	mullw	2
  3041  000CDE  0E01               	movlw	low _BitNum2SetMask
  3042  000CE0  24F3               	addwf	prodl,w,c
  3043  000CE2  6EF6               	movwf	tblptrl,c
  3044  000CE4  0E03               	movlw	high _BitNum2SetMask
  3045  000CE6  20F4               	addwfc	prodh,w,c
  3046  000CE8  6EF7               	movwf	tblptrh,c
  3047  000CEA                     	if	0	;There are less than 3 active tblptr bytes
  3048  000CEA                     	endif
  3049  000CEA  0009               	tblrd		*+
  3050  000CEC  CFF5 F02B          	movff	tablat,??_ES_PostAll
  3051  000CF0  0009               	tblrd		*+
  3052  000CF2  CFF5 F02C          	movff	tablat,??_ES_PostAll+1
  3053  000CF6  502B               	movf	??_ES_PostAll,w,c
  3054  000CF8  1236               	iorwf	_Ready,f,c
  3055  000CFA  502C               	movf	??_ES_PostAll+1,w,c
  3056  000CFC  1237               	iorwf	_Ready+1,f,c
  3057                           
  3058                           ; BSR set to: 0
  3059  000CFE  0100               	movlb	0	; () banked
  3060  000D00  2B9A               	incf	ES_PostAll@i& (0+255),f,b
  3061  000D02  D7CB               	goto	l2750
  3062  000D04                     __end_of_ES_PostAll:
  3063                           	opt stack 0
  3064                           tosu	equ	0xFFF
  3065                           tosh	equ	0xFFE
  3066                           tosl	equ	0xFFD
  3067                           pclath	equ	0xFFA
  3068                           tblptru	equ	0xFF8
  3069                           tblptrh	equ	0xFF7
  3070                           tblptrl	equ	0xFF6
  3071                           tablat	equ	0xFF5
  3072                           prodh	equ	0xFF4
  3073                           prodl	equ	0xFF3
  3074                           postinc0	equ	0xFEE
  3075                           wreg	equ	0xFE8
  3076                           postdec1	equ	0xFE5
  3077                           fsr1l	equ	0xFE1
  3078                           indf2	equ	0xFDF
  3079                           postinc2	equ	0xFDE
  3080                           postdec2	equ	0xFDD
  3081                           fsr2h	equ	0xFDA
  3082                           fsr2l	equ	0xFD9
  3083                           status	equ	0xFD8
  3084                           
  3085 ;; *************** function _ES_DeQueue *****************
  3086 ;; Defined at:
  3087 ;;		line 164 in file "ES_Queue.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  pBlock          2   28[COMRAM] PTR struct ES_Event_t
  3090 ;;		 -> Queue1(12), Queue0(12), 
  3091 ;;  pReturnEvent    2   30[COMRAM] PTR struct ES_Event_t
  3092 ;;		 -> ES_Run@ThisEvent(3), ES_RecallEvents@RecalledEvent(3), 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  pThisQueue      2   36[COMRAM] PTR struct .
  3095 ;;		 -> Queue1(12), Queue0(12), 
  3096 ;;  NumLeft         1   35[COMRAM] unsigned char 
  3097 ;;  SaveCrit        1   34[COMRAM] unsigned char 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      unsigned char 
  3100 ;; Registers used:
  3101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3107 ;;      Params:         4       0       0       0
  3108 ;;      Locals:         4       0       0       0
  3109 ;;      Temps:          2       0       0       0
  3110 ;;      Totals:        10       0       0       0
  3111 ;;Total ram usage:       10 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:    3
  3114 ;; This function calls:
  3115 ;;		___lbmod
  3116 ;;		___wmul
  3117 ;; This function is called by:
  3118 ;;		_ES_Run
  3119 ;;		_ES_RecallEvents
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text16
  3124  00054C                     __ptext16:
  3125                           	opt stack 0
  3126  00054C                     _ES_DeQueue:
  3127                           	opt stack 26
  3128                           
  3129                           ;ES_Queue.c: 166: unsigned char SaveCrit;
  3130                           ;ES_Queue.c: 167: pQueue_t pThisQueue;
  3131                           ;ES_Queue.c: 168: uint8_t NumLeft;
  3132                           ;ES_Queue.c: 170: pThisQueue = (pQueue_t)pBlock;
  3133                           
  3134                           ;incstack = 0
  3135  00054C  C01D  F025         	movff	ES_DeQueue@pBlock,ES_DeQueue@pThisQueue
  3136  000550  C01E  F026         	movff	ES_DeQueue@pBlock+1,ES_DeQueue@pThisQueue+1
  3137                           
  3138                           ;ES_Queue.c: 171: if ( pThisQueue->NumEntries > 0)
  3139  000554  EE20 F002          	lfsr	2,2
  3140  000558  5025               	movf	ES_DeQueue@pThisQueue,w,c
  3141  00055A  26D9               	addwf	fsr2l,f,c
  3142  00055C  5026               	movf	ES_DeQueue@pThisQueue+1,w,c
  3143  00055E  22DA               	addwfc	fsr2h,f,c
  3144  000560  50DF               	movf	indf2,w,c
  3145  000562  B4D8               	btfsc	status,2,c
  3146  000564  D05E               	goto	l2976
  3147                           
  3148                           ;ES_Queue.c: 172: {
  3149                           ;ES_Queue.c: 173: do{ SaveCrit = INTCON; GIE = 0;}while(0);
  3150  000566  CFF2 F023          	movff	intcon,ES_DeQueue@SaveCrit	;volatile
  3151  00056A  9EF2               	bcf	intcon,7,c	;volatile
  3152                           
  3153                           ;ES_Queue.c: 174: *pReturnEvent = pBlock[ 1 + pThisQueue->CurrentIndex ];
  3154  00056C  EE20 F001          	lfsr	2,1
  3155  000570  5025               	movf	ES_DeQueue@pThisQueue,w,c
  3156  000572  26D9               	addwf	fsr2l,f,c
  3157  000574  5026               	movf	ES_DeQueue@pThisQueue+1,w,c
  3158  000576  22DA               	addwfc	fsr2h,f,c
  3159  000578  50DF               	movf	indf2,w,c
  3160  00057A  6E21               	movwf	??_ES_DeQueue& (0+255),c
  3161  00057C  0E01               	movlw	1
  3162  00057E  2421               	addwf	??_ES_DeQueue,w,c
  3163  000580  6E17               	movwf	___wmul@multiplier,c
  3164  000582  6A18               	clrf	___wmul@multiplier+1,c
  3165  000584  0E00               	movlw	0
  3166  000586  2218               	addwfc	___wmul@multiplier+1,f,c
  3167  000588  0E00               	movlw	0
  3168  00058A  6E1A               	movwf	___wmul@multiplicand+1,c
  3169  00058C  0E03               	movlw	3
  3170  00058E  6E19               	movwf	___wmul@multiplicand,c
  3171  000590  EC63  F008         	call	___wmul	;wreg free
  3172  000594  5017               	movf	?___wmul,w,c
  3173  000596  241D               	addwf	ES_DeQueue@pBlock,w,c
  3174  000598  6ED9               	movwf	fsr2l,c
  3175  00059A  5018               	movf	?___wmul+1,w,c
  3176  00059C  201E               	addwfc	ES_DeQueue@pBlock+1,w,c
  3177  00059E  6EDA               	movwf	fsr2h,c
  3178  0005A0  C01F  FFE1         	movff	ES_DeQueue@pReturnEvent,fsr1l
  3179  0005A4  C020  FFE2         	movff	ES_DeQueue@pReturnEvent+1,fsr1h
  3180  0005A8  CFDE FFE6          	movff	postinc2,postinc1
  3181  0005AC  CFDE FFE6          	movff	postinc2,postinc1
  3182  0005B0  CFDE FFE6          	movff	postinc2,postinc1
  3183                           
  3184                           ;ES_Queue.c: 176: pThisQueue->CurrentIndex++;
  3185  0005B4  EE20 F001          	lfsr	2,1
  3186  0005B8  5025               	movf	ES_DeQueue@pThisQueue,w,c
  3187  0005BA  26D9               	addwf	fsr2l,f,c
  3188  0005BC  5026               	movf	ES_DeQueue@pThisQueue+1,w,c
  3189  0005BE  22DA               	addwfc	fsr2h,f,c
  3190  0005C0  2ADF               	incf	indf2,f,c
  3191                           
  3192                           ;ES_Queue.c: 178: if (pThisQueue->CurrentIndex >= pThisQueue->QueueSize)
  3193  0005C2  C025  FFD9         	movff	ES_DeQueue@pThisQueue,fsr2l
  3194  0005C6  C026  FFDA         	movff	ES_DeQueue@pThisQueue+1,fsr2h
  3195  0005CA  EE10 F001          	lfsr	1,1
  3196  0005CE  5025               	movf	ES_DeQueue@pThisQueue,w,c
  3197  0005D0  26E1               	addwf	fsr1l,f,c
  3198  0005D2  5026               	movf	ES_DeQueue@pThisQueue+1,w,c
  3199  0005D4  22E2               	addwfc	fsr1h,f,c
  3200  0005D6  50DE               	movf	postinc2,w,c
  3201  0005D8  5CE6               	subwf	postinc1,w,c
  3202  0005DA  A0D8               	btfss	status,0,c
  3203  0005DC  D016               	goto	l2972
  3204                           
  3205                           ;ES_Queue.c: 179: pThisQueue->CurrentIndex = (uint8_t)(pThisQueue->CurrentIndex % pThisQ
      +                          ueue->QueueSize);
  3206  0005DE  EE20 F001          	lfsr	2,1
  3207  0005E2  5025               	movf	ES_DeQueue@pThisQueue,w,c
  3208  0005E4  26D9               	addwf	fsr2l,f,c
  3209  0005E6  5026               	movf	ES_DeQueue@pThisQueue+1,w,c
  3210  0005E8  22DA               	addwfc	fsr2h,f,c
  3211  0005EA  C025  FFE1         	movff	ES_DeQueue@pThisQueue,fsr1l
  3212  0005EE  C026  FFE2         	movff	ES_DeQueue@pThisQueue+1,fsr1h
  3213  0005F2  50E7               	movf	indf1,w,c
  3214  0005F4  6E11               	movwf	___lbmod@divisor,c
  3215  0005F6  EE10 F001          	lfsr	1,1
  3216  0005FA  5025               	movf	ES_DeQueue@pThisQueue,w,c
  3217  0005FC  26E1               	addwf	fsr1l,f,c
  3218  0005FE  5026               	movf	ES_DeQueue@pThisQueue+1,w,c
  3219  000600  22E2               	addwfc	fsr1h,f,c
  3220  000602  50E7               	movf	indf1,w,c
  3221  000604  EC3B  F008         	call	___lbmod
  3222  000608  6EDF               	movwf	indf2,c
  3223  00060A                     l2972:
  3224                           
  3225                           ;ES_Queue.c: 181: NumLeft = --pThisQueue->NumEntries;
  3226  00060A  EE20 F002          	lfsr	2,2
  3227  00060E  5025               	movf	ES_DeQueue@pThisQueue,w,c
  3228  000610  26D9               	addwf	fsr2l,f,c
  3229  000612  5026               	movf	ES_DeQueue@pThisQueue+1,w,c
  3230  000614  22DA               	addwfc	fsr2h,f,c
  3231  000616  06DF               	decf	indf2,f,c
  3232  000618  50DF               	movf	indf2,w,c
  3233  00061A  6E24               	movwf	ES_DeQueue@NumLeft,c
  3234                           
  3235                           ;ES_Queue.c: 182: {INTCON = SaveCrit;};
  3236  00061C  C023  FFF2         	movff	ES_DeQueue@SaveCrit,intcon	;volatile
  3237                           
  3238                           ;ES_Queue.c: 183: }else {
  3239  000620  D012               	goto	l2982
  3240  000622                     l2976:
  3241                           
  3242                           ;ES_Queue.c: 184: (*pReturnEvent).EventType = ES_NO_EVENT;
  3243  000622  C01F  FFD9         	movff	ES_DeQueue@pReturnEvent,fsr2l
  3244  000626  C020  FFDA         	movff	ES_DeQueue@pReturnEvent+1,fsr2h
  3245  00062A  0E00               	movlw	0
  3246  00062C  6EDF               	movwf	indf2,c
  3247                           
  3248                           ;ES_Queue.c: 185: (*pReturnEvent).EventParam = 0;
  3249  00062E  EE20 F001          	lfsr	2,1
  3250  000632  501F               	movf	ES_DeQueue@pReturnEvent,w,c
  3251  000634  26D9               	addwf	fsr2l,f,c
  3252  000636  5020               	movf	ES_DeQueue@pReturnEvent+1,w,c
  3253  000638  22DA               	addwfc	fsr2h,f,c
  3254  00063A  0E00               	movlw	0
  3255  00063C  6EDE               	movwf	postinc2,c
  3256  00063E  0E00               	movlw	0
  3257  000640  6EDD               	movwf	postdec2,c
  3258                           
  3259                           ;ES_Queue.c: 186: NumLeft = 0;
  3260  000642  0E00               	movlw	0
  3261  000644  6E24               	movwf	ES_DeQueue@NumLeft,c
  3262  000646                     l2982:
  3263                           
  3264                           ;ES_Queue.c: 187: }
  3265                           ;ES_Queue.c: 188: return NumLeft;
  3266  000646  5024               	movf	ES_DeQueue@NumLeft,w,c
  3267  000648  0012               	return	
  3268  00064A                     __end_of_ES_DeQueue:
  3269                           	opt stack 0
  3270                           tosu	equ	0xFFF
  3271                           tosh	equ	0xFFE
  3272                           tosl	equ	0xFFD
  3273                           pclath	equ	0xFFA
  3274                           tblptru	equ	0xFF8
  3275                           tblptrh	equ	0xFF7
  3276                           tblptrl	equ	0xFF6
  3277                           tablat	equ	0xFF5
  3278                           prodh	equ	0xFF4
  3279                           prodl	equ	0xFF3
  3280                           intcon	equ	0xFF2
  3281                           postinc0	equ	0xFEE
  3282                           wreg	equ	0xFE8
  3283                           indf1	equ	0xFE7
  3284                           postinc1	equ	0xFE6
  3285                           postdec1	equ	0xFE5
  3286                           fsr1h	equ	0xFE2
  3287                           fsr1l	equ	0xFE1
  3288                           indf2	equ	0xFDF
  3289                           postinc2	equ	0xFDE
  3290                           postdec2	equ	0xFDD
  3291                           fsr2h	equ	0xFDA
  3292                           fsr2l	equ	0xFD9
  3293                           status	equ	0xFD8
  3294                           
  3295 ;; *************** function ___lbmod *****************
  3296 ;; Defined at:
  3297 ;;		line 4 in file "/Applications/microchip/xc8/v1.38/sources/common/lbmod.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  dividend        1    wreg     unsigned char 
  3300 ;;  divisor         1   16[COMRAM] unsigned char 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  dividend        1   17[COMRAM] unsigned char 
  3303 ;;  rem             1   19[COMRAM] unsigned char 
  3304 ;;  counter         1   18[COMRAM] unsigned char 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  1    wreg      unsigned char 
  3307 ;; Registers used:
  3308 ;;		wreg, status,2, status,0
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3314 ;;      Params:         1       0       0       0
  3315 ;;      Locals:         3       0       0       0
  3316 ;;      Temps:          0       0       0       0
  3317 ;;      Totals:         4       0       0       0
  3318 ;;Total ram usage:        4 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    2
  3321 ;; This function calls:
  3322 ;;		Nothing
  3323 ;; This function is called by:
  3324 ;;		_ES_DeQueue
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text17
  3329  001076                     __ptext17:
  3330                           	opt stack 0
  3331  001076                     ___lbmod:
  3332                           	opt stack 26
  3333                           
  3334                           ;incstack = 0
  3335                           ;___lbmod@dividend stored from wreg
  3336  001076  6E12               	movwf	___lbmod@dividend,c
  3337  001078  0E08               	movlw	8
  3338  00107A  6E13               	movwf	___lbmod@counter,c
  3339  00107C  0E00               	movlw	0
  3340  00107E  6E14               	movwf	___lbmod@rem,c
  3341  001080                     l2880:
  3342  001080  90D8               	bcf	status,0,c
  3343  001082  3412               	rlcf	___lbmod@dividend,w,c
  3344  001084  3414               	rlcf	___lbmod@rem,w,c
  3345  001086  6E14               	movwf	___lbmod@rem,c
  3346  001088  90D8               	bcf	status,0,c
  3347  00108A  3612               	rlcf	___lbmod@dividend,f,c
  3348  00108C  5011               	movf	___lbmod@divisor,w,c
  3349  00108E  5C14               	subwf	___lbmod@rem,w,c
  3350  001090  A0D8               	btfss	status,0,c
  3351  001092  D002               	goto	l2888
  3352  001094  5011               	movf	___lbmod@divisor,w,c
  3353  001096  5E14               	subwf	___lbmod@rem,f,c
  3354  001098                     l2888:
  3355  001098  2E13               	decfsz	___lbmod@counter,f,c
  3356  00109A  D7F2               	goto	l2880
  3357  00109C  5014               	movf	___lbmod@rem,w,c
  3358  00109E  0012               	return	
  3359  0010A0                     __end_of___lbmod:
  3360                           	opt stack 0
  3361                           tosu	equ	0xFFF
  3362                           tosh	equ	0xFFE
  3363                           tosl	equ	0xFFD
  3364                           pclath	equ	0xFFA
  3365                           tblptru	equ	0xFF8
  3366                           tblptrh	equ	0xFF7
  3367                           tblptrl	equ	0xFF6
  3368                           tablat	equ	0xFF5
  3369                           prodh	equ	0xFF4
  3370                           prodl	equ	0xFF3
  3371                           intcon	equ	0xFF2
  3372                           postinc0	equ	0xFEE
  3373                           wreg	equ	0xFE8
  3374                           indf1	equ	0xFE7
  3375                           postinc1	equ	0xFE6
  3376                           postdec1	equ	0xFE5
  3377                           fsr1h	equ	0xFE2
  3378                           fsr1l	equ	0xFE1
  3379                           indf2	equ	0xFDF
  3380                           postinc2	equ	0xFDE
  3381                           postdec2	equ	0xFDD
  3382                           fsr2h	equ	0xFDA
  3383                           fsr2l	equ	0xFD9
  3384                           status	equ	0xFD8
  3385                           
  3386 ;; *************** function _ES_CheckUserEvents *****************
  3387 ;; Defined at:
  3388 ;;		line 46 in file "ES_CheckEvents.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;		None
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  i               1    9[BANK0 ] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      unsigned char 
  3395 ;; Registers used:
  3396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3402 ;;      Params:         0       0       0       0
  3403 ;;      Locals:         0       1       0       0
  3404 ;;      Temps:          0       0       0       0
  3405 ;;      Totals:         0       1       0       0
  3406 ;;Total ram usage:        1 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    7
  3409 ;; This function calls:
  3410 ;;		_Check4Keystroke
  3411 ;;		_CheckButtonEvents
  3412 ;; This function is called by:
  3413 ;;		_ES_Run
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text18
  3418  000F66                     __ptext18:
  3419                           	opt stack 0
  3420  000F66                     _ES_CheckUserEvents:
  3421                           	opt stack 22
  3422                           
  3423                           ;ES_CheckEvents.c: 48: uint8_t i;
  3424                           ;ES_CheckEvents.c: 50: for ( i=0; i< (sizeof(ES_EventList)/sizeof(ES_EventList[0])); i++
      +                          ) {
  3425                           
  3426                           ;incstack = 0
  3427  000F66  0E00               	movlw	0
  3428  000F68  0100               	movlb	0	; () banked
  3429  000F6A  6FA3               	movwf	ES_CheckUserEvents@i& (0+255),b
  3430  000F6C                     l2942:
  3431                           
  3432                           ; BSR set to: 0
  3433  000F6C  0E01               	movlw	1
  3434  000F6E  0100               	movlb	0	; () banked
  3435  000F70  65A3               	cpfsgt	ES_CheckUserEvents@i& (0+255),b
  3436  000F72  D001               	goto	l2946
  3437  000F74  0012               	return	
  3438  000F76                     l2946:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;ES_CheckEvents.c: 51: if ( ES_EventList[i]() == 1 )
  3442  000F76  0100               	movlb	0	; () banked
  3443  000F78  51A3               	movf	ES_CheckUserEvents@i& (0+255),w,b
  3444  000F7A  0D02               	mullw	2
  3445  000F7C  0E5E               	movlw	low _ES_EventList
  3446  000F7E  24F3               	addwf	prodl,w,c
  3447  000F80  6EF6               	movwf	tblptrl,c
  3448  000F82  0E03               	movlw	high _ES_EventList
  3449  000F84  20F4               	addwfc	prodh,w,c
  3450  000F86  6EF7               	movwf	tblptrh,c
  3451  000F88                     	if	0	;There are less than 3 active tblptr bytes
  3452  000F88                     	endif
  3453  000F88  D801               	call	u1938
  3454  000F8A  D00C               	goto	u1939
  3455  000F8C                     u1938:
  3456  000F8C  0005               	push	
  3457  000F8E  6EFA               	movwf	pclath,c
  3458  000F90  0009               	tblrd		*+
  3459  000F92  50F5               	movf	tablat,w,c
  3460  000F94  6EFD               	movwf	tosl,c
  3461  000F96  0009               	tblrd		*+
  3462  000F98  50F5               	movf	tablat,w,c
  3463  000F9A  6EFE               	movwf	tosh,c
  3464  000F9C  50F8               	movf	tblptru,w,c
  3465  000F9E  6EFF               	movwf	tosu,c
  3466  000FA0  50FA               	movf	pclath,w,c
  3467  000FA2  0012               	return		;indir
  3468  000FA4                     u1939:
  3469  000FA4  06E8               	decf	wreg,f,c
  3470  000FA6  B4D8               	btfsc	status,2,c
  3471  000FA8  0012               	return	
  3472                           
  3473                           ;ES_CheckEvents.c: 52: break;
  3474  000FAA  0100               	movlb	0	; () banked
  3475  000FAC  2BA3               	incf	ES_CheckUserEvents@i& (0+255),f,b
  3476  000FAE  D7DE               	goto	l2942
  3477  000FB0                     __end_of_ES_CheckUserEvents:
  3478                           	opt stack 0
  3479                           tosu	equ	0xFFF
  3480                           tosh	equ	0xFFE
  3481                           tosl	equ	0xFFD
  3482                           pclath	equ	0xFFA
  3483                           tblptru	equ	0xFF8
  3484                           tblptrh	equ	0xFF7
  3485                           tblptrl	equ	0xFF6
  3486                           tablat	equ	0xFF5
  3487                           prodh	equ	0xFF4
  3488                           prodl	equ	0xFF3
  3489                           intcon	equ	0xFF2
  3490                           postinc0	equ	0xFEE
  3491                           wreg	equ	0xFE8
  3492                           indf1	equ	0xFE7
  3493                           postinc1	equ	0xFE6
  3494                           postdec1	equ	0xFE5
  3495                           fsr1h	equ	0xFE2
  3496                           fsr1l	equ	0xFE1
  3497                           indf2	equ	0xFDF
  3498                           postinc2	equ	0xFDE
  3499                           postdec2	equ	0xFDD
  3500                           fsr2h	equ	0xFDA
  3501                           fsr2l	equ	0xFD9
  3502                           status	equ	0xFD8
  3503                           
  3504 ;; *************** function _Check4Keystroke *****************
  3505 ;; Defined at:
  3506 ;;		line 62 in file "EventCheckers.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;		None
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;		None
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      unsigned char 
  3513 ;; Registers used:
  3514 ;;		wreg
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3520 ;;      Params:         0       0       0       0
  3521 ;;      Locals:         0       0       0       0
  3522 ;;      Temps:          0       0       0       0
  3523 ;;      Totals:         0       0       0       0
  3524 ;;Total ram usage:        0 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:    2
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_ES_CheckUserEvents
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text19
  3535  001188                     __ptext19:
  3536                           	opt stack 0
  3537  001188                     _Check4Keystroke:
  3538                           	opt stack 26
  3539                           
  3540                           ;EventCheckers.c: 78: return 0;
  3541                           
  3542                           ;incstack = 0
  3543  001188  0E00               	movlw	0
  3544  00118A  0012               	return	
  3545  00118C                     __end_of_Check4Keystroke:
  3546                           	opt stack 0
  3547                           tosu	equ	0xFFF
  3548                           tosh	equ	0xFFE
  3549                           tosl	equ	0xFFD
  3550                           pclath	equ	0xFFA
  3551                           tblptru	equ	0xFF8
  3552                           tblptrh	equ	0xFF7
  3553                           tblptrl	equ	0xFF6
  3554                           tablat	equ	0xFF5
  3555                           prodh	equ	0xFF4
  3556                           prodl	equ	0xFF3
  3557                           intcon	equ	0xFF2
  3558                           postinc0	equ	0xFEE
  3559                           wreg	equ	0xFE8
  3560                           indf1	equ	0xFE7
  3561                           postinc1	equ	0xFE6
  3562                           postdec1	equ	0xFE5
  3563                           fsr1h	equ	0xFE2
  3564                           fsr1l	equ	0xFE1
  3565                           indf2	equ	0xFDF
  3566                           postinc2	equ	0xFDE
  3567                           postdec2	equ	0xFDD
  3568                           fsr2h	equ	0xFDA
  3569                           fsr2l	equ	0xFD9
  3570                           status	equ	0xFD8
  3571                           
  3572 ;; *************** function _CheckButtonEvents *****************
  3573 ;; Defined at:
  3574 ;;		line 44 in file "Button.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;		None
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  ThisEvent       3    5[BANK0 ] struct ES_Event_t
  3579 ;;  CurrentButto    1    8[BANK0 ] unsigned char 
  3580 ;;  ReturnVal       1    4[BANK0 ] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      unsigned char 
  3583 ;; Registers used:
  3584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3590 ;;      Params:         0       0       0       0
  3591 ;;      Locals:         0       5       0       0
  3592 ;;      Temps:          0       0       0       0
  3593 ;;      Totals:         0       5       0       0
  3594 ;;Total ram usage:        5 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; Hardware stack levels required when called:    6
  3597 ;; This function calls:
  3598 ;;		_GetInputLine
  3599 ;;		_PostButtonDebounceSM
  3600 ;; This function is called by:
  3601 ;;		_ES_CheckUserEvents
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text20
  3606  000E4C                     __ptext20:
  3607                           	opt stack 0
  3608  000E4C                     _CheckButtonEvents:
  3609                           	opt stack 22
  3610                           
  3611                           ;Button.c: 46: uint8_t CurrentButtonState;
  3612                           ;Button.c: 47: bool ReturnVal = 0;
  3613                           
  3614                           ;incstack = 0
  3615  000E4C  0E00               	movlw	0
  3616  000E4E  0100               	movlb	0	; () banked
  3617  000E50  6F9E               	movwf	CheckButtonEvents@ReturnVal& (0+255),b
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;Button.c: 49: CurrentButtonState = GetInputLine();
  3621  000E52  ECBE  F008         	call	_GetInputLine	;wreg free
  3622  000E56  0100               	movlb	0	; () banked
  3623  000E58  6FA2               	movwf	CheckButtonEvents@CurrentButtonState& (0+255),b
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;Button.c: 51: if (CurrentButtonState != LastButtonState) {
  3627  000E5A  5040               	movf	_LastButtonState,w,c
  3628  000E5C  0100               	movlb	0	; () banked
  3629  000E5E  19A2               	xorwf	CheckButtonEvents@CurrentButtonState& (0+255),w,b
  3630  000E60  B4D8               	btfsc	status,2,c
  3631  000E62  D023               	goto	l2742
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;Button.c: 53: ReturnVal = 1;
  3635  000E64  0E01               	movlw	1
  3636  000E66  0100               	movlb	0	; () banked
  3637  000E68  6F9E               	movwf	CheckButtonEvents@ReturnVal& (0+255),b
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;Button.c: 54: ES_Event ThisEvent;
  3641                           ;Button.c: 55: ThisEvent.EventParam = CurrentButtonState;
  3642  000E6A  C0A2  F0A0         	movff	CheckButtonEvents@CurrentButtonState,CheckButtonEvents@ThisEvent+1
  3643  000E6E  0100               	movlb	0	; () banked
  3644  000E70  6BA1               	clrf	(CheckButtonEvents@ThisEvent+2)& (0+255),b
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;Button.c: 57: if (CurrentButtonState != 0x7F) {
  3648  000E72  0E7F               	movlw	127
  3649  000E74  0100               	movlb	0	; () banked
  3650  000E76  19A2               	xorwf	CheckButtonEvents@CurrentButtonState& (0+255),w,b
  3651  000E78  B4D8               	btfsc	status,2,c
  3652  000E7A  D00C               	goto	l2738
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;Button.c: 59: ThisEvent.EventType = DBButtonDown;
  3656  000E7C  0E05               	movlw	5
  3657  000E7E  0100               	movlb	0	; () banked
  3658  000E80  6F9F               	movwf	CheckButtonEvents@ThisEvent& (0+255),b
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;Button.c: 60: PostButtonDebounceSM(ThisEvent);
  3662  000E82  C09F  F09B         	movff	CheckButtonEvents@ThisEvent,PostButtonDebounceSM@ThisEvent
  3663  000E86  C0A0  F09C         	movff	CheckButtonEvents@ThisEvent+1,PostButtonDebounceSM@ThisEvent+1
  3664  000E8A  C0A1  F09D         	movff	CheckButtonEvents@ThisEvent+2,PostButtonDebounceSM@ThisEvent+2
  3665  000E8E  EC85  F008         	call	_PostButtonDebounceSM	;wreg free
  3666                           
  3667                           ;Button.c: 62: } else {
  3668  000E92  D00B               	goto	l2742
  3669  000E94                     l2738:
  3670                           
  3671                           ;Button.c: 64: ThisEvent.EventType = DBButtonUp;
  3672  000E94  0E06               	movlw	6
  3673  000E96  0100               	movlb	0	; () banked
  3674  000E98  6F9F               	movwf	CheckButtonEvents@ThisEvent& (0+255),b
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;Button.c: 65: PostButtonDebounceSM(ThisEvent);
  3678  000E9A  C09F  F09B         	movff	CheckButtonEvents@ThisEvent,PostButtonDebounceSM@ThisEvent
  3679  000E9E  C0A0  F09C         	movff	CheckButtonEvents@ThisEvent+1,PostButtonDebounceSM@ThisEvent+1
  3680  000EA2  C0A1  F09D         	movff	CheckButtonEvents@ThisEvent+2,PostButtonDebounceSM@ThisEvent+2
  3681  000EA6  EC85  F008         	call	_PostButtonDebounceSM	;wreg free
  3682  000EAA                     l2742:
  3683                           
  3684                           ;Button.c: 66: }
  3685                           ;Button.c: 67: }
  3686                           ;Button.c: 69: LastButtonState = CurrentButtonState;
  3687  000EAA  C0A2  F040         	movff	CheckButtonEvents@CurrentButtonState,_LastButtonState
  3688                           
  3689                           ;Button.c: 71: return ReturnVal;
  3690  000EAE  0100               	movlb	0	; () banked
  3691  000EB0  519E               	movf	CheckButtonEvents@ReturnVal& (0+255),w,b
  3692  000EB2  0012               	return	
  3693  000EB4                     __end_of_CheckButtonEvents:
  3694                           	opt stack 0
  3695                           tosu	equ	0xFFF
  3696                           tosh	equ	0xFFE
  3697                           tosl	equ	0xFFD
  3698                           pclath	equ	0xFFA
  3699                           tblptru	equ	0xFF8
  3700                           tblptrh	equ	0xFF7
  3701                           tblptrl	equ	0xFF6
  3702                           tablat	equ	0xFF5
  3703                           prodh	equ	0xFF4
  3704                           prodl	equ	0xFF3
  3705                           intcon	equ	0xFF2
  3706                           postinc0	equ	0xFEE
  3707                           wreg	equ	0xFE8
  3708                           indf1	equ	0xFE7
  3709                           postinc1	equ	0xFE6
  3710                           postdec1	equ	0xFE5
  3711                           fsr1h	equ	0xFE2
  3712                           fsr1l	equ	0xFE1
  3713                           indf2	equ	0xFDF
  3714                           postinc2	equ	0xFDE
  3715                           postdec2	equ	0xFDD
  3716                           fsr2h	equ	0xFDA
  3717                           fsr2l	equ	0xFD9
  3718                           status	equ	0xFD8
  3719                           
  3720 ;; *************** function _ES_Initialize *****************
  3721 ;; Defined at:
  3722 ;;		line 242 in file "ES_Framework.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  NewRate         2    5[BANK0 ] enum E15421
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  i               1    7[BANK0 ] unsigned char 
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      enum E15492
  3729 ;; Registers used:
  3730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3736 ;;      Params:         0       2       0       0
  3737 ;;      Locals:         0       1       0       0
  3738 ;;      Temps:          0       0       0       0
  3739 ;;      Totals:         0       3       0       0
  3740 ;;Total ram usage:        3 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    6
  3743 ;; This function calls:
  3744 ;;		_ES_InitQueue
  3745 ;;		_ES_Timer_Init
  3746 ;;		_InitCan_XmitService
  3747 ;;		_InitializeButtonDebounce
  3748 ;; This function is called by:
  3749 ;;		_main
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	text21
  3754  000742                     __ptext21:
  3755                           	opt stack 0
  3756  000742                     _ES_Initialize:
  3757                           	opt stack 24
  3758                           
  3759                           ;ES_Framework.c: 243: uint8_t i;
  3760                           ;ES_Framework.c: 244: ES_Timer_Init( NewRate);
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;incstack = 0
  3764  000742  C09F  F013         	movff	ES_Initialize@NewRate,ES_Timer_Init@Rate
  3765  000746  C0A0  F014         	movff	ES_Initialize@NewRate+1,ES_Timer_Init@Rate+1
  3766  00074A  ECA9  F008         	call	_ES_Timer_Init	;wreg free
  3767                           
  3768                           ;ES_Framework.c: 246: for ( i=0; i< (sizeof(ServDescList)/sizeof(ServDescList[0])); i++)
      +                           {
  3769  00074E  0E00               	movlw	0
  3770  000750  0100               	movlb	0	; () banked
  3771  000752  6FA1               	movwf	ES_Initialize@i& (0+255),b
  3772  000754                     l3104:
  3773                           
  3774                           ; BSR set to: 0
  3775  000754  0E01               	movlw	1
  3776  000756  0100               	movlb	0	; () banked
  3777  000758  65A1               	cpfsgt	ES_Initialize@i& (0+255),b
  3778  00075A  D001               	goto	l3108
  3779  00075C  D066               	goto	l3128
  3780  00075E                     l3108:
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;ES_Framework.c: 247: if ( (ServDescList[i].InitFunc == (pInitFunc)0) ||
  3784                           ;ES_Framework.c: 248: (ServDescList[i].RunFunc == (pRunFunc)0) )
  3785  00075E  0100               	movlb	0	; () banked
  3786  000760  51A1               	movf	ES_Initialize@i& (0+255),w,b
  3787  000762  0D04               	mullw	4
  3788  000764  0E50               	movlw	low _ServDescList
  3789  000766  24F3               	addwf	prodl,w,c
  3790  000768  6EF6               	movwf	tblptrl,c
  3791  00076A  0E03               	movlw	high _ServDescList
  3792  00076C  20F4               	addwfc	prodh,w,c
  3793  00076E  6EF7               	movwf	tblptrh,c
  3794  000770                     	if	0	;There are less than 3 active tblptr bytes
  3795  000770                     	endif
  3796  000770  0009               	tblrd		*+
  3797  000772  50F5               	movf	tablat,w,c
  3798  000774  0009               	tblrd		*+
  3799  000776  10F5               	iorwf	tablat,w,c
  3800  000778  B4D8               	btfsc	status,2,c
  3801  00077A  D013               	goto	l3112
  3802                           
  3803                           ; BSR set to: 0
  3804  00077C  0100               	movlb	0	; () banked
  3805  00077E  51A1               	movf	ES_Initialize@i& (0+255),w,b
  3806  000780  0D04               	mullw	4
  3807  000782  0E02               	movlw	2
  3808  000784  26F3               	addwf	prodl,f,c
  3809  000786  0E00               	movlw	0
  3810  000788  22F4               	addwfc	prodh,f,c
  3811  00078A  0E50               	movlw	low _ServDescList
  3812  00078C  24F3               	addwf	prodl,w,c
  3813  00078E  6EF6               	movwf	tblptrl,c
  3814  000790  0E03               	movlw	high _ServDescList
  3815  000792  20F4               	addwfc	prodh,w,c
  3816  000794  6EF7               	movwf	tblptrh,c
  3817  000796                     	if	0	;There are less than 3 active tblptr bytes
  3818  000796                     	endif
  3819  000796  0009               	tblrd		*+
  3820  000798  50F5               	movf	tablat,w,c
  3821  00079A  0009               	tblrd		*+
  3822  00079C  10F5               	iorwf	tablat,w,c
  3823  00079E  A4D8               	btfss	status,2,c
  3824  0007A0  D002               	goto	l3116
  3825  0007A2                     l3112:
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;ES_Framework.c: 249: return FailedPointer;
  3829  0007A2  0E03               	movlw	3
  3830                           
  3831                           ; BSR set to: 0
  3832  0007A4  0012               	return	
  3833  0007A6                     l3116:
  3834                           
  3835                           ; BSR set to: 0
  3836                           ;ES_Framework.c: 251: ES_InitQueue( EventQueues[i].pMem, EventQueues[i].Size );
  3837  0007A6  0100               	movlb	0	; () banked
  3838  0007A8  51A1               	movf	ES_Initialize@i& (0+255),w,b
  3839  0007AA  0D03               	mullw	3
  3840  0007AC  0E58               	movlw	low _EventQueues
  3841  0007AE  24F3               	addwf	prodl,w,c
  3842  0007B0  6EF6               	movwf	tblptrl,c
  3843  0007B2  0E03               	movlw	high _EventQueues
  3844  0007B4  20F4               	addwfc	prodh,w,c
  3845  0007B6  6EF7               	movwf	tblptrh,c
  3846  0007B8                     	if	0	;There are less than 3 active tblptr bytes
  3847  0007B8                     	endif
  3848  0007B8  0009               	tblrd		*+
  3849  0007BA  CFF5 F011          	movff	tablat,ES_InitQueue@pBlock
  3850  0007BE  000A               	tblrd		*-
  3851  0007C0  CFF5 F012          	movff	tablat,ES_InitQueue@pBlock+1
  3852  0007C4  0100               	movlb	0	; () banked
  3853  0007C6  51A1               	movf	ES_Initialize@i& (0+255),w,b
  3854  0007C8  0D03               	mullw	3
  3855  0007CA  0E02               	movlw	2
  3856  0007CC  26F3               	addwf	prodl,f,c
  3857  0007CE  0E00               	movlw	0
  3858  0007D0  22F4               	addwfc	prodh,f,c
  3859  0007D2  0E58               	movlw	low _EventQueues
  3860  0007D4  24F3               	addwf	prodl,w,c
  3861  0007D6  6EF6               	movwf	tblptrl,c
  3862  0007D8  0E03               	movlw	high _EventQueues
  3863  0007DA  20F4               	addwfc	prodh,w,c
  3864  0007DC  6EF7               	movwf	tblptrh,c
  3865  0007DE                     	if	0	;There are less than 3 active tblptr bytes
  3866  0007DE                     	endif
  3867  0007DE  0008               	tblrd		*
  3868  0007E0  CFF5 F013          	movff	tablat,ES_InitQueue@BlockSize
  3869  0007E4  ECF4  F007         	call	_ES_InitQueue	;wreg free
  3870                           
  3871                           ;ES_Framework.c: 253: if ( ServDescList[i].InitFunc(i) != 1 )
  3872  0007E8  0100               	movlb	0	; () banked
  3873  0007EA  51A1               	movf	ES_Initialize@i& (0+255),w,b
  3874  0007EC  0D04               	mullw	4
  3875  0007EE  0E50               	movlw	low _ServDescList
  3876  0007F0  24F3               	addwf	prodl,w,c
  3877  0007F2  6EF6               	movwf	tblptrl,c
  3878  0007F4  0E03               	movlw	high _ServDescList
  3879  0007F6  20F4               	addwfc	prodh,w,c
  3880  0007F8  6EF7               	movwf	tblptrh,c
  3881  0007FA                     	if	0	;There are less than 3 active tblptr bytes
  3882  0007FA                     	endif
  3883  0007FA  D801               	call	u2108
  3884  0007FC  D00E               	goto	u2109
  3885  0007FE                     u2108:
  3886  0007FE  0005               	push	
  3887  000800  6EFA               	movwf	pclath,c
  3888  000802  0009               	tblrd		*+
  3889  000804  50F5               	movf	tablat,w,c
  3890  000806  6EFD               	movwf	tosl,c
  3891  000808  0009               	tblrd		*+
  3892  00080A  50F5               	movf	tablat,w,c
  3893  00080C  6EFE               	movwf	tosh,c
  3894  00080E  50F8               	movf	tblptru,w,c
  3895  000810  6EFF               	movwf	tosu,c
  3896  000812  50FA               	movf	pclath,w,c
  3897  000814  0100               	movlb	0	; () banked
  3898  000816  51A1               	movf	ES_Initialize@i& (0+255),w,b
  3899  000818  0012               	return		;indir
  3900  00081A                     u2109:
  3901  00081A  06E8               	decf	wreg,f,c
  3902  00081C  B4D8               	btfsc	status,2,c
  3903  00081E  D002               	goto	l3124
  3904                           
  3905                           ;ES_Framework.c: 254: return FailedInit;
  3906  000820  0E05               	movlw	5
  3907  000822  0012               	return	
  3908  000824                     l3124:
  3909  000824  0100               	movlb	0	; () banked
  3910  000826  2BA1               	incf	ES_Initialize@i& (0+255),f,b
  3911  000828  D795               	goto	l3104
  3912  00082A                     l3128:
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;ES_Framework.c: 255: }
  3916                           ;ES_Framework.c: 256: return Success;
  3917  00082A  0E00               	movlw	0
  3918  00082C  0012               	return	
  3919  00082E                     __end_of_ES_Initialize:
  3920                           	opt stack 0
  3921                           tosu	equ	0xFFF
  3922                           tosh	equ	0xFFE
  3923                           tosl	equ	0xFFD
  3924                           pclath	equ	0xFFA
  3925                           tblptru	equ	0xFF8
  3926                           tblptrh	equ	0xFF7
  3927                           tblptrl	equ	0xFF6
  3928                           tablat	equ	0xFF5
  3929                           prodh	equ	0xFF4
  3930                           prodl	equ	0xFF3
  3931                           intcon	equ	0xFF2
  3932                           postinc0	equ	0xFEE
  3933                           wreg	equ	0xFE8
  3934                           indf1	equ	0xFE7
  3935                           postinc1	equ	0xFE6
  3936                           postdec1	equ	0xFE5
  3937                           fsr1h	equ	0xFE2
  3938                           fsr1l	equ	0xFE1
  3939                           indf2	equ	0xFDF
  3940                           postinc2	equ	0xFDE
  3941                           postdec2	equ	0xFDD
  3942                           fsr2h	equ	0xFDA
  3943                           fsr2l	equ	0xFD9
  3944                           status	equ	0xFD8
  3945                           
  3946 ;; *************** function _InitCan_XmitService *****************
  3947 ;; Defined at:
  3948 ;;		line 87 in file "Can_XmitService.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  Priority        1    wreg     unsigned char 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  Priority        1    4[BANK0 ] unsigned char 
  3953 ;;  ThisEvent       3    1[BANK0 ] struct ES_Event_t
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      unsigned char 
  3956 ;; Registers used:
  3957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3963 ;;      Params:         0       0       0       0
  3964 ;;      Locals:         0       4       0       0
  3965 ;;      Temps:          0       0       0       0
  3966 ;;      Totals:         0       4       0       0
  3967 ;;Total ram usage:        4 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; Hardware stack levels required when called:    5
  3970 ;; This function calls:
  3971 ;;		_ES_PostToService
  3972 ;; This function is called by:
  3973 ;;		_ES_Initialize
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           	psect	text22
  3978  00101E                     __ptext22:
  3979                           	opt stack 0
  3980  00101E                     _InitCan_XmitService:
  3981                           	opt stack 24
  3982                           
  3983                           ;incstack = 0
  3984                           ;InitCan_XmitService@Priority stored from wreg
  3985  00101E  0100               	movlb	0	; () banked
  3986  001020  6F9E               	movwf	InitCan_XmitService@Priority& (0+255),b
  3987                           
  3988                           ;Can_XmitService.c: 89: ES_Event ThisEvent;
  3989                           ;Can_XmitService.c: 91: MyPriority = Priority;
  3990  001022  C09E  F03C         	movff	InitCan_XmitService@Priority,Can_XmitService@MyPriority
  3991                           
  3992                           ;Can_XmitService.c: 94: ThisEvent.EventType = ES_INIT;
  3993  001026  0E02               	movlw	2
  3994  001028  0100               	movlb	0	; () banked
  3995  00102A  6F9B               	movwf	InitCan_XmitService@ThisEvent& (0+255),b
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;Can_XmitService.c: 95: if (ES_PostToService( MyPriority, ThisEvent) == 1)
  3999  00102C  C09B  F028         	movff	InitCan_XmitService@ThisEvent,ES_PostToService@TheEvent
  4000  001030  C09C  F029         	movff	InitCan_XmitService@ThisEvent+1,ES_PostToService@TheEvent+1
  4001  001034  C09D  F02A         	movff	InitCan_XmitService@ThisEvent+2,ES_PostToService@TheEvent+2
  4002  001038  503C               	movf	Can_XmitService@MyPriority,w,c
  4003  00103A  ECBA  F006         	call	_ES_PostToService
  4004  00103E  06E8               	decf	wreg,f,c
  4005  001040  A4D8               	btfss	status,2,c
  4006  001042  D002               	goto	l3022
  4007                           
  4008                           ;Can_XmitService.c: 96: {
  4009                           ;Can_XmitService.c: 97: return 1;
  4010  001044  0E01               	movlw	1
  4011                           
  4012                           ;Can_XmitService.c: 98: }else
  4013  001046  0012               	return	
  4014  001048                     l3022:
  4015                           
  4016                           ;Can_XmitService.c: 99: {
  4017                           ;Can_XmitService.c: 100: return 0;
  4018  001048  0E00               	movlw	0
  4019  00104A  0012               	return	
  4020  00104C                     __end_of_InitCan_XmitService:
  4021                           	opt stack 0
  4022                           tosu	equ	0xFFF
  4023                           tosh	equ	0xFFE
  4024                           tosl	equ	0xFFD
  4025                           pclath	equ	0xFFA
  4026                           tblptru	equ	0xFF8
  4027                           tblptrh	equ	0xFF7
  4028                           tblptrl	equ	0xFF6
  4029                           tablat	equ	0xFF5
  4030                           prodh	equ	0xFF4
  4031                           prodl	equ	0xFF3
  4032                           intcon	equ	0xFF2
  4033                           postinc0	equ	0xFEE
  4034                           wreg	equ	0xFE8
  4035                           indf1	equ	0xFE7
  4036                           postinc1	equ	0xFE6
  4037                           postdec1	equ	0xFE5
  4038                           fsr1h	equ	0xFE2
  4039                           fsr1l	equ	0xFE1
  4040                           indf2	equ	0xFDF
  4041                           postinc2	equ	0xFDE
  4042                           postdec2	equ	0xFDD
  4043                           fsr2h	equ	0xFDA
  4044                           fsr2l	equ	0xFD9
  4045                           status	equ	0xFD8
  4046                           
  4047 ;; *************** function _InitializeButtonDebounce *****************
  4048 ;; Defined at:
  4049 ;;		line 27 in file "Button.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  Priority        1    wreg     unsigned char 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;  Priority        1   21[COMRAM] unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      unsigned char 
  4056 ;; Registers used:
  4057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4063 ;;      Params:         0       0       0       0
  4064 ;;      Locals:         1       0       0       0
  4065 ;;      Temps:          0       0       0       0
  4066 ;;      Totals:         1       0       0       0
  4067 ;;Total ram usage:        1 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    3
  4070 ;; This function calls:
  4071 ;;		_ES_Timer_InitTimer
  4072 ;;		_GetInputLine
  4073 ;;		_InitButtonHW
  4074 ;; This function is called by:
  4075 ;;		_ES_Initialize
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text23
  4080  0010A0                     __ptext23:
  4081                           	opt stack 0
  4082  0010A0                     _InitializeButtonDebounce:
  4083                           	opt stack 26
  4084                           
  4085                           ;incstack = 0
  4086                           ;InitializeButtonDebounce@Priority stored from wreg
  4087  0010A0  6E16               	movwf	InitializeButtonDebounce@Priority,c
  4088                           
  4089                           ;Button.c: 29: MyPriority = Priority;
  4090  0010A2  C016  F041         	movff	InitializeButtonDebounce@Priority,_MyPriority
  4091                           
  4092                           ;Button.c: 30: InitButtonHW();
  4093  0010A6  ECB0  F008         	call	_InitButtonHW	;wreg free
  4094                           
  4095                           ;Button.c: 33: LastButtonState = GetInputLine();
  4096  0010AA  ECBE  F008         	call	_GetInputLine	;wreg free
  4097  0010AE  6E40               	movwf	_LastButtonState,c
  4098                           
  4099                           ;Button.c: 35: CurrentState = Debouncing;
  4100  0010B0  0E00               	movlw	0
  4101  0010B2  6E3E               	movwf	_CurrentState,c
  4102                           
  4103                           ;Button.c: 37: ES_Timer_InitTimer(1,2);
  4104  0010B4  0E00               	movlw	0
  4105  0010B6  6E12               	movwf	ES_Timer_InitTimer@NewTime+1,c
  4106  0010B8  0E02               	movlw	2
  4107  0010BA  6E11               	movwf	ES_Timer_InitTimer@NewTime,c
  4108  0010BC  0E01               	movlw	1
  4109  0010BE  ECF1  F006         	call	_ES_Timer_InitTimer
  4110                           
  4111                           ;Button.c: 39: return 1;
  4112  0010C2  0E01               	movlw	1
  4113  0010C4  0012               	return	
  4114  0010C6                     __end_of_InitializeButtonDebounce:
  4115                           	opt stack 0
  4116                           tosu	equ	0xFFF
  4117                           tosh	equ	0xFFE
  4118                           tosl	equ	0xFFD
  4119                           pclath	equ	0xFFA
  4120                           tblptru	equ	0xFF8
  4121                           tblptrh	equ	0xFF7
  4122                           tblptrl	equ	0xFF6
  4123                           tablat	equ	0xFF5
  4124                           prodh	equ	0xFF4
  4125                           prodl	equ	0xFF3
  4126                           intcon	equ	0xFF2
  4127                           postinc0	equ	0xFEE
  4128                           wreg	equ	0xFE8
  4129                           indf1	equ	0xFE7
  4130                           postinc1	equ	0xFE6
  4131                           postdec1	equ	0xFE5
  4132                           fsr1h	equ	0xFE2
  4133                           fsr1l	equ	0xFE1
  4134                           indf2	equ	0xFDF
  4135                           postinc2	equ	0xFDE
  4136                           postdec2	equ	0xFDD
  4137                           fsr2h	equ	0xFDA
  4138                           fsr2l	equ	0xFD9
  4139                           status	equ	0xFD8
  4140                           
  4141 ;; *************** function _InitButtonHW *****************
  4142 ;; Defined at:
  4143 ;;		line 134 in file "Button.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;		None
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  1    wreg      void 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4157 ;;      Params:         0       0       0       0
  4158 ;;      Locals:         0       0       0       0
  4159 ;;      Temps:          0       0       0       0
  4160 ;;      Totals:         0       0       0       0
  4161 ;;Total ram usage:        0 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    2
  4164 ;; This function calls:
  4165 ;;		Nothing
  4166 ;; This function is called by:
  4167 ;;		_InitializeButtonDebounce
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text24
  4172  001160                     __ptext24:
  4173                           	opt stack 0
  4174  001160                     _InitButtonHW:
  4175                           	opt stack 26
  4176                           
  4177                           ;Button.c: 135: PORTC = 0x00;
  4178                           
  4179                           ;incstack = 0
  4180  001160  0E00               	movlw	0
  4181  001162  6E82               	movwf	3970,c	;volatile
  4182                           
  4183                           ;Button.c: 136: LATC = 0x00;
  4184  001164  0E00               	movlw	0
  4185  001166  6E8B               	movwf	3979,c	;volatile
  4186                           
  4187                           ;Button.c: 137: PORTC = 0xFF;
  4188  001168  6882               	setf	3970,c	;volatile
  4189  00116A  0012               	return		;funcret
  4190  00116C                     __end_of_InitButtonHW:
  4191                           	opt stack 0
  4192                           tosu	equ	0xFFF
  4193                           tosh	equ	0xFFE
  4194                           tosl	equ	0xFFD
  4195                           pclath	equ	0xFFA
  4196                           tblptru	equ	0xFF8
  4197                           tblptrh	equ	0xFF7
  4198                           tblptrl	equ	0xFF6
  4199                           tablat	equ	0xFF5
  4200                           prodh	equ	0xFF4
  4201                           prodl	equ	0xFF3
  4202                           intcon	equ	0xFF2
  4203                           postinc0	equ	0xFEE
  4204                           wreg	equ	0xFE8
  4205                           indf1	equ	0xFE7
  4206                           postinc1	equ	0xFE6
  4207                           postdec1	equ	0xFE5
  4208                           fsr1h	equ	0xFE2
  4209                           fsr1l	equ	0xFE1
  4210                           indf2	equ	0xFDF
  4211                           postinc2	equ	0xFDE
  4212                           postdec2	equ	0xFDD
  4213                           fsr2h	equ	0xFDA
  4214                           fsr2l	equ	0xFD9
  4215                           status	equ	0xFD8
  4216                           
  4217 ;; *************** function _GetInputLine *****************
  4218 ;; Defined at:
  4219 ;;		line 129 in file "Button.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      unsigned char 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4233 ;;      Params:         0       0       0       0
  4234 ;;      Locals:         0       0       0       0
  4235 ;;      Temps:          0       0       0       0
  4236 ;;      Totals:         0       0       0       0
  4237 ;;Total ram usage:        0 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    2
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		_InitializeButtonDebounce
  4244 ;;		_CheckButtonEvents
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           	psect	text25
  4249  00117C                     __ptext25:
  4250                           	opt stack 0
  4251  00117C                     _GetInputLine:
  4252                           	opt stack 25
  4253                           
  4254                           ;Button.c: 131: return PORTC & 0x7F;
  4255                           
  4256                           ;incstack = 0
  4257  00117C  5082               	movf	3970,w,c	;volatile
  4258  00117E  0B7F               	andlw	127
  4259  001180  0012               	return	
  4260  001182                     __end_of_GetInputLine:
  4261                           	opt stack 0
  4262                           tosu	equ	0xFFF
  4263                           tosh	equ	0xFFE
  4264                           tosl	equ	0xFFD
  4265                           pclath	equ	0xFFA
  4266                           tblptru	equ	0xFF8
  4267                           tblptrh	equ	0xFF7
  4268                           tblptrl	equ	0xFF6
  4269                           tablat	equ	0xFF5
  4270                           prodh	equ	0xFF4
  4271                           prodl	equ	0xFF3
  4272                           intcon	equ	0xFF2
  4273                           postinc0	equ	0xFEE
  4274                           wreg	equ	0xFE8
  4275                           indf1	equ	0xFE7
  4276                           postinc1	equ	0xFE6
  4277                           postdec1	equ	0xFE5
  4278                           fsr1h	equ	0xFE2
  4279                           fsr1l	equ	0xFE1
  4280                           indf2	equ	0xFDF
  4281                           postinc2	equ	0xFDE
  4282                           postdec2	equ	0xFDD
  4283                           fsr2h	equ	0xFDA
  4284                           fsr2l	equ	0xFD9
  4285                           status	equ	0xFD8
  4286                           
  4287 ;; *************** function _ES_Timer_InitTimer *****************
  4288 ;; Defined at:
  4289 ;;		line 229 in file "ES_Timers.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  Num             1    wreg     unsigned char 
  4292 ;;  NewTime         2   16[COMRAM] unsigned int 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  Num             1   20[COMRAM] unsigned char 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      enum E15444
  4297 ;; Registers used:
  4298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4304 ;;      Params:         2       0       0       0
  4305 ;;      Locals:         1       0       0       0
  4306 ;;      Temps:          2       0       0       0
  4307 ;;      Totals:         5       0       0       0
  4308 ;;Total ram usage:        5 bytes
  4309 ;; Hardware stack levels used:    1
  4310 ;; Hardware stack levels required when called:    2
  4311 ;; This function calls:
  4312 ;;		Nothing
  4313 ;; This function is called by:
  4314 ;;		_InitializeButtonDebounce
  4315 ;;		_RunButtonDebounceSM
  4316 ;;		_RunCan_XmitService
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text26
  4321  000DE2                     __ptext26:
  4322                           	opt stack 0
  4323  000DE2                     _ES_Timer_InitTimer:
  4324                           	opt stack 26
  4325                           
  4326                           ;incstack = 0
  4327                           ;ES_Timer_InitTimer@Num stored from wreg
  4328  000DE2  6E15               	movwf	ES_Timer_InitTimer@Num,c
  4329                           
  4330                           ;ES_Timers.c: 232: if( (Num >= (sizeof(TMR_TimerArray)/sizeof(TMR_TimerArray[0]))) ||
  4331                           ;ES_Timers.c: 234: (Timer2PostFunc[Num] == ((pPostFunc)0)) ||
  4332                           ;ES_Timers.c: 236: (NewTime == 0) )
  4333  000DE4  0E10               	movlw	16
  4334  000DE6  6015               	cpfslt	ES_Timer_InitTimer@Num,c
  4335  000DE8  0012               	return	
  4336  000DEA  5015               	movf	ES_Timer_InitTimer@Num,w,c
  4337  000DEC  0D02               	mullw	2
  4338  000DEE  0E21               	movlw	low _Timer2PostFunc
  4339  000DF0  24F3               	addwf	prodl,w,c
  4340  000DF2  6EF6               	movwf	tblptrl,c
  4341  000DF4  0E03               	movlw	high _Timer2PostFunc
  4342  000DF6  20F4               	addwfc	prodh,w,c
  4343  000DF8  6EF7               	movwf	tblptrh,c
  4344  000DFA                     	if	0	;There are less than 3 active tblptr bytes
  4345  000DFA                     	endif
  4346  000DFA  0009               	tblrd		*+
  4347  000DFC  50F5               	movf	tablat,w,c
  4348  000DFE  0009               	tblrd		*+
  4349  000E00  10F5               	iorwf	tablat,w,c
  4350  000E02  B4D8               	btfsc	status,2,c
  4351  000E04  0012               	return	
  4352  000E06  5011               	movf	ES_Timer_InitTimer@NewTime,w,c
  4353  000E08  1012               	iorwf	ES_Timer_InitTimer@NewTime+1,w,c
  4354  000E0A  B4D8               	btfsc	status,2,c
  4355  000E0C  0012               	return	
  4356                           
  4357                           ;ES_Timers.c: 238: TMR_TimerArray[Num] = NewTime;
  4358                           
  4359                           ;ES_Timers.c: 237: return ES_Timer_ERR;
  4360                           ;	Return value of _ES_Timer_InitTimer is never used
  4361  000E0E  5015               	movf	ES_Timer_InitTimer@Num,w,c
  4362  000E10  0D02               	mullw	2
  4363  000E12  0E60               	movlw	low _TMR_TimerArray
  4364  000E14  24F3               	addwf	prodl,w,c
  4365  000E16  6ED9               	movwf	fsr2l,c
  4366  000E18  0E00               	movlw	high _TMR_TimerArray
  4367  000E1A  20F4               	addwfc	prodh,w,c
  4368  000E1C  6EDA               	movwf	fsr2h,c
  4369  000E1E  C011  FFDE         	movff	ES_Timer_InitTimer@NewTime,postinc2
  4370  000E22  C012  FFDD         	movff	ES_Timer_InitTimer@NewTime+1,postdec2
  4371                           
  4372                           ;ES_Timers.c: 239: TMR_ActiveFlags |= BitNum2SetMask[Num];
  4373  000E26  5015               	movf	ES_Timer_InitTimer@Num,w,c
  4374  000E28  0D02               	mullw	2
  4375  000E2A  0E01               	movlw	low _BitNum2SetMask
  4376  000E2C  24F3               	addwf	prodl,w,c
  4377  000E2E  6EF6               	movwf	tblptrl,c
  4378  000E30  0E03               	movlw	high _BitNum2SetMask
  4379  000E32  20F4               	addwfc	prodh,w,c
  4380  000E34  6EF7               	movwf	tblptrh,c
  4381  000E36                     	if	0	;There are less than 3 active tblptr bytes
  4382  000E36                     	endif
  4383  000E36  0009               	tblrd		*+
  4384  000E38  CFF5 F013          	movff	tablat,??_ES_Timer_InitTimer
  4385  000E3C  0009               	tblrd		*+
  4386  000E3E  CFF5 F014          	movff	tablat,??_ES_Timer_InitTimer+1
  4387  000E42  5013               	movf	??_ES_Timer_InitTimer,w,c
  4388  000E44  123A               	iorwf	_TMR_ActiveFlags,f,c
  4389  000E46  5014               	movf	??_ES_Timer_InitTimer+1,w,c
  4390  000E48  123B               	iorwf	_TMR_ActiveFlags+1,f,c
  4391  000E4A  0012               	return	
  4392  000E4C                     __end_of_ES_Timer_InitTimer:
  4393                           	opt stack 0
  4394                           tosu	equ	0xFFF
  4395                           tosh	equ	0xFFE
  4396                           tosl	equ	0xFFD
  4397                           pclath	equ	0xFFA
  4398                           tblptru	equ	0xFF8
  4399                           tblptrh	equ	0xFF7
  4400                           tblptrl	equ	0xFF6
  4401                           tablat	equ	0xFF5
  4402                           prodh	equ	0xFF4
  4403                           prodl	equ	0xFF3
  4404                           intcon	equ	0xFF2
  4405                           postinc0	equ	0xFEE
  4406                           wreg	equ	0xFE8
  4407                           indf1	equ	0xFE7
  4408                           postinc1	equ	0xFE6
  4409                           postdec1	equ	0xFE5
  4410                           fsr1h	equ	0xFE2
  4411                           fsr1l	equ	0xFE1
  4412                           indf2	equ	0xFDF
  4413                           postinc2	equ	0xFDE
  4414                           postdec2	equ	0xFDD
  4415                           fsr2h	equ	0xFDA
  4416                           fsr2l	equ	0xFD9
  4417                           status	equ	0xFD8
  4418                           
  4419 ;; *************** function _ES_PostToService *****************
  4420 ;; Defined at:
  4421 ;;		line 351 in file "ES_Framework.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  WhichService    1    wreg     unsigned char 
  4424 ;;  TheEvent        3   39[COMRAM] struct ES_Event_t
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;  WhichService    1    0[BANK0 ] unsigned char 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  1    wreg      unsigned char 
  4429 ;; Registers used:
  4430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4436 ;;      Params:         3       0       0       0
  4437 ;;      Locals:         0       1       0       0
  4438 ;;      Temps:          2       0       0       0
  4439 ;;      Totals:         5       1       0       0
  4440 ;;Total ram usage:        6 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    4
  4443 ;; This function calls:
  4444 ;;		_ES_EnQueueFIFO
  4445 ;; This function is called by:
  4446 ;;		_PostButtonDebounceSM
  4447 ;;		_InitCan_XmitService
  4448 ;;		_PostCan_XmitService
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text27
  4453  000D74                     __ptext27:
  4454                           	opt stack 0
  4455  000D74                     _ES_PostToService:
  4456                           	opt stack 22
  4457                           
  4458                           ;incstack = 0
  4459                           ;ES_PostToService@WhichService stored from wreg
  4460  000D74  0100               	movlb	0	; () banked
  4461  000D76  6F9A               	movwf	ES_PostToService@WhichService& (0+255),b
  4462                           
  4463                           ;ES_Framework.c: 352: if ((WhichService < (sizeof(EventQueues)/sizeof(EventQueues[0]))) 
      +                          &&
  4464                           ;ES_Framework.c: 353: (ES_EnQueueFIFO( EventQueues[WhichService].pMem, TheEvent) ==
  4465                           ;ES_Framework.c: 354: 1 )){
  4466  000D78  0E02               	movlw	2
  4467  000D7A  0100               	movlb	0	; () banked
  4468  000D7C  619A               	cpfslt	ES_PostToService@WhichService& (0+255),b
  4469  000D7E  D02F               	goto	l2670
  4470                           
  4471                           ; BSR set to: 0
  4472  000D80  0100               	movlb	0	; () banked
  4473  000D82  519A               	movf	ES_PostToService@WhichService& (0+255),w,b
  4474  000D84  0D03               	mullw	3
  4475  000D86  0E58               	movlw	low _EventQueues
  4476  000D88  24F3               	addwf	prodl,w,c
  4477  000D8A  6EF6               	movwf	tblptrl,c
  4478  000D8C  0E03               	movlw	high _EventQueues
  4479  000D8E  20F4               	addwfc	prodh,w,c
  4480  000D90  6EF7               	movwf	tblptrh,c
  4481  000D92                     	if	0	;There are less than 3 active tblptr bytes
  4482  000D92                     	endif
  4483  000D92  0009               	tblrd		*+
  4484  000D94  CFF5 F01D          	movff	tablat,ES_EnQueueFIFO@pBlock
  4485  000D98  000A               	tblrd		*-
  4486  000D9A  CFF5 F01E          	movff	tablat,ES_EnQueueFIFO@pBlock+1
  4487  000D9E  C028  F01F         	movff	ES_PostToService@TheEvent,ES_EnQueueFIFO@Event2Add
  4488  000DA2  C029  F020         	movff	ES_PostToService@TheEvent+1,ES_EnQueueFIFO@Event2Add+1
  4489  000DA6  C02A  F021         	movff	ES_PostToService@TheEvent+2,ES_EnQueueFIFO@Event2Add+2
  4490  000DAA  ECEC  F004         	call	_ES_EnQueueFIFO	;wreg free
  4491  000DAE  06E8               	decf	wreg,f,c
  4492  000DB0  A4D8               	btfss	status,2,c
  4493  000DB2  D015               	goto	l2670
  4494                           
  4495                           ;ES_Framework.c: 355: Ready |= BitNum2SetMask[WhichService];
  4496  000DB4  0100               	movlb	0	; () banked
  4497  000DB6  519A               	movf	ES_PostToService@WhichService& (0+255),w,b
  4498  000DB8  0D02               	mullw	2
  4499  000DBA  0E01               	movlw	low _BitNum2SetMask
  4500  000DBC  24F3               	addwf	prodl,w,c
  4501  000DBE  6EF6               	movwf	tblptrl,c
  4502  000DC0  0E03               	movlw	high _BitNum2SetMask
  4503  000DC2  20F4               	addwfc	prodh,w,c
  4504  000DC4  6EF7               	movwf	tblptrh,c
  4505  000DC6                     	if	0	;There are less than 3 active tblptr bytes
  4506  000DC6                     	endif
  4507  000DC6  0009               	tblrd		*+
  4508  000DC8  CFF5 F02B          	movff	tablat,??_ES_PostToService
  4509  000DCC  0009               	tblrd		*+
  4510  000DCE  CFF5 F02C          	movff	tablat,??_ES_PostToService+1
  4511  000DD2  502B               	movf	??_ES_PostToService,w,c
  4512  000DD4  1236               	iorwf	_Ready,f,c
  4513  000DD6  502C               	movf	??_ES_PostToService+1,w,c
  4514  000DD8  1237               	iorwf	_Ready+1,f,c
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;ES_Framework.c: 356: return 1;
  4518  000DDA  0E01               	movlw	1
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;ES_Framework.c: 357: } else
  4522                           
  4523                           ; BSR set to: 0
  4524  000DDC  0012               	return	
  4525  000DDE                     l2670:
  4526                           
  4527                           ;ES_Framework.c: 358: return 0;
  4528  000DDE  0E00               	movlw	0
  4529  000DE0  0012               	return	
  4530  000DE2                     __end_of_ES_PostToService:
  4531                           	opt stack 0
  4532                           tosu	equ	0xFFF
  4533                           tosh	equ	0xFFE
  4534                           tosl	equ	0xFFD
  4535                           pclath	equ	0xFFA
  4536                           tblptru	equ	0xFF8
  4537                           tblptrh	equ	0xFF7
  4538                           tblptrl	equ	0xFF6
  4539                           tablat	equ	0xFF5
  4540                           prodh	equ	0xFF4
  4541                           prodl	equ	0xFF3
  4542                           intcon	equ	0xFF2
  4543                           postinc0	equ	0xFEE
  4544                           wreg	equ	0xFE8
  4545                           indf1	equ	0xFE7
  4546                           postinc1	equ	0xFE6
  4547                           postdec1	equ	0xFE5
  4548                           fsr1h	equ	0xFE2
  4549                           fsr1l	equ	0xFE1
  4550                           indf2	equ	0xFDF
  4551                           postinc2	equ	0xFDE
  4552                           postdec2	equ	0xFDD
  4553                           fsr2h	equ	0xFDA
  4554                           fsr2l	equ	0xFD9
  4555                           status	equ	0xFD8
  4556                           
  4557 ;; *************** function _ES_EnQueueFIFO *****************
  4558 ;; Defined at:
  4559 ;;		line 85 in file "ES_Queue.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  pBlock          2   28[COMRAM] PTR struct ES_Event_t
  4562 ;;		 -> Queue1(12), Queue0(12), 
  4563 ;;  Event2Add       3   30[COMRAM] struct ES_Event_t
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  pThisQueue      2   37[COMRAM] PTR struct .
  4566 ;;		 -> Queue1(12), Queue0(12), 
  4567 ;;  SaveCrit        1   36[COMRAM] unsigned char 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      unsigned char 
  4570 ;; Registers used:
  4571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4577 ;;      Params:         5       0       0       0
  4578 ;;      Locals:         3       0       0       0
  4579 ;;      Temps:          3       0       0       0
  4580 ;;      Totals:        11       0       0       0
  4581 ;;Total ram usage:       11 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:    3
  4584 ;; This function calls:
  4585 ;;		___awmod
  4586 ;;		___wmul
  4587 ;; This function is called by:
  4588 ;;		_ES_PostAll
  4589 ;;		_ES_PostToService
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text28
  4594  0009D8                     __ptext28:
  4595                           	opt stack 0
  4596  0009D8                     _ES_EnQueueFIFO:
  4597                           	opt stack 22
  4598                           
  4599                           ;ES_Queue.c: 87: unsigned char SaveCrit;
  4600                           ;ES_Queue.c: 88: pQueue_t pThisQueue;
  4601                           ;ES_Queue.c: 89: pThisQueue = (pQueue_t)pBlock;
  4602                           
  4603                           ;incstack = 0
  4604  0009D8  C01D  F026         	movff	ES_EnQueueFIFO@pBlock,ES_EnQueueFIFO@pThisQueue
  4605  0009DC  C01E  F027         	movff	ES_EnQueueFIFO@pBlock+1,ES_EnQueueFIFO@pThisQueue+1
  4606                           
  4607                           ;ES_Queue.c: 91: if ( pThisQueue->NumEntries < pThisQueue->QueueSize)
  4608  0009E0  C026  FFD9         	movff	ES_EnQueueFIFO@pThisQueue,fsr2l
  4609  0009E4  C027  FFDA         	movff	ES_EnQueueFIFO@pThisQueue+1,fsr2h
  4610  0009E8  EE10 F002          	lfsr	1,2
  4611  0009EC  5026               	movf	ES_EnQueueFIFO@pThisQueue,w,c
  4612  0009EE  26E1               	addwf	fsr1l,f,c
  4613  0009F0  5027               	movf	ES_EnQueueFIFO@pThisQueue+1,w,c
  4614  0009F2  22E2               	addwfc	fsr1h,f,c
  4615  0009F4  50DE               	movf	postinc2,w,c
  4616  0009F6  5CE6               	subwf	postinc1,w,c
  4617  0009F8  B0D8               	btfsc	status,0,c
  4618  0009FA  D046               	goto	l2654
  4619                           
  4620                           ;ES_Queue.c: 92: {
  4621                           ;ES_Queue.c: 95: do{ SaveCrit = INTCON; GIE = 0;}while(0);
  4622  0009FC  CFF2 F025          	movff	intcon,ES_EnQueueFIFO@SaveCrit	;volatile
  4623  000A00  9EF2               	bcf	intcon,7,c	;volatile
  4624                           
  4625                           ;ES_Queue.c: 96: pBlock[ 1 + ((pThisQueue->CurrentIndex + pThisQueue->NumEntries)
  4626                           ;ES_Queue.c: 97: % pThisQueue->QueueSize)] = Event2Add;
  4627  000A02  C026  FFD9         	movff	ES_EnQueueFIFO@pThisQueue,fsr2l
  4628  000A06  C027  FFDA         	movff	ES_EnQueueFIFO@pThisQueue+1,fsr2h
  4629  000A0A  50DF               	movf	indf2,w,c
  4630  000A0C  6E22               	movwf	??_ES_EnQueueFIFO& (0+255),c
  4631  000A0E  5022               	movf	??_ES_EnQueueFIFO,w,c
  4632  000A10  6E13               	movwf	___awmod@divisor,c
  4633  000A12  6A14               	clrf	___awmod@divisor+1,c
  4634  000A14  EE20 F002          	lfsr	2,2
  4635  000A18  5026               	movf	ES_EnQueueFIFO@pThisQueue,w,c
  4636  000A1A  26D9               	addwf	fsr2l,f,c
  4637  000A1C  5027               	movf	ES_EnQueueFIFO@pThisQueue+1,w,c
  4638  000A1E  22DA               	addwfc	fsr2h,f,c
  4639  000A20  50DF               	movf	indf2,w,c
  4640  000A22  6E23               	movwf	(??_ES_EnQueueFIFO+1)& (0+255),c
  4641  000A24  EE20 F001          	lfsr	2,1
  4642  000A28  5026               	movf	ES_EnQueueFIFO@pThisQueue,w,c
  4643  000A2A  26D9               	addwf	fsr2l,f,c
  4644  000A2C  5027               	movf	ES_EnQueueFIFO@pThisQueue+1,w,c
  4645  000A2E  22DA               	addwfc	fsr2h,f,c
  4646  000A30  50DF               	movf	indf2,w,c
  4647  000A32  6E24               	movwf	(??_ES_EnQueueFIFO+2)& (0+255),c
  4648  000A34  5024               	movf	??_ES_EnQueueFIFO+2,w,c
  4649  000A36  2423               	addwf	??_ES_EnQueueFIFO+1,w,c
  4650  000A38  6E11               	movwf	___awmod@dividend,c
  4651  000A3A  6A12               	clrf	___awmod@dividend+1,c
  4652  000A3C  3612               	rlcf	___awmod@dividend+1,f,c
  4653  000A3E  EC82  F006         	call	___awmod	;wreg free
  4654  000A42  0E01               	movlw	1
  4655  000A44  2411               	addwf	?___awmod,w,c
  4656  000A46  6E17               	movwf	___wmul@multiplier,c
  4657  000A48  0E00               	movlw	0
  4658  000A4A  2012               	addwfc	?___awmod+1,w,c
  4659  000A4C  6E18               	movwf	___wmul@multiplier+1,c
  4660  000A4E  0E00               	movlw	0
  4661  000A50  6E1A               	movwf	___wmul@multiplicand+1,c
  4662  000A52  0E03               	movlw	3
  4663  000A54  6E19               	movwf	___wmul@multiplicand,c
  4664  000A56  EC63  F008         	call	___wmul	;wreg free
  4665  000A5A  5017               	movf	?___wmul,w,c
  4666  000A5C  241D               	addwf	ES_EnQueueFIFO@pBlock,w,c
  4667  000A5E  6ED9               	movwf	fsr2l,c
  4668  000A60  5018               	movf	?___wmul+1,w,c
  4669  000A62  201E               	addwfc	ES_EnQueueFIFO@pBlock+1,w,c
  4670  000A64  6EDA               	movwf	fsr2h,c
  4671  000A66  C01F  FFDE         	movff	ES_EnQueueFIFO@Event2Add,postinc2
  4672  000A6A  C020  FFDE         	movff	ES_EnQueueFIFO@Event2Add+1,postinc2
  4673  000A6E  C021  FFDE         	movff	ES_EnQueueFIFO@Event2Add+2,postinc2
  4674                           
  4675                           ;ES_Queue.c: 98: pThisQueue->NumEntries++;
  4676  000A72  EE20 F002          	lfsr	2,2
  4677  000A76  5026               	movf	ES_EnQueueFIFO@pThisQueue,w,c
  4678  000A78  26D9               	addwf	fsr2l,f,c
  4679  000A7A  5027               	movf	ES_EnQueueFIFO@pThisQueue+1,w,c
  4680  000A7C  22DA               	addwfc	fsr2h,f,c
  4681  000A7E  2ADF               	incf	indf2,f,c
  4682                           
  4683                           ;ES_Queue.c: 99: {INTCON = SaveCrit;};
  4684  000A80  C025  FFF2         	movff	ES_EnQueueFIFO@SaveCrit,intcon	;volatile
  4685                           
  4686                           ;ES_Queue.c: 101: return(1);
  4687  000A84  0E01               	movlw	1
  4688                           
  4689                           ;ES_Queue.c: 102: }else
  4690  000A86  0012               	return	
  4691  000A88                     l2654:
  4692                           
  4693                           ;ES_Queue.c: 103: return(0);
  4694  000A88  0E00               	movlw	0
  4695  000A8A  0012               	return	
  4696  000A8C                     __end_of_ES_EnQueueFIFO:
  4697                           	opt stack 0
  4698                           tosu	equ	0xFFF
  4699                           tosh	equ	0xFFE
  4700                           tosl	equ	0xFFD
  4701                           pclath	equ	0xFFA
  4702                           tblptru	equ	0xFF8
  4703                           tblptrh	equ	0xFF7
  4704                           tblptrl	equ	0xFF6
  4705                           tablat	equ	0xFF5
  4706                           prodh	equ	0xFF4
  4707                           prodl	equ	0xFF3
  4708                           intcon	equ	0xFF2
  4709                           postinc0	equ	0xFEE
  4710                           wreg	equ	0xFE8
  4711                           indf1	equ	0xFE7
  4712                           postinc1	equ	0xFE6
  4713                           postdec1	equ	0xFE5
  4714                           fsr1h	equ	0xFE2
  4715                           fsr1l	equ	0xFE1
  4716                           indf2	equ	0xFDF
  4717                           postinc2	equ	0xFDE
  4718                           postdec2	equ	0xFDD
  4719                           fsr2h	equ	0xFDA
  4720                           fsr2l	equ	0xFD9
  4721                           status	equ	0xFD8
  4722                           
  4723 ;; *************** function ___wmul *****************
  4724 ;; Defined at:
  4725 ;;		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  multiplier      2   22[COMRAM] unsigned int 
  4728 ;;  multiplicand    2   24[COMRAM] unsigned int 
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;  product         2   26[COMRAM] unsigned int 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  2   22[COMRAM] unsigned int 
  4733 ;; Registers used:
  4734 ;;		wreg, status,2, status,0, prodl, prodh
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4740 ;;      Params:         4       0       0       0
  4741 ;;      Locals:         2       0       0       0
  4742 ;;      Temps:          0       0       0       0
  4743 ;;      Totals:         6       0       0       0
  4744 ;;Total ram usage:        6 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    2
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_ES_EnQueueFIFO
  4751 ;;		_ES_DeQueue
  4752 ;;		_ES_EnQueueLIFO
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text29
  4757  0010C6                     __ptext29:
  4758                           	opt stack 0
  4759  0010C6                     ___wmul:
  4760                           	opt stack 22
  4761                           
  4762                           ;incstack = 0
  4763  0010C6  5017               	movf	___wmul@multiplier,w,c
  4764  0010C8  0219               	mulwf	___wmul@multiplicand,c
  4765  0010CA  CFF3 F01B          	movff	prodl,___wmul@product
  4766  0010CE  CFF4 F01C          	movff	prodh,___wmul@product+1
  4767  0010D2  5017               	movf	___wmul@multiplier,w,c
  4768  0010D4  021A               	mulwf	___wmul@multiplicand+1,c
  4769  0010D6  50F3               	movf	prodl,w,c
  4770  0010D8  261C               	addwf	___wmul@product+1,f,c
  4771  0010DA  5018               	movf	___wmul@multiplier+1,w,c
  4772  0010DC  0219               	mulwf	___wmul@multiplicand,c
  4773  0010DE  50F3               	movf	prodl,w,c
  4774  0010E0  261C               	addwf	___wmul@product+1,f,c
  4775  0010E2  C01B  F017         	movff	___wmul@product,?___wmul
  4776  0010E6  C01C  F018         	movff	___wmul@product+1,?___wmul+1
  4777  0010EA  0012               	return	
  4778  0010EC                     __end_of___wmul:
  4779                           	opt stack 0
  4780                           tosu	equ	0xFFF
  4781                           tosh	equ	0xFFE
  4782                           tosl	equ	0xFFD
  4783                           pclath	equ	0xFFA
  4784                           tblptru	equ	0xFF8
  4785                           tblptrh	equ	0xFF7
  4786                           tblptrl	equ	0xFF6
  4787                           tablat	equ	0xFF5
  4788                           prodh	equ	0xFF4
  4789                           prodl	equ	0xFF3
  4790                           intcon	equ	0xFF2
  4791                           postinc0	equ	0xFEE
  4792                           wreg	equ	0xFE8
  4793                           indf1	equ	0xFE7
  4794                           postinc1	equ	0xFE6
  4795                           postdec1	equ	0xFE5
  4796                           fsr1h	equ	0xFE2
  4797                           fsr1l	equ	0xFE1
  4798                           indf2	equ	0xFDF
  4799                           postinc2	equ	0xFDE
  4800                           postdec2	equ	0xFDD
  4801                           fsr2h	equ	0xFDA
  4802                           fsr2l	equ	0xFD9
  4803                           status	equ	0xFD8
  4804                           
  4805 ;; *************** function ___awmod *****************
  4806 ;; Defined at:
  4807 ;;		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;  dividend        2   16[COMRAM] int 
  4810 ;;  divisor         2   18[COMRAM] int 
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;  sign            1   21[COMRAM] unsigned char 
  4813 ;;  counter         1   20[COMRAM] unsigned char 
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  2   16[COMRAM] int 
  4816 ;; Registers used:
  4817 ;;		wreg, status,2, status,0
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4823 ;;      Params:         4       0       0       0
  4824 ;;      Locals:         2       0       0       0
  4825 ;;      Temps:          0       0       0       0
  4826 ;;      Totals:         6       0       0       0
  4827 ;;Total ram usage:        6 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    2
  4830 ;; This function calls:
  4831 ;;		Nothing
  4832 ;; This function is called by:
  4833 ;;		_ES_EnQueueFIFO
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           	psect	text30
  4838  000D04                     __ptext30:
  4839                           	opt stack 0
  4840  000D04                     ___awmod:
  4841                           	opt stack 22
  4842                           
  4843                           ;incstack = 0
  4844  000D04  0E00               	movlw	0
  4845  000D06  6E16               	movwf	___awmod@sign,c
  4846  000D08  AE12               	btfss	___awmod@dividend+1,7,c
  4847  000D0A  D006               	goto	l2610
  4848  000D0C  6C11               	negf	___awmod@dividend,c
  4849  000D0E  1E12               	comf	___awmod@dividend+1,f,c
  4850  000D10  B0D8               	btfsc	status,0,c
  4851  000D12  2A12               	incf	___awmod@dividend+1,f,c
  4852  000D14  0E01               	movlw	1
  4853  000D16  6E16               	movwf	___awmod@sign,c
  4854  000D18                     l2610:
  4855  000D18  AE14               	btfss	___awmod@divisor+1,7,c
  4856  000D1A  D004               	goto	l2614
  4857  000D1C  6C13               	negf	___awmod@divisor,c
  4858  000D1E  1E14               	comf	___awmod@divisor+1,f,c
  4859  000D20  B0D8               	btfsc	status,0,c
  4860  000D22  2A14               	incf	___awmod@divisor+1,f,c
  4861  000D24                     l2614:
  4862  000D24  5013               	movf	___awmod@divisor,w,c
  4863  000D26  1014               	iorwf	___awmod@divisor+1,w,c
  4864  000D28  B4D8               	btfsc	status,2,c
  4865  000D2A  D018               	goto	l2630
  4866  000D2C  0E01               	movlw	1
  4867  000D2E  6E15               	movwf	___awmod@counter,c
  4868  000D30  D004               	goto	l2620
  4869  000D32                     l2618:
  4870  000D32  90D8               	bcf	status,0,c
  4871  000D34  3613               	rlcf	___awmod@divisor,f,c
  4872  000D36  3614               	rlcf	___awmod@divisor+1,f,c
  4873  000D38  2A15               	incf	___awmod@counter,f,c
  4874  000D3A                     l2620:
  4875  000D3A  AE14               	btfss	___awmod@divisor+1,7,c
  4876  000D3C  D7FA               	goto	l2618
  4877  000D3E                     l2622:
  4878  000D3E  5013               	movf	___awmod@divisor,w,c
  4879  000D40  5C11               	subwf	___awmod@dividend,w,c
  4880  000D42  5014               	movf	___awmod@divisor+1,w,c
  4881  000D44  5812               	subwfb	___awmod@dividend+1,w,c
  4882  000D46  A0D8               	btfss	status,0,c
  4883  000D48  D004               	goto	l2626
  4884  000D4A  5013               	movf	___awmod@divisor,w,c
  4885  000D4C  5E11               	subwf	___awmod@dividend,f,c
  4886  000D4E  5014               	movf	___awmod@divisor+1,w,c
  4887  000D50  5A12               	subwfb	___awmod@dividend+1,f,c
  4888  000D52                     l2626:
  4889  000D52  90D8               	bcf	status,0,c
  4890  000D54  3214               	rrcf	___awmod@divisor+1,f,c
  4891  000D56  3213               	rrcf	___awmod@divisor,f,c
  4892  000D58  2E15               	decfsz	___awmod@counter,f,c
  4893  000D5A  D7F1               	goto	l2622
  4894  000D5C                     l2630:
  4895  000D5C  5016               	movf	___awmod@sign,w,c
  4896  000D5E  B4D8               	btfsc	status,2,c
  4897  000D60  D004               	goto	l2634
  4898  000D62  6C11               	negf	___awmod@dividend,c
  4899  000D64  1E12               	comf	___awmod@dividend+1,f,c
  4900  000D66  B0D8               	btfsc	status,0,c
  4901  000D68  2A12               	incf	___awmod@dividend+1,f,c
  4902  000D6A                     l2634:
  4903  000D6A  C011  F011         	movff	___awmod@dividend,?___awmod
  4904  000D6E  C012  F012         	movff	___awmod@dividend+1,?___awmod+1
  4905  000D72  0012               	return	
  4906  000D74                     __end_of___awmod:
  4907                           	opt stack 0
  4908                           tosu	equ	0xFFF
  4909                           tosh	equ	0xFFE
  4910                           tosl	equ	0xFFD
  4911                           pclath	equ	0xFFA
  4912                           tblptru	equ	0xFF8
  4913                           tblptrh	equ	0xFF7
  4914                           tblptrl	equ	0xFF6
  4915                           tablat	equ	0xFF5
  4916                           prodh	equ	0xFF4
  4917                           prodl	equ	0xFF3
  4918                           intcon	equ	0xFF2
  4919                           postinc0	equ	0xFEE
  4920                           wreg	equ	0xFE8
  4921                           indf1	equ	0xFE7
  4922                           postinc1	equ	0xFE6
  4923                           postdec1	equ	0xFE5
  4924                           fsr1h	equ	0xFE2
  4925                           fsr1l	equ	0xFE1
  4926                           indf2	equ	0xFDF
  4927                           postinc2	equ	0xFDE
  4928                           postdec2	equ	0xFDD
  4929                           fsr2h	equ	0xFDA
  4930                           fsr2l	equ	0xFD9
  4931                           status	equ	0xFD8
  4932                           
  4933 ;; *************** function _ES_Timer_Init *****************
  4934 ;; Defined at:
  4935 ;;		line 130 in file "ES_Timers.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  Rate            2   18[COMRAM] enum E15421
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      void 
  4942 ;; Registers used:
  4943 ;;		wreg, status,2, cstack
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4949 ;;      Params:         2       0       0       0
  4950 ;;      Locals:         0       0       0       0
  4951 ;;      Temps:          0       0       0       0
  4952 ;;      Totals:         2       0       0       0
  4953 ;;Total ram usage:        2 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    3
  4956 ;; This function calls:
  4957 ;;		__HW_Timer_Init
  4958 ;; This function is called by:
  4959 ;;		_ES_Initialize
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text31
  4964  001152                     __ptext31:
  4965                           	opt stack 0
  4966  001152                     _ES_Timer_Init:
  4967                           	opt stack 26
  4968                           
  4969                           ;ES_Timers.c: 133: _HW_Timer_Init(Rate);
  4970                           
  4971                           ;incstack = 0
  4972  001152  C013  F011         	movff	ES_Timer_Init@Rate,__HW_Timer_Init@Rate
  4973  001156  C014  F012         	movff	ES_Timer_Init@Rate+1,__HW_Timer_Init@Rate+1
  4974  00115A  EC76  F008         	call	__HW_Timer_Init	;wreg free
  4975  00115E  0012               	return		;funcret
  4976  001160                     __end_of_ES_Timer_Init:
  4977                           	opt stack 0
  4978                           tosu	equ	0xFFF
  4979                           tosh	equ	0xFFE
  4980                           tosl	equ	0xFFD
  4981                           pclath	equ	0xFFA
  4982                           tblptru	equ	0xFF8
  4983                           tblptrh	equ	0xFF7
  4984                           tblptrl	equ	0xFF6
  4985                           tablat	equ	0xFF5
  4986                           prodh	equ	0xFF4
  4987                           prodl	equ	0xFF3
  4988                           intcon	equ	0xFF2
  4989                           postinc0	equ	0xFEE
  4990                           wreg	equ	0xFE8
  4991                           indf1	equ	0xFE7
  4992                           postinc1	equ	0xFE6
  4993                           postdec1	equ	0xFE5
  4994                           fsr1h	equ	0xFE2
  4995                           fsr1l	equ	0xFE1
  4996                           indf2	equ	0xFDF
  4997                           postinc2	equ	0xFDE
  4998                           postdec2	equ	0xFDD
  4999                           fsr2h	equ	0xFDA
  5000                           fsr2l	equ	0xFD9
  5001                           status	equ	0xFD8
  5002                           
  5003 ;; *************** function __HW_Timer_Init *****************
  5004 ;; Defined at:
  5005 ;;		line 71 in file "ES_Port.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  Rate            2   16[COMRAM] enum E15412
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;		None
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  1    wreg      void 
  5012 ;; Registers used:
  5013 ;;		wreg, status,2
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5019 ;;      Params:         2       0       0       0
  5020 ;;      Locals:         0       0       0       0
  5021 ;;      Temps:          0       0       0       0
  5022 ;;      Totals:         2       0       0       0
  5023 ;;Total ram usage:        2 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; Hardware stack levels required when called:    2
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		_ES_Timer_Init
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text32
  5034  0010EC                     __ptext32:
  5035                           	opt stack 0
  5036  0010EC                     __HW_Timer_Init:
  5037                           	opt stack 26
  5038                           
  5039                           ;ES_Port.c: 79: PIE1 = 0b00000100;
  5040                           
  5041                           ;incstack = 0
  5042  0010EC  0E04               	movlw	4
  5043  0010EE  6E9D               	movwf	3997,c	;volatile
  5044                           
  5045                           ;ES_Port.c: 84: INTCON = 0b01000000;
  5046  0010F0  0E40               	movlw	64
  5047  0010F2  6EF2               	movwf	intcon,c	;volatile
  5048                           
  5049                           ;ES_Port.c: 90: CCP1CON = 0b00001010;
  5050  0010F4  0E0A               	movlw	10
  5051  0010F6  6EBD               	movwf	4029,c	;volatile
  5052                           
  5053                           ;ES_Port.c: 94: CCPR1L = 0b00000001;
  5054  0010F8  0E01               	movlw	1
  5055  0010FA  6EBE               	movwf	4030,c	;volatile
  5056                           
  5057                           ;ES_Port.c: 98: CCPR1H = 0b00000000;
  5058  0010FC  0E00               	movlw	0
  5059  0010FE  6EBF               	movwf	4031,c	;volatile
  5060                           
  5061                           ;ES_Port.c: 106: T1CON = 0b00100001;
  5062  001100  0E21               	movlw	33
  5063  001102  6ECD               	movwf	4045,c	;volatile
  5064                           
  5065                           ;ES_Port.c: 107: PEIE = 1;
  5066  001104  8CF2               	bsf	intcon,6,c	;volatile
  5067                           
  5068                           ;ES_Port.c: 108: {GIE = 1;};
  5069  001106  8EF2               	bsf	intcon,7,c	;volatile
  5070  001108  0012               	return		;funcret
  5071  00110A                     __end_of__HW_Timer_Init:
  5072                           	opt stack 0
  5073                           tosu	equ	0xFFF
  5074                           tosh	equ	0xFFE
  5075                           tosl	equ	0xFFD
  5076                           pclath	equ	0xFFA
  5077                           tblptru	equ	0xFF8
  5078                           tblptrh	equ	0xFF7
  5079                           tblptrl	equ	0xFF6
  5080                           tablat	equ	0xFF5
  5081                           prodh	equ	0xFF4
  5082                           prodl	equ	0xFF3
  5083                           intcon	equ	0xFF2
  5084                           postinc0	equ	0xFEE
  5085                           wreg	equ	0xFE8
  5086                           indf1	equ	0xFE7
  5087                           postinc1	equ	0xFE6
  5088                           postdec1	equ	0xFE5
  5089                           fsr1h	equ	0xFE2
  5090                           fsr1l	equ	0xFE1
  5091                           indf2	equ	0xFDF
  5092                           postinc2	equ	0xFDE
  5093                           postdec2	equ	0xFDD
  5094                           fsr2h	equ	0xFDA
  5095                           fsr2l	equ	0xFD9
  5096                           status	equ	0xFD8
  5097                           
  5098 ;; *************** function _ES_InitQueue *****************
  5099 ;; Defined at:
  5100 ;;		line 58 in file "ES_Queue.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;  pBlock          2   16[COMRAM] PTR struct ES_Event_t
  5103 ;;		 -> Queue1(12), Queue0(12), 
  5104 ;;  BlockSize       1   18[COMRAM] unsigned char 
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;  pThisQueue      2   19[COMRAM] PTR struct .
  5107 ;;		 -> Queue1(12), Queue0(12), 
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      unsigned char 
  5110 ;; Registers used:
  5111 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5117 ;;      Params:         3       0       0       0
  5118 ;;      Locals:         2       0       0       0
  5119 ;;      Temps:          0       0       0       0
  5120 ;;      Totals:         5       0       0       0
  5121 ;;Total ram usage:        5 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:    2
  5124 ;; This function calls:
  5125 ;;		Nothing
  5126 ;; This function is called by:
  5127 ;;		_ES_Initialize
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text33
  5132  000FE8                     __ptext33:
  5133                           	opt stack 0
  5134  000FE8                     _ES_InitQueue:
  5135                           	opt stack 27
  5136                           
  5137                           ;ES_Queue.c: 60: pQueue_t pThisQueue;
  5138                           ;ES_Queue.c: 62: pThisQueue = (pQueue_t)pBlock;
  5139                           
  5140                           ;incstack = 0
  5141  000FE8  C011  F014         	movff	ES_InitQueue@pBlock,ES_InitQueue@pThisQueue
  5142  000FEC  C012  F015         	movff	ES_InitQueue@pBlock+1,ES_InitQueue@pThisQueue+1
  5143                           
  5144                           ;ES_Queue.c: 64: pThisQueue->QueueSize = BlockSize - 1;
  5145  000FF0  0413               	decf	ES_InitQueue@BlockSize,w,c
  5146  000FF2  C014  FFD9         	movff	ES_InitQueue@pThisQueue,fsr2l
  5147  000FF6  C015  FFDA         	movff	ES_InitQueue@pThisQueue+1,fsr2h
  5148  000FFA  6EDF               	movwf	indf2,c
  5149                           
  5150                           ;ES_Queue.c: 65: pThisQueue->CurrentIndex = 0;
  5151  000FFC  EE20 F001          	lfsr	2,1
  5152  001000  5014               	movf	ES_InitQueue@pThisQueue,w,c
  5153  001002  26D9               	addwf	fsr2l,f,c
  5154  001004  5015               	movf	ES_InitQueue@pThisQueue+1,w,c
  5155  001006  22DA               	addwfc	fsr2h,f,c
  5156  001008  0E00               	movlw	0
  5157  00100A  6EDF               	movwf	indf2,c
  5158                           
  5159                           ;ES_Queue.c: 66: pThisQueue->NumEntries = 0;
  5160  00100C  EE20 F002          	lfsr	2,2
  5161  001010  5014               	movf	ES_InitQueue@pThisQueue,w,c
  5162  001012  26D9               	addwf	fsr2l,f,c
  5163  001014  5015               	movf	ES_InitQueue@pThisQueue+1,w,c
  5164  001016  22DA               	addwfc	fsr2h,f,c
  5165  001018  0E00               	movlw	0
  5166  00101A  6EDF               	movwf	indf2,c
  5167  00101C  0012               	return	
  5168  00101E                     __end_of_ES_InitQueue:
  5169                           	opt stack 0
  5170                           tosu	equ	0xFFF
  5171                           tosh	equ	0xFFE
  5172                           tosl	equ	0xFFD
  5173                           pclath	equ	0xFFA
  5174                           tblptru	equ	0xFF8
  5175                           tblptrh	equ	0xFF7
  5176                           tblptrl	equ	0xFF6
  5177                           tablat	equ	0xFF5
  5178                           prodh	equ	0xFF4
  5179                           prodl	equ	0xFF3
  5180                           intcon	equ	0xFF2
  5181                           postinc0	equ	0xFEE
  5182                           wreg	equ	0xFE8
  5183                           indf1	equ	0xFE7
  5184                           postinc1	equ	0xFE6
  5185                           postdec1	equ	0xFE5
  5186                           fsr1h	equ	0xFE2
  5187                           fsr1l	equ	0xFE1
  5188                           indf2	equ	0xFDF
  5189                           postinc2	equ	0xFDE
  5190                           postdec2	equ	0xFDD
  5191                           fsr2h	equ	0xFDA
  5192                           fsr2l	equ	0xFD9
  5193                           status	equ	0xFD8
  5194                           
  5195 ;; *************** function _ISR *****************
  5196 ;; Defined at:
  5197 ;;		line 111 in file "ES_Port.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;		None
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;		None
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1    wreg      void 
  5204 ;; Registers used:
  5205 ;;		wreg, status,2, status,0, cstack
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5211 ;;      Params:         0       0       0       0
  5212 ;;      Locals:         0       0       0       0
  5213 ;;      Temps:         16       0       0       0
  5214 ;;      Totals:        16       0       0       0
  5215 ;;Total ram usage:       16 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; Hardware stack levels required when called:    1
  5218 ;; This function calls:
  5219 ;;		_BusErrorResponse
  5220 ;;		_CanErrorResponse
  5221 ;;		_CanRCVResponse
  5222 ;;		_CanXmitResponse
  5223 ;; This function is called by:
  5224 ;;		Interrupt level 2
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	intcode
  5229  000008                     __pintcode:
  5230                           	opt stack 0
  5231  000008                     _ISR:
  5232                           	opt stack 22
  5233                           
  5234                           ;incstack = 0
  5235  000008  824F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5236  00000A  CFFA F003          	movff	pclath,??_ISR+2
  5237  00000E  CFFB F004          	movff	pclatu,??_ISR+3
  5238  000012  ED8B  F004         	call	int_func,f	;refresh shadow registers
  5239                           tosu	equ	0xFFF
  5240                           tosh	equ	0xFFE
  5241                           tosl	equ	0xFFD
  5242                           pclatu	equ	0xFFB
  5243                           pclath	equ	0xFFA
  5244                           tblptru	equ	0xFF8
  5245                           tblptrh	equ	0xFF7
  5246                           tblptrl	equ	0xFF6
  5247                           tablat	equ	0xFF5
  5248                           prodh	equ	0xFF4
  5249                           prodl	equ	0xFF3
  5250                           intcon	equ	0xFF2
  5251                           postinc0	equ	0xFEE
  5252                           wreg	equ	0xFE8
  5253                           indf1	equ	0xFE7
  5254                           postinc1	equ	0xFE6
  5255                           postdec1	equ	0xFE5
  5256                           fsr1h	equ	0xFE2
  5257                           fsr1l	equ	0xFE1
  5258                           indf2	equ	0xFDF
  5259                           postinc2	equ	0xFDE
  5260                           postdec2	equ	0xFDD
  5261                           fsr2h	equ	0xFDA
  5262                           fsr2l	equ	0xFD9
  5263                           status	equ	0xFD8
  5264                           
  5265                           	psect	intcode_body
  5266  000916                     __pintcode_body:
  5267                           	opt stack 22
  5268  000916                     int_func:
  5269                           	opt stack 22
  5270  000916  0006               	pop		; remove dummy address from shadow register refresh
  5271  000918  CFE9 F005          	movff	fsr0l,??_ISR+4
  5272  00091C  CFEA F006          	movff	fsr0h,??_ISR+5
  5273  000920  CFE1 F007          	movff	fsr1l,??_ISR+6
  5274  000924  CFE2 F008          	movff	fsr1h,??_ISR+7
  5275  000928  CFD9 F009          	movff	fsr2l,??_ISR+8
  5276  00092C  CFDA F00A          	movff	fsr2h,??_ISR+9
  5277  000930  CFF3 F00B          	movff	prodl,??_ISR+10
  5278  000934  CFF4 F00C          	movff	prodh,??_ISR+11
  5279  000938  CFF6 F00D          	movff	tblptrl,??_ISR+12
  5280  00093C  CFF7 F00E          	movff	tblptrh,??_ISR+13
  5281  000940  CFF8 F00F          	movff	tblptru,??_ISR+14
  5282  000944  CFF5 F010          	movff	tablat,??_ISR+15
  5283                           
  5284                           ;ES_Port.c: 114: static unsigned int LastTime;
  5285                           ;ES_Port.c: 115: static unsigned int NextTime;
  5286                           ;ES_Port.c: 117: if (CCP1IF == 1)
  5287  000948  A49E               	btfss	3998,2,c	;volatile
  5288  00094A  D014               	goto	i2l1796
  5289                           
  5290                           ;ES_Port.c: 118: {
  5291                           ;ES_Port.c: 119: LastTime = ((unsigned int)CCPR1H << 8)+ CCPR1L;
  5292  00094C  50BF               	movf	4031,w,c	;volatile
  5293  00094E  6E01               	movwf	??_ISR& (0+255),c
  5294  000950  50BE               	movf	4030,w,c	;volatile
  5295  000952  6E32               	movwf	ISR@LastTime,c
  5296  000954  C001  F033         	movff	??_ISR,ISR@LastTime+1
  5297                           
  5298                           ;ES_Port.c: 120: NextTime = LastTime + ((32000000L/4/4)/100);
  5299  000958  0E20               	movlw	32
  5300  00095A  2432               	addwf	ISR@LastTime,w,c
  5301  00095C  6E34               	movwf	ISR@NextTime,c
  5302  00095E  0E4E               	movlw	78
  5303  000960  2033               	addwfc	ISR@LastTime+1,w,c
  5304  000962  6E35               	movwf	ISR@NextTime+1,c
  5305                           
  5306                           ;ES_Port.c: 121: CCPR1H = (unsigned char)(NextTime >> 8);
  5307  000964  5035               	movf	ISR@NextTime+1,w,c
  5308  000966  6EBF               	movwf	4031,c	;volatile
  5309                           
  5310                           ;ES_Port.c: 122: CCPR1L = (unsigned char)(NextTime & 0xFF);
  5311  000968  C034  FFBE         	movff	ISR@NextTime,4030	;volatile
  5312                           
  5313                           ;ES_Port.c: 123: CCP1IF = 0;
  5314  00096C  949E               	bcf	3998,2,c	;volatile
  5315                           
  5316                           ;ES_Port.c: 124: TickCount++;
  5317  00096E  2A42               	incf	_TickCount,f,c	;volatile
  5318                           
  5319                           ;ES_Port.c: 125: SysTickCounter++;
  5320  000970  4A38               	infsnz	_SysTickCounter,f,c	;volatile
  5321  000972  2A39               	incf	_SysTickCounter+1,f,c	;volatile
  5322  000974                     i2l1796:
  5323                           
  5324                           ;ES_Port.c: 126: }
  5325                           ;ES_Port.c: 128: if (TXB0IF == 1)
  5326  000974  A4A4               	btfss	4004,2,c	;volatile
  5327  000976  D003               	goto	i2l1802
  5328                           
  5329                           ;ES_Port.c: 129: {
  5330                           ;ES_Port.c: 130: TXB0IF = 0;
  5331  000978  94A4               	bcf	4004,2,c	;volatile
  5332                           
  5333                           ;ES_Port.c: 131: CanXmitResponse();
  5334  00097A  ECC1  F008         	call	_CanXmitResponse	;wreg free
  5335  00097E                     i2l1802:
  5336                           
  5337                           ;ES_Port.c: 132: }
  5338                           ;ES_Port.c: 133: if (RXB0IF == 1) {
  5339  00097E  A0A4               	btfss	4004,0,c	;volatile
  5340  000980  D003               	goto	i2l1808
  5341                           
  5342                           ;ES_Port.c: 134: RXB0IF = 0;
  5343  000982  90A4               	bcf	4004,0,c	;volatile
  5344                           
  5345                           ;ES_Port.c: 135: CanRCVResponse();
  5346  000984  ECBA  F008         	call	_CanRCVResponse	;wreg free
  5347  000988                     i2l1808:
  5348                           
  5349                           ;ES_Port.c: 136: }
  5350                           ;ES_Port.c: 137: if (ERRIF == 1) {
  5351  000988  AAA4               	btfss	4004,5,c	;volatile
  5352  00098A  D003               	goto	i2l1814
  5353                           
  5354                           ;ES_Port.c: 138: ERRIF = 0;
  5355  00098C  9AA4               	bcf	4004,5,c	;volatile
  5356                           
  5357                           ;ES_Port.c: 139: CanErrorResponse();
  5358  00098E  ECC8  F008         	call	_CanErrorResponse	;wreg free
  5359  000992                     i2l1814:
  5360                           
  5361                           ;ES_Port.c: 140: }
  5362                           ;ES_Port.c: 141: if (IRXIF == 1) {
  5363  000992  AEA4               	btfss	4004,7,c	;volatile
  5364  000994  D003               	goto	i2l218
  5365                           
  5366                           ;ES_Port.c: 142: IRXIF = 0;
  5367  000996  9EA4               	bcf	4004,7,c	;volatile
  5368                           
  5369                           ;ES_Port.c: 143: BusErrorResponse();
  5370  000998  ECC9  F008         	call	_BusErrorResponse	;wreg free
  5371  00099C                     i2l218:
  5372  00099C  C010  FFF5         	movff	??_ISR+15,tablat
  5373  0009A0  C00F  FFF8         	movff	??_ISR+14,tblptru
  5374  0009A4  C00E  FFF7         	movff	??_ISR+13,tblptrh
  5375  0009A8  C00D  FFF6         	movff	??_ISR+12,tblptrl
  5376  0009AC  C00C  FFF4         	movff	??_ISR+11,prodh
  5377  0009B0  C00B  FFF3         	movff	??_ISR+10,prodl
  5378  0009B4  C00A  FFDA         	movff	??_ISR+9,fsr2h
  5379  0009B8  C009  FFD9         	movff	??_ISR+8,fsr2l
  5380  0009BC  C008  FFE2         	movff	??_ISR+7,fsr1h
  5381  0009C0  C007  FFE1         	movff	??_ISR+6,fsr1l
  5382  0009C4  C006  FFEA         	movff	??_ISR+5,fsr0h
  5383  0009C8  C005  FFE9         	movff	??_ISR+4,fsr0l
  5384  0009CC  C004  FFFB         	movff	??_ISR+3,pclatu
  5385  0009D0  C003  FFFA         	movff	??_ISR+2,pclath
  5386  0009D4  924F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5387  0009D6  0011               	retfie		f
  5388  0009D8                     __end_of_ISR:
  5389                           	opt stack 0
  5390                           tosu	equ	0xFFF
  5391                           tosh	equ	0xFFE
  5392                           tosl	equ	0xFFD
  5393                           pclatu	equ	0xFFB
  5394                           pclath	equ	0xFFA
  5395                           tblptru	equ	0xFF8
  5396                           tblptrh	equ	0xFF7
  5397                           tblptrl	equ	0xFF6
  5398                           tablat	equ	0xFF5
  5399                           prodh	equ	0xFF4
  5400                           prodl	equ	0xFF3
  5401                           intcon	equ	0xFF2
  5402                           postinc0	equ	0xFEE
  5403                           fsr0h	equ	0xFEA
  5404                           fsr0l	equ	0xFE9
  5405                           wreg	equ	0xFE8
  5406                           indf1	equ	0xFE7
  5407                           postinc1	equ	0xFE6
  5408                           postdec1	equ	0xFE5
  5409                           fsr1h	equ	0xFE2
  5410                           fsr1l	equ	0xFE1
  5411                           indf2	equ	0xFDF
  5412                           postinc2	equ	0xFDE
  5413                           postdec2	equ	0xFDD
  5414                           fsr2h	equ	0xFDA
  5415                           fsr2l	equ	0xFD9
  5416                           status	equ	0xFD8
  5417                           
  5418 ;; *************** function _CanXmitResponse *****************
  5419 ;; Defined at:
  5420 ;;		line 196 in file "Can_XmitService.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;		None
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;		None
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      void 
  5427 ;; Registers used:
  5428 ;;		None
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5434 ;;      Params:         0       0       0       0
  5435 ;;      Locals:         0       0       0       0
  5436 ;;      Temps:          0       0       0       0
  5437 ;;      Totals:         0       0       0       0
  5438 ;;Total ram usage:        0 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; This function calls:
  5441 ;;		Nothing
  5442 ;; This function is called by:
  5443 ;;		_ISR
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text35
  5448  001182                     __ptext35:
  5449                           	opt stack 0
  5450  001182                     _CanXmitResponse:
  5451                           	opt stack 22
  5452                           
  5453                           ;Can_XmitService.c: 198: TXB0CONbits.TXREQ = 0;
  5454                           
  5455                           ;incstack = 0
  5456  001182  010F               	movlb	15	; () banked
  5457  001184  9740               	bcf	64,3,b	;volatile
  5458                           
  5459                           ; BSR set to: 15
  5460  001186  0012               	return		;funcret
  5461  001188                     __end_of_CanXmitResponse:
  5462                           	opt stack 0
  5463                           tosu	equ	0xFFF
  5464                           tosh	equ	0xFFE
  5465                           tosl	equ	0xFFD
  5466                           pclatu	equ	0xFFB
  5467                           pclath	equ	0xFFA
  5468                           tblptru	equ	0xFF8
  5469                           tblptrh	equ	0xFF7
  5470                           tblptrl	equ	0xFF6
  5471                           tablat	equ	0xFF5
  5472                           prodh	equ	0xFF4
  5473                           prodl	equ	0xFF3
  5474                           intcon	equ	0xFF2
  5475                           postinc0	equ	0xFEE
  5476                           fsr0h	equ	0xFEA
  5477                           fsr0l	equ	0xFE9
  5478                           wreg	equ	0xFE8
  5479                           indf1	equ	0xFE7
  5480                           postinc1	equ	0xFE6
  5481                           postdec1	equ	0xFE5
  5482                           fsr1h	equ	0xFE2
  5483                           fsr1l	equ	0xFE1
  5484                           indf2	equ	0xFDF
  5485                           postinc2	equ	0xFDE
  5486                           postdec2	equ	0xFDD
  5487                           fsr2h	equ	0xFDA
  5488                           fsr2l	equ	0xFD9
  5489                           status	equ	0xFD8
  5490                           
  5491 ;; *************** function _CanRCVResponse *****************
  5492 ;; Defined at:
  5493 ;;		line 201 in file "Can_XmitService.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;		None
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;		None
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  1    wreg      void 
  5500 ;; Registers used:
  5501 ;;		None
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5507 ;;      Params:         0       0       0       0
  5508 ;;      Locals:         0       0       0       0
  5509 ;;      Temps:          0       0       0       0
  5510 ;;      Totals:         0       0       0       0
  5511 ;;Total ram usage:        0 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_ISR
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text36
  5521  001174                     __ptext36:
  5522                           	opt stack 0
  5523  001174                     _CanRCVResponse:
  5524                           	opt stack 22
  5525                           
  5526                           ;Can_XmitService.c: 203: if (RXB0CONbits.RXFUL == 1) {
  5527                           
  5528                           ; BSR set to: 15
  5529                           ;incstack = 0
  5530  001174  AE60               	btfss	3936,7,c	;volatile
  5531  001176  0012               	return	
  5532                           
  5533                           ;Can_XmitService.c: 204: RXB0CONbits.RXFUL = 0;
  5534  001178  9E60               	bcf	3936,7,c	;volatile
  5535  00117A  0012               	return	
  5536  00117C                     __end_of_CanRCVResponse:
  5537                           	opt stack 0
  5538                           tosu	equ	0xFFF
  5539                           tosh	equ	0xFFE
  5540                           tosl	equ	0xFFD
  5541                           pclatu	equ	0xFFB
  5542                           pclath	equ	0xFFA
  5543                           tblptru	equ	0xFF8
  5544                           tblptrh	equ	0xFF7
  5545                           tblptrl	equ	0xFF6
  5546                           tablat	equ	0xFF5
  5547                           prodh	equ	0xFF4
  5548                           prodl	equ	0xFF3
  5549                           intcon	equ	0xFF2
  5550                           postinc0	equ	0xFEE
  5551                           fsr0h	equ	0xFEA
  5552                           fsr0l	equ	0xFE9
  5553                           wreg	equ	0xFE8
  5554                           indf1	equ	0xFE7
  5555                           postinc1	equ	0xFE6
  5556                           postdec1	equ	0xFE5
  5557                           fsr1h	equ	0xFE2
  5558                           fsr1l	equ	0xFE1
  5559                           indf2	equ	0xFDF
  5560                           postinc2	equ	0xFDE
  5561                           postdec2	equ	0xFDD
  5562                           fsr2h	equ	0xFDA
  5563                           fsr2l	equ	0xFD9
  5564                           status	equ	0xFD8
  5565                           
  5566 ;; *************** function _CanErrorResponse *****************
  5567 ;; Defined at:
  5568 ;;		line 208 in file "Can_XmitService.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;		None
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;		None
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      void 
  5575 ;; Registers used:
  5576 ;;		None
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5582 ;;      Params:         0       0       0       0
  5583 ;;      Locals:         0       0       0       0
  5584 ;;      Temps:          0       0       0       0
  5585 ;;      Totals:         0       0       0       0
  5586 ;;Total ram usage:        0 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_ISR
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           	psect	text37
  5596  001190                     __ptext37:
  5597                           	opt stack 0
  5598  001190                     _CanErrorResponse:
  5599                           	opt stack 22
  5600                           
  5601                           ;incstack = 0
  5602  001190  0012               	return		;funcret
  5603  001192                     __end_of_CanErrorResponse:
  5604                           	opt stack 0
  5605                           tosu	equ	0xFFF
  5606                           tosh	equ	0xFFE
  5607                           tosl	equ	0xFFD
  5608                           pclatu	equ	0xFFB
  5609                           pclath	equ	0xFFA
  5610                           tblptru	equ	0xFF8
  5611                           tblptrh	equ	0xFF7
  5612                           tblptrl	equ	0xFF6
  5613                           tablat	equ	0xFF5
  5614                           prodh	equ	0xFF4
  5615                           prodl	equ	0xFF3
  5616                           intcon	equ	0xFF2
  5617                           postinc0	equ	0xFEE
  5618                           fsr0h	equ	0xFEA
  5619                           fsr0l	equ	0xFE9
  5620                           wreg	equ	0xFE8
  5621                           indf1	equ	0xFE7
  5622                           postinc1	equ	0xFE6
  5623                           postdec1	equ	0xFE5
  5624                           fsr1h	equ	0xFE2
  5625                           fsr1l	equ	0xFE1
  5626                           indf2	equ	0xFDF
  5627                           postinc2	equ	0xFDE
  5628                           postdec2	equ	0xFDD
  5629                           fsr2h	equ	0xFDA
  5630                           fsr2l	equ	0xFD9
  5631                           status	equ	0xFD8
  5632                           
  5633 ;; *************** function _BusErrorResponse *****************
  5634 ;; Defined at:
  5635 ;;		line 213 in file "Can_XmitService.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;		None
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;		None
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  1    wreg      void 
  5642 ;; Registers used:
  5643 ;;		None
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5649 ;;      Params:         0       0       0       0
  5650 ;;      Locals:         0       0       0       0
  5651 ;;      Temps:          0       0       0       0
  5652 ;;      Totals:         0       0       0       0
  5653 ;;Total ram usage:        0 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; This function calls:
  5656 ;;		Nothing
  5657 ;; This function is called by:
  5658 ;;		_ISR
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text38
  5663  001192                     __ptext38:
  5664                           	opt stack 0
  5665  001192                     _BusErrorResponse:
  5666                           	opt stack 22
  5667                           
  5668                           ;incstack = 0
  5669  001192  0012               	return		;funcret
  5670  001194                     __end_of_BusErrorResponse:
  5671                           	opt stack 0
  5672                           tosu	equ	0xFFF
  5673                           tosh	equ	0xFFE
  5674                           tosl	equ	0xFFD
  5675                           pclatu	equ	0xFFB
  5676                           pclath	equ	0xFFA
  5677                           tblptru	equ	0xFF8
  5678                           tblptrh	equ	0xFF7
  5679                           tblptrl	equ	0xFF6
  5680                           tablat	equ	0xFF5
  5681                           prodh	equ	0xFF4
  5682                           prodl	equ	0xFF3
  5683                           intcon	equ	0xFF2
  5684                           postinc0	equ	0xFEE
  5685                           fsr0h	equ	0xFEA
  5686                           fsr0l	equ	0xFE9
  5687                           wreg	equ	0xFE8
  5688                           indf1	equ	0xFE7
  5689                           postinc1	equ	0xFE6
  5690                           postdec1	equ	0xFE5
  5691                           fsr1h	equ	0xFE2
  5692                           fsr1l	equ	0xFE1
  5693                           indf2	equ	0xFDF
  5694                           postinc2	equ	0xFDE
  5695                           postdec2	equ	0xFDD
  5696                           fsr2h	equ	0xFDA
  5697                           fsr2l	equ	0xFD9
  5698                           status	equ	0xFD8
  5699                           tosu	equ	0xFFF
  5700                           tosh	equ	0xFFE
  5701                           tosl	equ	0xFFD
  5702                           pclatu	equ	0xFFB
  5703                           pclath	equ	0xFFA
  5704                           tblptru	equ	0xFF8
  5705                           tblptrh	equ	0xFF7
  5706                           tblptrl	equ	0xFF6
  5707                           tablat	equ	0xFF5
  5708                           prodh	equ	0xFF4
  5709                           prodl	equ	0xFF3
  5710                           intcon	equ	0xFF2
  5711                           postinc0	equ	0xFEE
  5712                           fsr0h	equ	0xFEA
  5713                           fsr0l	equ	0xFE9
  5714                           wreg	equ	0xFE8
  5715                           indf1	equ	0xFE7
  5716                           postinc1	equ	0xFE6
  5717                           postdec1	equ	0xFE5
  5718                           fsr1h	equ	0xFE2
  5719                           fsr1l	equ	0xFE1
  5720                           indf2	equ	0xFDF
  5721                           postinc2	equ	0xFDE
  5722                           postdec2	equ	0xFDD
  5723                           fsr2h	equ	0xFDA
  5724                           fsr2l	equ	0xFD9
  5725                           status	equ	0xFD8
  5726                           
  5727                           	psect	text39
  5728  000000                     __ptext39:
  5729                           	opt stack 0
  5730                           tosu	equ	0xFFF
  5731                           tosh	equ	0xFFE
  5732                           tosl	equ	0xFFD
  5733                           pclatu	equ	0xFFB
  5734                           pclath	equ	0xFFA
  5735                           tblptru	equ	0xFF8
  5736                           tblptrh	equ	0xFF7
  5737                           tblptrl	equ	0xFF6
  5738                           tablat	equ	0xFF5
  5739                           prodh	equ	0xFF4
  5740                           prodl	equ	0xFF3
  5741                           intcon	equ	0xFF2
  5742                           postinc0	equ	0xFEE
  5743                           fsr0h	equ	0xFEA
  5744                           fsr0l	equ	0xFE9
  5745                           wreg	equ	0xFE8
  5746                           indf1	equ	0xFE7
  5747                           postinc1	equ	0xFE6
  5748                           postdec1	equ	0xFE5
  5749                           fsr1h	equ	0xFE2
  5750                           fsr1l	equ	0xFE1
  5751                           indf2	equ	0xFDF
  5752                           postinc2	equ	0xFDE
  5753                           postdec2	equ	0xFDD
  5754                           fsr2h	equ	0xFDA
  5755                           fsr2l	equ	0xFD9
  5756                           status	equ	0xFD8
  5757                           
  5758                           	psect	rparam
  5759  0000                     tosu	equ	0xFFF
  5760                           tosh	equ	0xFFE
  5761                           tosl	equ	0xFFD
  5762                           pclatu	equ	0xFFB
  5763                           pclath	equ	0xFFA
  5764                           tblptru	equ	0xFF8
  5765                           tblptrh	equ	0xFF7
  5766                           tblptrl	equ	0xFF6
  5767                           tablat	equ	0xFF5
  5768                           prodh	equ	0xFF4
  5769                           prodl	equ	0xFF3
  5770                           intcon	equ	0xFF2
  5771                           postinc0	equ	0xFEE
  5772                           fsr0h	equ	0xFEA
  5773                           fsr0l	equ	0xFE9
  5774                           wreg	equ	0xFE8
  5775                           indf1	equ	0xFE7
  5776                           postinc1	equ	0xFE6
  5777                           postdec1	equ	0xFE5
  5778                           fsr1h	equ	0xFE2
  5779                           fsr1l	equ	0xFE1
  5780                           indf2	equ	0xFDF
  5781                           postinc2	equ	0xFDE
  5782                           postdec2	equ	0xFDD
  5783                           fsr2h	equ	0xFDA
  5784                           fsr2l	equ	0xFD9
  5785                           status	equ	0xFD8
  5786                           
  5787                           	psect	temp
  5788  00004F                     btemp:
  5789                           	opt stack 0
  5790  00004F                     	ds	1
  5791  0000                     int$flags	set	btemp
  5792                           tosu	equ	0xFFF
  5793                           tosh	equ	0xFFE
  5794                           tosl	equ	0xFFD
  5795                           pclatu	equ	0xFFB
  5796                           pclath	equ	0xFFA
  5797                           tblptru	equ	0xFF8
  5798                           tblptrh	equ	0xFF7
  5799                           tblptrl	equ	0xFF6
  5800                           tablat	equ	0xFF5
  5801                           prodh	equ	0xFF4
  5802                           prodl	equ	0xFF3
  5803                           intcon	equ	0xFF2
  5804                           postinc0	equ	0xFEE
  5805                           fsr0h	equ	0xFEA
  5806                           fsr0l	equ	0xFE9
  5807                           wreg	equ	0xFE8
  5808                           indf1	equ	0xFE7
  5809                           postinc1	equ	0xFE6
  5810                           postdec1	equ	0xFE5
  5811                           fsr1h	equ	0xFE2
  5812                           fsr1l	equ	0xFE1
  5813                           indf2	equ	0xFDF
  5814                           postinc2	equ	0xFDE
  5815                           postdec2	equ	0xFDD
  5816                           fsr2h	equ	0xFDA
  5817                           fsr2l	equ	0xFD9
  5818                           status	equ	0xFD8


Data Sizes:
    Strings     89
    Constant    99
    Data        10
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      78
    BANK0           160     16      76
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_4(CODE[15]), STR_3(CODE[23]), STR_2(CODE[24]), STR_1(CODE[27]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    XmitData@DataBytes	PTR unsigned char  size(2) Largest target is 2
		 -> ListeningCenterData(BANK0[2]), ListeningRightData(COMRAM[2]), ListeningLeftData(COMRAM[2]), ListeningIdleData(COMRAM[2]), 
		 -> LoadingData(COMRAM[1]), SpeakingData(COMRAM[1]), IdleData(COMRAM[1]), 

    Timer2PostFunc	const PTR FTN(struct ES_Event_t,)unsigned char [16] size(2) Largest target is 1
		 -> PostCan_XmitService(), Absolute function(), PostButtonDebounceSM(), 

    ES_DeQueue@pReturnEvent	PTR struct ES_Event_t size(2) Largest target is 3
		 -> ES_Run@ThisEvent(COMRAM[3]), ES_RecallEvents@RecalledEvent(COMRAM[3]), 

    ES_DeQueue@pBlock	PTR struct ES_Event_t size(2) Largest target is 12
		 -> Queue1(BANK0[12]), Queue0(BANK0[12]), 

    ES_DeQueue@pThisQueue	PTR struct . size(2) Largest target is 12
		 -> Queue1(BANK0[12]), Queue0(BANK0[12]), 

    ES_EnQueueFIFO@pBlock	PTR struct ES_Event_t size(2) Largest target is 12
		 -> Queue1(BANK0[12]), Queue0(BANK0[12]), 

    ES_EnQueueFIFO@pThisQueue	PTR struct . size(2) Largest target is 12
		 -> Queue1(BANK0[12]), Queue0(BANK0[12]), 

    ES_InitQueue@pBlock	PTR struct ES_Event_t size(2) Largest target is 12
		 -> Queue1(BANK0[12]), Queue0(BANK0[12]), 

    ES_InitQueue@pThisQueue	PTR struct . size(2) Largest target is 12
		 -> Queue1(BANK0[12]), Queue0(BANK0[12]), 

    DistList00	const PTR FTN(struct ES_Event_t,)unsigned char [1] size(2) Largest target is 1
		 -> PostCan_XmitService(), 

    S173$pMem	PTR struct ES_Event_t size(2) Largest target is 12
		 -> Queue1(BANK0[12]), Queue0(BANK0[12]), 

    EventQueues.pMem	PTR struct ES_Event_t size(2) Largest target is 12
		 -> Queue1(BANK0[12]), Queue0(BANK0[12]), 

    S150$RunFunc	PTR FTN(struct ES_Event_t,)struct ES_Event_t size(2) Largest target is 3
		 -> RunCan_XmitService(), RunButtonDebounceSM(), 

    ServDescList.RunFunc	PTR FTN(struct ES_Event_t,)struct ES_Event_t size(2) Largest target is 3
		 -> RunCan_XmitService(), RunButtonDebounceSM(), 

    S150$InitFunc	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> InitCan_XmitService(), InitializeButtonDebounce(), 

    ServDescList.InitFunc	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> InitCan_XmitService(), InitializeButtonDebounce(), 

    ES_EventList	const PTR FTN()unsigned char [2] size(2) Largest target is 1
		 -> Check4Keystroke(), CheckButtonEvents(), 


Critical Paths under _main in COMRAM

    _PostCan_XmitService->_ES_PostToService
    _RunButtonDebounceSM->_ES_PostAll
    _ES_PostAll->_ES_EnQueueFIFO
    _ES_DeQueue->___wmul
    _PostButtonDebounceSM->_ES_PostToService
    _InitializeButtonDebounce->_ES_Timer_InitTimer
    _InitCan_XmitService->_ES_PostToService
    _ES_PostToService->_ES_EnQueueFIFO
    _ES_EnQueueFIFO->___wmul
    ___wmul->___awmod
    _ES_Timer_Init->__HW_Timer_Init

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ES_Run
    _ES_Run->_ES_CheckUserEvents
    __HW_Process_Pending_Ints->_ES_Timer_Tick_Resp
    _ES_Timer_Tick_Resp->_PostButtonDebounceSM
    _ES_Timer_Tick_Resp->_PostCan_XmitService
    _PostCan_XmitService->_ES_PostToService
    _RunButtonDebounceSM->_ES_PostAll
    _ES_CheckUserEvents->_CheckButtonEvents
    _CheckButtonEvents->_PostButtonDebounceSM
    _PostButtonDebounceSM->_ES_PostToService
    _ES_Initialize->_InitCan_XmitService
    _InitCan_XmitService->_ES_PostToService

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   26728
                                             15 BANK0      1     1      0
                      _ES_Initialize
                             _ES_Run
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     428
                                             16 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _ES_Run                                               5     5      0   21184
                                             10 BANK0      5     5      0
                 _ES_CheckUserEvents
                         _ES_DeQueue
                     _ES_GetMSBitSet
                _RunButtonDebounceSM *
                 _RunCan_XmitService *
           __HW_Process_Pending_Ints
 ---------------------------------------------------------------------------------
 (2) __HW_Process_Pending_Ints                             0     0      0    7195
                 _ES_Timer_Tick_Resp
 ---------------------------------------------------------------------------------
 (3) _ES_Timer_Tick_Resp                                   4     4      0    7195
                                              4 BANK0      4     4      0
                   Absolute function *
                     _ES_GetMSBitSet
               _PostButtonDebounceSM *
                _PostCan_XmitService *
 ---------------------------------------------------------------------------------
 (4) _PostCan_XmitService                                  3     0      3    3336
                                              1 BANK0      3     0      3
                   _ES_PostToService
 ---------------------------------------------------------------------------------
 (4) _ES_GetMSBitSet                                      10     8      2     443
                                             16 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               3     0      3       0
                                             16 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _RunCan_XmitService                                   8     5      3    2705
                                              1 BANK0      8     5      3
                 _ES_Timer_InitTimer
                 _ES_Timer_StopTimer
                    _InitCanHardware
                           _InitPins
                           _XmitData
 ---------------------------------------------------------------------------------
 (3) _XmitData                                             3     0      3    1564
                                             16 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _InitPins                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _InitCanHardware                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ES_Timer_StopTimer                                   5     5      0      62
                                             16 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _RunButtonDebounceSM                                  6     3      3    4188
                                              1 BANK0      6     3      3
                         _ES_PostAll
                 _ES_Timer_InitTimer
 ---------------------------------------------------------------------------------
 (3) _ES_PostAll                                           6     3      3    3183
                                             39 COMRAM     5     2      3
                                              0 BANK0      1     1      0
                     _ES_EnQueueFIFO
 ---------------------------------------------------------------------------------
 (2) _ES_DeQueue                                          10     6      4    2742
                                             28 COMRAM    10     6      4
                            ___lbmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     292
                                             16 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) _ES_CheckUserEvents                                   1     1      0    3815
                                              9 BANK0      1     1      0
                    _Check4Keystroke *
                  _CheckButtonEvents *
 ---------------------------------------------------------------------------------
 (3) _CheckButtonEvents                                    5     5      0    3685
                                              4 BANK0      5     5      0
                       _GetInputLine
               _PostButtonDebounceSM
 ---------------------------------------------------------------------------------
 (4) _PostButtonDebounceSM                                 3     0      3    3416
                                              1 BANK0      3     0      3
                   _ES_PostToService
 ---------------------------------------------------------------------------------
 (3) _Check4Keystroke                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ES_Initialize                                        3     1      2    5048
                                              5 BANK0      3     1      2
                       _ES_InitQueue
                      _ES_Timer_Init
                _InitCan_XmitService *
           _InitializeButtonDebounce *
 ---------------------------------------------------------------------------------
 (2) _InitializeButtonDebounce                             1     1      0     847
                                             21 COMRAM     1     1      0
                 _ES_Timer_InitTimer
                       _GetInputLine
                       _InitButtonHW
 ---------------------------------------------------------------------------------
 (3) _InitButtonHW                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _GetInputLine                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ES_Timer_InitTimer                                   5     3      2     816
                                             16 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _InitCan_XmitService                                  4     4      0    3270
                                              1 BANK0      4     4      0
                   _ES_PostToService
 ---------------------------------------------------------------------------------
 (5) _ES_PostToService                                     6     3      3    3205
                                             39 COMRAM     5     2      3
                                              0 BANK0      1     1      0
                     _ES_EnQueueFIFO
 ---------------------------------------------------------------------------------
 (6) _ES_EnQueueFIFO                                      11     6      5    2811
                                             28 COMRAM    11     6      5
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1582
                                             22 COMRAM     6     2      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     553
                                             16 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _ES_Timer_Init                                        2     0      2     211
                                             18 COMRAM     2     0      2
                     __HW_Timer_Init
 ---------------------------------------------------------------------------------
 (3) __HW_Timer_Init                                       2     0      2      90
                                             16 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ES_InitQueue                                         5     2      3     345
                                             16 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                 16    16      0       0
                                              0 COMRAM    16    16      0
                   _BusErrorResponse
                   _CanErrorResponse
                     _CanRCVResponse
                    _CanXmitResponse
 ---------------------------------------------------------------------------------
 (9) _CanXmitResponse                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _CanRCVResponse                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _CanErrorResponse                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _BusErrorResponse                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ES_Initialize
     _ES_InitQueue
     _ES_Timer_Init
       __HW_Timer_Init
     _InitCan_XmitService *
       _ES_PostToService
         _ES_EnQueueFIFO
           ___awmod
           ___wmul
             ___awmod (ARG)
     _InitializeButtonDebounce *
       _ES_Timer_InitTimer
       _GetInputLine
       _InitButtonHW
   _ES_Run
     _ES_CheckUserEvents
       _Check4Keystroke *
       _CheckButtonEvents *
         _GetInputLine
         _PostButtonDebounceSM
           _ES_PostToService
             _ES_EnQueueFIFO
               ___awmod
               ___wmul
                 ___awmod (ARG)
     _ES_DeQueue
       ___lbmod
       ___wmul
         ___awmod (ARG)
     _ES_GetMSBitSet
     _RunButtonDebounceSM *
       _ES_PostAll
         _ES_EnQueueFIFO
           ___awmod
           ___wmul
             ___awmod (ARG)
       _ES_Timer_InitTimer
     _RunCan_XmitService *
       _ES_Timer_InitTimer
       _ES_Timer_StopTimer
       _InitCanHardware
       _InitPins
       _XmitData
     __HW_Process_Pending_Ints *
       _ES_Timer_Tick_Resp
         Absolute function(Fake) *
         _ES_GetMSBitSet *
         _PostButtonDebounceSM *
           _ES_PostToService
             _ES_EnQueueFIFO
               ___awmod
               ___wmul
                 ___awmod (ARG)
         _PostCan_XmitService *
           _ES_PostToService
             _ES_EnQueueFIFO
               ___awmod
               ___wmul
                 ___awmod (ARG)
   _printf
     _putch

 _ISR (ROOT)
   _BusErrorResponse
   _CanErrorResponse
   _CanRCVResponse
   _CanXmitResponse

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     10      4C       4       47.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      4E       1       83.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9A       9        0.0%
DATA                 0      0      9A      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Nov 24 00:45:50 2016

                   ??__HW_Timer_Init 0013                  ES_CheckUserEvents@i 00A3  
         CheckButtonEvents@ReturnVal 009E                  __HW_Timer_Init@Rate 0011  
                ___wmul@multiplicand 0019                   _ListeningRightData 004B  
          __size_of_BusErrorResponse 0002                                  l516 0BA2  
                                l519 0C06                                  l369 0B9C  
              __end_of_ES_Initialize 082E                                  _GIE 007F97  
                                _ISR 0008                         ___awmod@sign 0016  
            __end_of_Check4Keystroke 118C                                  prod 000FF3  
                                tosl 000FFD                                  wreg 000FE8  
             ES_EnQueueFIFO@SaveCrit 0025              ES_EnQueueFIFO@Event2Add 001F  
                  ?_ES_PostToService 0028                                 ?_ISR 0001  
                       __CFG_WDT$OFF 000000           ES_Timer_Tick_Resp@NewEvent 002D  
                               l3000 1134                                 l3004 113A  
                               l3022 1048                                 l3030 03D2  
                               l3112 07A2                                 l3104 0754  
                               l3042 040A                                 l3124 0824  
                               l3116 07A6                                 l3108 075E  
                               l3060 045E                                 l3132 0830  
                               l3054 0442                                 l3038 03FE  
                               l3128 082A                                 l3072 04A8  
                               l3048 0426                                 l3144 08FE  
                               l2610 0D18                                 l3066 0482  
                               l3138 08AA                                 l3242 0B4C  
                               l2620 0D3A                                 l3148 0910  
                               l3156 1056                                 l3244 0B5A  
                               l3252 0B84                                 l2622 0D3E  
                               l2630 0D5C                                 l2614 0D24  
                               l3078 04CE                                 l3086 04F4  
                               l3158 105C                                 l3246 0B68  
                               l3088 0538                                 l3248 0B76  
                               l2634 0D6A                                 l2626 0D52  
                               l2618 0D32                                 l2802 0FBA  
                               l2654 0A88                                 l2670 0DDE  
                               l2742 0EAA                                 l2750 0C9A  
                               l2910 0A8E                                 l2738 0E94  
                               l2754 0CA4                                 l2922 0ACA  
                               l2914 0A9E                                 l2932 0AF8  
                               l2684 0C2A                                 l2942 0F6C  
                               l2934 0B06                                 l2694 0C8C  
                               l2782 065A                                 l2880 1080  
                               l2864 0F40                                 l2792 06C8  
                               l2946 0F76                                 l2698 0C90  
                               l2794 0700                                 l2972 060A  
                               l2982 0646                                 l2888 1098  
                               l2976 0622                                 STR_1 0364  
                               STR_2 037F                                 STR_3 0397  
                               STR_4 03AE                                 u2108 07FE  
                               u2109 081A                                 _LATB 000F8A  
                               _LATC 000F8B                                 u2148 08D4  
                               u2149 08EC                                 _PIE1 000F9D  
                               u1828 06B0                                 u1694 0C48  
                               u1695 0C42                                 u1938 0F8C  
                               u1939 0FA4                                 _PEIE 007F96  
                               _SCS1 007E99                     ?_CanXmitResponse 0001  
                 ??_ES_PostToService 002B                                 _main 0B1A  
                        ?_ES_DeQueue 001D                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 indf1 000FE7  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 btemp 004F  
                      main@ErrorType 00A9                                 pclat 000FFA  
              ?_PostButtonDebounceSM 009B                                 prodh 000FF4  
                               prodl 000FF3                                 start 0016  
                      ?_InitButtonHW 0001     __end_of_InitializeButtonDebounce 10C6  
                      __CFG_MCLRE$ON 000000         InitCan_XmitService@ThisEvent 009B  
                       ___param_bank 000010                 __end_of_GetInputLine 1182  
            __end_of_InitCanHardware 0C22                                ??_ISR 0001  
                 ES_Run@HighestPrior 00A8                          ?_ES_PostAll 0028  
                              ?_main 0001                __end_of_ES_Timer_Init 1160  
                    __end_of___awmod 0D74                      __end_of___lbmod 10A0  
                              _T1CON 000FCD                           _DistList00 0362  
                              _IRCF0 007E9C                                _IRCF1 007E9D  
                              _IRCF2 007E9E                                _ERRIE 007D1D  
                              _ERRIF 007D25                                i2l218 099C  
                              _IRXIE 007D1F                                _IRXIF 007D27  
         __size_of_CheckButtonEvents 0068                                _PORTB 000F81  
                              _PORTC 000F82                        __CFG_PWRT$OFF 000000  
                              _Ready 0036                                _putch 118E  
                     __CFG_BOREN$OFF 000000                                pclath 000FFA  
                              tablat 000FF5                                status 000FD8  
                     ??_InitButtonHW 0011                      __initialization 0EB4  
             ES_GetMSBitSet@LoopCntr 001A           __end_of_ES_CheckUserEvents 0FB0  
                       __end_of_main 0B9E                    ES_Timer_Init@Rate 0013  
                   __end_of_InitPins 1152                  __end_of_EventQueues 035E  
                             ??_main 002D                        __activetblptr 000002  
                __size_of_ES_DeQueue 00FE                      _Nybble2MSBitNum 0341  
   __end_of__HW_Process_Pending_Ints 1144                     ?_Check4Keystroke 0001  
                  ?_CanErrorResponse 0001                               _ADCON1 000FC1  
     RunButtonDebounceSM@ReturnEvent 009E                     __end_of_XmitData 0F66  
                             _CCP1IF 007CF2                               _CANCON 000F6F  
                             _CCPR1H 000FBF                               _CCPR1L 000FBE  
                 ??_CanErrorResponse 0001                               _CIOCON 000F73  
                         _MyPriority 0041                               ?_putch 0001  
                   ??_ES_GetMSBitSet 0013                               i2l1802 097E  
                             i2l1814 0992                               i2l1808 0988  
                             i2l1796 0974                               _INTCON 000FF2  
                __size_of_ES_PostAll 0070                               _RXB0IE 007D18  
                             _RXB0IF 007D20                               _ES_Run 082E  
                             _TXB0D0 000F46                               _TXB0D1 000F47  
             ??_PostButtonDebounceSM 002D                               _TXB0IE 007D1A  
                             _TXB0IF 007D22                     ??_CanRCVResponse 0001  
                   ??_ES_EnQueueFIFO 0022                       _Timer2PostFunc 0321  
                             _Queue0 0082                               _Queue1 008E  
                     _SysTickCounter 0038                               ___wmul 10C6  
                          ??___awmod 0015                            ??___lbmod 0012  
                        _IsListening 003F                     ?_InitCanHardware 0001  
           _InitializeButtonDebounce 10A0         __size_of_RunButtonDebounceSM 008E  
                _PostCan_XmitService 111E          __size_of_ES_Timer_InitTimer 006A  
                             clear_0 0EF2                               clear_1 0EFE  
                   _BusErrorResponse 1192                      ___awmod@divisor 0013  
          ES_Timer_InitTimer@NewTime 0011                      ___awmod@counter 0015  
                             _printf 104C                          ISR@LastTime 0032  
                       __pdataCOMRAM 0047               ES_InitQueue@pThisQueue 0014  
                       __mediumconst 0000                          ISR@NextTime 0034  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                               putch@c 0001  
        __size_of_ES_Timer_Tick_Resp 00F8                 ES_DeQueue@pThisQueue 0025  
            ES_GetMSBitSet@Val2Check 0011                 ?_PostCan_XmitService 009B  
        InitCan_XmitService@Priority 009E                      ___lbmod@divisor 0011  
                         __accesstop 0060              __end_of__initialization 0F04  
             __end_of_Timer2PostFunc 0341                      ___lbmod@counter 0013  
                    __CFG_PBADEN$OFF 000000                __size_of_GetInputLine 0006  
                      ___rparam_used 000001                          _EventQueues 0358  
                     __pcstackCOMRAM 0001                         __pidataBANK0 118C  
        __size_of_ES_Timer_StopTimer 0038                        ?_ES_InitQueue 0011  
            __end_of_Nybble2MSBitNum 0350                        __end_of_putch 1190  
                    _TMR_ActiveFlags 003A                          _LoadingData 004D  
            ES_GetMSBitSet@ReturnVal 0018          __end_of_InitCan_XmitService 104C  
               __end_of_InitButtonHW 116C                       _TMR_TimerArray 0060  
                       _GetInputLine 117C                ??_PostCan_XmitService 002D  
           ES_EnQueueFIFO@pThisQueue 0026                              ??_putch 0011  
           __HW_Process_Pending_Ints 1132                           __pbssBANK0 0060  
                          ?_InitPins 0001                              ?_ES_Run 0001  
                       ??_ES_DeQueue 0021          __size_of_RunCan_XmitService 018E  
          __size_of_ES_PostToService 006E                       ??_ES_InitQueue 0014  
                            ?___wmul 0017                         ??_ES_PostAll 002B  
       RunButtonDebounceSM@ThisEvent 009B                              _CCP1CON 000FBD  
                          ?_XmitData 0011                          ES_PostAll@i 009A  
                            _ECANCON 000F77                              ?_printf 0011  
                 __end_of_ES_DeQueue 064A                ES_Timer_StopTimer@Num 0015  
                            _TXB0DLC 000F45                           ??_InitPins 0011  
                 __end_of_ES_PostAll 0D04                      __size_of_ES_Run 00E8  
             __size_of_ES_Initialize 00EC                              __Hparam 0000  
                            __Lparam 0000             __size_of_CanXmitResponse 0006  
                            ___awmod 0D04                              ___lbmod 1076  
                ES_PostAll@ThisEvent 0028                      __size_of___wmul 0026  
                       __psmallconst 0300                           ??_XmitData 0014  
              ES_Timer_InitTimer@Num 0015                              __pcinit 0EB4  
                            __ramtop 0300                              __ptext0 0B1A  
                            __ptext1 104C                              __ptext2 118E  
                            __ptext3 082E                              __ptext4 1132  
                            __ptext5 064A                              __ptext6 110A  
                            __ptext7 111E                              __ptext8 0C22  
                            __ptext9 0A8C                      __size_of_printf 002A  
                       __size_of_ISR 09D0              __size_of__HW_Timer_Init 001E  
                   ___awmod@dividend 0011                   _ES_CheckUserEvents 0F66  
                    ES_Run@ThisEvent 0043                       __pintcode_body 0916  
               end_of_initialization 0F04                  _RunButtonDebounceSM 0A8C  
                ?_ES_CheckUserEvents 0001             __end_of_BusErrorResponse 1194  
                      __Lmediumconst 0000                              int_func 0916  
       ES_PostToService@WhichService 009A           ??_InitializeButtonDebounce 0016  
             __size_of_ES_Timer_Init 000E            __size_of_CanErrorResponse 0002  
                            printf@c 0015                              printf@f 0011  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                 ?_RunButtonDebounceSM 009B  
               ??_ES_CheckUserEvents 002D                __size_of_InitButtonHW 000C  
                      _ES_Initialize 0742                     ___lbmod@dividend 0012  
                          _TRISBbits 000F93                 __end_of_ES_EventList 0362  
               __end_of_ES_InitQueue 101E                       ES_Initialize@i 00A1  
                        ___lbmod@rem 0014             __size_of_Check4Keystroke 0004  
                     __end_of_ES_Run 0916        __size_of_PostButtonDebounceSM 0014  
        RunCan_XmitService@ThisEvent 009B                         _InitButtonHW 1160  
                 __end_of_DistList00 0364                     _ES_PostToService 0D74  
         __end_of_ES_Timer_InitTimer 0E4C                ??_RunButtonDebounceSM 002D  
               __end_of_ServDescList 0358                       __end_of___wmul 10EC  
                      __pidataCOMRAM 116C                    ??_CanXmitResponse 0001  
                     ?_ES_Initialize 009F           ??__HW_Process_Pending_Ints 002D  
                      _ES_Timer_Init 1152                       __end_of_printf 1076  
           __size_of_InitCanHardware 0084           __end_of_ES_Timer_Tick_Resp 0742  
                start_initialization 0EB4                          __end_of_ISR 09D8  
                       _CurrentState 003E                          _CANSTATbits 000F6E  
                           ??_ES_Run 00A4                     __CFG_OSC$IRCIO67 000000  
                          _TickCount 0042                    __size_of_InitPins 000E  
         __end_of_ES_Timer_StopTimer 0FE8              __size_of_ES_GetMSBitSet 0072  
                           ??___wmul 001B                          __pdataBANK0 00AA  
            __size_of_CanRCVResponse 0008              __size_of_ES_EnQueueFIFO 00B4  
                           ??_printf 0013                       ?_ES_Timer_Init 0013  
                  __size_of_XmitData 0054                       __HW_Timer_Init 10EC  
        __end_of_PostCan_XmitService 1132                          __pbssCOMRAM 002D  
                      __pcstackBANK0 009A                          _BRGCON1bits 000F70  
                        _BRGCON2bits 000F71                   ES_InitQueue@pBlock 0011  
                        _BRGCON3bits 000F72         __size_of_InitCan_XmitService 002E  
         __end_of_RunCan_XmitService 054C  CheckButtonEvents@CurrentButtonState 00A2  
                  XmitData@DataBytes 0011                        __PRIMASK_temp 0080  
                   _CanErrorResponse 1190                    ??_Check4Keystroke 0011  
                          __pintcode 0008                             ?___awmod 0011  
                           ?___lbmod 0011                      ??_ES_Initialize 002D  
           ES_PostToService@TheEvent 0028               __end_of__HW_Timer_Init 110A  
      PostButtonDebounceSM@ThisEvent 009B                          __smallconst 0300  
              __size_of_ES_InitQueue 0036         PostCan_XmitService@ThisEvent 009B  
                     __size_of_putch 0002                 ES_Initialize@NewRate 009F  
                  ??_InitCanHardware 0011            ES_GetMSBitSet@Nybble2Test 0019  
                  ?_BusErrorResponse 0001                       ___wmul@product 001B  
                 ??_BusErrorResponse 0001                             _RXF0EIDH 000F02  
                           _RXF0EIDL 000F03                             _RXF0SIDH 000F00  
                       _ES_EventList 035E                             _RXF0SIDL 000F01  
                           _TXB0EIDH 000F43                             _TXB0EIDL 000F44  
                           _RXM0EIDH 000F1A                             _RXM0EIDL 000F1B  
                           _TXB0SIDH 000F41                             _TXB0SIDL 000F42  
                       _ES_InitQueue 0FE8                             _RXM0SIDH 000F18  
                           _RXM0SIDL 000F19                      ??_ES_Timer_Init 0015  
                    ?__HW_Timer_Init 0011                    ___wmul@multiplier 0017  
                 ES_DeQueue@SaveCrit 0023                 ES_EnQueueFIFO@pBlock 001D  
                           _IdleData 0046             __end_of_ES_PostToService 0DE2  
                          copy_data0 0EE0                       _BitNum2SetMask 0301  
                       _ServDescList 0350                             _InitPins 1144  
                    _CanXmitResponse 1182                             __Hrparam 0000  
                     _ES_GetMSBitSet 0C22                             __Lrparam 0000  
                   __size_of___awmod 0070                     __size_of___lbmod 002A  
                           _XmitData 0F12          __size_of_ES_CheckUserEvents 004A  
                     _CanRCVResponse 1174                       _ES_EnQueueFIFO 09D8  
  __size_of_InitializeButtonDebounce 0026         __end_of_PostButtonDebounceSM 111E  
          ?_InitializeButtonDebounce 0001                   _ES_Timer_InitTimer 0DE2  
                      ?_GetInputLine 0001               __end_of_BitNum2SetMask 0321  
                           __ptext10 03BE                             __ptext11 0F12  
                           __ptext20 0E4C                             __ptext12 1144  
                           __ptext21 0742                             __ptext13 0B9E  
                           __ptext30 0D04                             __ptext22 101E  
                           __ptext14 0FB0                             __ptext31 1152  
                           __ptext23 10A0                             __ptext15 0C94  
                           __ptext32 10EC                             __ptext24 1160  
                           __ptext16 054C                             __ptext33 0FE8  
                           __ptext25 117C                             __ptext17 1076  
                           __ptext26 0DE2                             __ptext18 0F66  
                           __ptext35 1182                             __ptext27 0D74  
                           __ptext19 1188                             __ptext36 1174  
                           __ptext28 09D8                             __ptext37 1190  
                           __ptext29 10C6                             __ptext38 1192  
                           __ptext39 0000    ES_Timer_Tick_Resp@NeedsProcessing 0030  
                ?_ES_Timer_InitTimer 0011                         _SpeakingData 004E  
                      __size_of_main 0084                   _ES_Timer_Tick_Resp 064A  
             __end_of_ES_GetMSBitSet 0C94          __end_of_RunButtonDebounceSM 0B1A  
                ?_ES_Timer_Tick_Resp 0001               __end_of_CanRCVResponse 117C  
             __end_of_ES_EnQueueFIFO 0A8C                             int$flags 004F  
                _InitCan_XmitService 101E                 ??_ES_Timer_InitTimer 0013  
                  ES_DeQueue@NumLeft 0024                   _ES_Timer_StopTimer 0FB0  
                        _RXB0CONbits 000F60             __end_of_CanErrorResponse 1192  
                     ??_GetInputLine 0011                    _CheckButtonEvents 0E4C  
               ??_ES_Timer_Tick_Resp 009E                  ?_ES_Timer_StopTimer 0001  
      RunCan_XmitService@ReturnEvent 00A0                   ?_CheckButtonEvents 0001  
               ?_InitCan_XmitService 0001              __end_of_CanXmitResponse 1188  
                    _Check4Keystroke 1188                             intlevel2 0000  
                _ListeningCenterData 00AA            Can_XmitService@MyPriority 003C  
                         _ES_DeQueue 054C    __size_of__HW_Process_Pending_Ints 0012  
          ?__HW_Process_Pending_Ints 0001     InitializeButtonDebounce@Priority 0016  
                        _TXB0CONbits 000F40                      ?_ES_GetMSBitSet 0011  
                ??_CheckButtonEvents 002D                     XmitData@numBytes 0013  
               ??_ES_Timer_StopTimer 0011  ES_Timer_Tick_Resp@NextTimer2Process 003D  
                 _RunCan_XmitService 03BE                             printf@ap 0013  
                    ?_CanRCVResponse 0001                      ?_ES_EnQueueFIFO 001D  
                         _ES_PostAll 0C94                     ES_DeQueue@pBlock 001D  
                ?_RunCan_XmitService 009B                      _InitCanHardware 0B9E  
          __end_of_CheckButtonEvents 0EB4                      _LastButtonState 0040  
             ES_DeQueue@pReturnEvent 001F                ES_InitQueue@BlockSize 0013  
              ??_InitCan_XmitService 002D         __size_of_PostCan_XmitService 0014  
                  _ListeningIdleData 0047                 ??_RunCan_XmitService 009E  
                  _ListeningLeftData 0049                 _PostButtonDebounceSM 110A  
         CheckButtonEvents@ThisEvent 009F  
