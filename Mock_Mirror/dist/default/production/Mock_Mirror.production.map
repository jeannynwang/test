Microchip MPLAB XC8 Compiler V1.38 ()

Linker command line:

-W-3 --edf=/Applications/microchip/xc8/v1.38/dat/en_msgs.txt -cs \
  -h+dist/default/production/Mock_Mirror.production.sym \
  --cmf=dist/default/production/Mock_Mirror.production.cmf -z -Q18F2480 \
  -o/tmp/xcoS5vFi7 -Mdist/default/production/Mock_Mirror.production.map -E1 \
  -ver=XC8 -ASTACK=0B4h-02ffh -pstack=STACK -ACODE=00h-03FFFh \
  -ACONST=00h-03FFFh -ASMALLCONST=0300h-03FFhx61 -AMEDIUMCONST=0300h-03FFFh \
  -ACOMRAM=01h-05Fh -AABS1=00h-02FFh -ABIGRAM=01h-02FFh \
  -ARAM=060h-0FFh,0100h-01FFhx2 -ABANK0=060h-0FFh -ABANK1=0100h-01FFh \
  -ABANK2=0200h-02FFh -ASFR=0D00h-0DFFhx2,0F00h-0F5Fh,0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  /tmp/xcqLZqNKv.obj dist/default/production/Mock_Mirror.production.obj 

Object code version is 3.11

Machine type is 18F2480

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcqLZqNKv.obj
                end_init                             16       16        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production/Mock_Mirror.production.obj
                intcode                               8        8        E        4       0
                temp                                 48       48        1        1       1
                smallconst                          300      300       B6      180       0
                text33                             1102     1102        2      1DB       0
                text32                             1100     1100        2      1DB       0
                text31                              DEA      DEA       70      1DB       0
                text30                             104E     104E       26      1DB       0
                text29                              940      940       B4      1DB       0
                text28                              E5A      E5A       6A      1DB       0
                text27                             10C4     10C4       16      1DB       0
                text26                              CF8      CF8       7A      1DB       0
                text25                             10E8     10E8        C      1DB       0
                text24                             10F4     10F4        6      1DB       0
                intcode_body                        87C      87C       C4      1DB       0
                text22                              F52      F52       3C      1DB       0
                text21                             1074     1074       1E      1DB       0
                text20                             10DA     10DA        E      1DB       0
                text19                              B3E      B3E       A2      1DB       0
                text18                              F8E      F8E       36      1DB       0
                text17                              6BE      6BE       E2      1DB       0
                text16                              D72      D72       78      1DB       0
                text15                              FF8      FF8       30      1DB       0
                text14                              5D2      5D2       EC      1DB       0
                text13                             10FA     10FA        4      1DB       0
                text12                              EC4      EC4       4A      1DB       0
                text11                              F0E      F0E       44      1DB       0
                text10                              3B6      3B6      128      1DB       0
                text9                               C74      C74       84      1DB       0
                text8                              1092     1092       1C      1DB       0
                text7                               9F4      9F4       A6      1DB       0
                text6                               A9A      A9A       A4      1DB       0
                text5                               7A0      7A0       DC      1DB       0
                text4                              10AE     10AE       16      1DB       0
                text3                               4DE      4DE       F4      1DB       0
                text2                              10FE     10FE        2      1DB       0
                text1                               FC4      FC4       34      1DB       0
                text0                               BE0      BE0       94      1DB       0
                cstackCOMRAM                          1        1       33        1       1
                cstackBANK0                          8F       8F       25       60       1
                bssBANK0                             60       60       2F       60       1
                bssCOMRAM                            34       34       14        1       1
                cinit                              1028     1028       26      1DB       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             16       16        4         0
                intcode                               8        8        E         0
                reset_vec                             0        0        4         0
                text33                             1102     1102        2         0
                text32                             1100     1100        2         0
                text31                              DEA      DEA       70         0
                text30                             104E     104E       26         0
                text29                              940      940       B4         0
                text28                              E5A      E5A       6A         0
                text27                             10C4     10C4       16         0
                text26                              CF8      CF8       7A         0
                text25                             10E8     10E8        C         0
                text24                             10F4     10F4        6         0
                intcode_body                        87C      87C       C4         0
                text22                              F52      F52       3C         0
                text21                             1074     1074       1E         0
                text20                             10DA     10DA        E         0
                text19                              B3E      B3E       A2         0
                text18                              F8E      F8E       36         0
                text17                              6BE      6BE       E2         0
                text16                              D72      D72       78         0
                text15                              FF8      FF8       30         0
                text14                              5D2      5D2       EC         0
                text13                             10FA     10FA        4         0
                text12                              EC4      EC4       4A         0
                text11                              F0E      F0E       44         0
                text10                              3B6      3B6      128         0
                text9                               C74      C74       84         0
                text8                              1092     1092       1C         0
                text7                               9F4      9F4       A6         0
                text6                               A9A      A9A       A4         0
                text5                               7A0      7A0       DC         0
                text4                              10AE     10AE       16         0
                text3                               4DE      4DE       F4         0
                text2                              10FE     10FE        2         0
                text1                               FC4      FC4       34         0
                text0                               BE0      BE0       94         0
                cinit                              1028     1028       26         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       B6         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 48       48        1         1
                cstackCOMRAM                          1        1       33         1
                bssCOMRAM                            34       34       14         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          8F       8F       25         1
                bssBANK0                             60       60       2F         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000048  000049         1       1  COMRAM  
                intcode                        000008  000012  00001A         4       0  CODE    
                bssBANK0                       000060  000054  0000B4        60       1  BANK0   
                smallconst                     000300  0000B6  0003B6       180       0  SMALLCON
                text10                         0003B6  000D4E  001104       1DB       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000B4-0000FF               4C
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BIGRAM           000049-00005F               17
                         0000B4-0002FF              24C
        CODE             000004-000007                4
                         00001A-0002FF              2E6
                         001104-003FFF             2EFC
        COMRAM           000049-00005F               17
        CONST            000004-000007                4
                         00001A-0002FF              2E6
                         001104-003FFF             2EFC
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      001104-003FFF             2EFC
        RAM              0000B4-0002FF              100
        SFR              000D00-000FFF              100
        SMALLCONST       001104-003FFF              100
        STACK            0000B4-0002FF              24C

                                  Symbol Table

?_RunCanRX_Service                   cstackBANK0  00008F
?___awmod                            cstackBANK0  00008F
?___wmul                             cstackBANK0  000095
?_printf                             cstackBANK0  00008F
?i2___awmod                          cstackCOMRAM 000001
?i2___wmul                           cstackCOMRAM 000007
ES_CheckUserEvents@i                 cstackBANK0  00008F
ES_DeQueue@NumLeft                   cstackBANK0  0000A2
ES_DeQueue@SaveCrit                  cstackBANK0  0000A1
ES_DeQueue@pBlock                    cstackBANK0  00009B
ES_DeQueue@pReturnEvent              cstackBANK0  00009D
ES_DeQueue@pThisQueue                cstackBANK0  0000A3
ES_EnQueueFIFO@Event2Add             cstackBANK0  00009D
ES_EnQueueFIFO@SaveCrit              cstackBANK0  0000A3
ES_EnQueueFIFO@pBlock                cstackBANK0  00009B
ES_EnQueueFIFO@pThisQueue            cstackBANK0  0000A4
ES_GetMSBitSet@LoopCntr              cstackBANK0  000098
ES_GetMSBitSet@Nybble2Test           cstackBANK0  000097
ES_GetMSBitSet@ReturnVal             cstackBANK0  000096
ES_GetMSBitSet@Val2Check             cstackBANK0  00008F
ES_InitQueue@BlockSize               cstackBANK0  000091
ES_InitQueue@pBlock                  cstackBANK0  00008F
ES_InitQueue@pThisQueue              cstackBANK0  000092
ES_Initialize@NewRate                cstackBANK0  0000B0
ES_Initialize@i                      cstackBANK0  0000B2
ES_PostToService@TheEvent            cstackBANK0  0000A6
ES_PostToService@WhichService        cstackBANK0  0000AB
ES_Run@HighestPrior                  cstackBANK0  0000A9
ES_Run@ThisEvent                     bssBANK0     00008C
ES_Timer_Init@Rate                   cstackBANK0  000091
ES_Timer_Tick_Resp@NeedsProcessing   bssBANK0     000083
ES_Timer_Tick_Resp@NewEvent          bssBANK0     000080
ES_Timer_Tick_Resp@NextTimer2Process bssBANK0     000089
ISR@LastTime                         bssCOMRAM    000034
ISR@NextTime                         bssCOMRAM    000036
InitCanRX_Service@Priority           cstackBANK0  0000AF
InitCanRX_Service@ThisEvent          cstackBANK0  0000AC
PostCanRX_Service@ThisEvent          cstackCOMRAM 00001E
ProcessReceive@Event2Post            cstackCOMRAM 000021
RunCanRX_Service@ReturnEvent         cstackBANK0  000092
RunCanRX_Service@ThisEvent           cstackBANK0  00008F
_ADCON1                              (abs)        000FC1
_BRGCON1bits                         (abs)        000F70
_BRGCON2bits                         (abs)        000F71
_BRGCON3bits                         (abs)        000F72
_BitNum2SetMask                      smallconst   000301
_BusErrorResponse                    text33       001102
_CANCON                              (abs)        000F6F
_CANSTATbits                         (abs)        000F6E
_CCP1CON                             (abs)        000FBD
_CCP1IF                              (abs)        007CF2
_CCPR1H                              (abs)        000FBF
_CCPR1L                              (abs)        000FBE
_CIOCON                              (abs)        000F73
_CanErrorResponse                    text32       001100
_CanRCVResponse                      text25       0010E8
_CanXmitResponse                     text24       0010F4
_Check4Keystroke                     text13       0010FA
_DistList00                          smallconst   000359
_ECANCON                             (abs)        000F77
_ERRIE                               (abs)        007D1D
_ERRIF                               (abs)        007D25
_ES_CheckUserEvents                  text12       000EC4
_ES_DeQueue                          text10       0003B6
_ES_EnQueueFIFO                      text17       0006BE
_ES_EventList                        smallconst   000357
_ES_GetMSBitSet                      text6        000A9A
_ES_InitQueue                        text22       000F52
_ES_Initialize                       text14       0005D2
_ES_PostToService                    text16       000D72
_ES_Run                              text3        0004DE
_ES_Timer_Init                       text20       0010DA
_ES_Timer_Tick_Resp                  text5        0007A0
_EventQueues                         smallconst   000354
_GIE                                 (abs)        007F97
_INTCON                              (abs)        000FF2
_IRCF0                               (abs)        007E9C
_IRCF1                               (abs)        007E9D
_IRCF2                               (abs)        007E9E
_IRXIE                               (abs)        007D1F
_IRXIF                               (abs)        007D27
_ISR                                 intcode      000008
_InitCanHardware                     text9        000C74
_InitCanRX_Service                   text15       000FF8
_InitPins                            text8        001092
_LATA                                (abs)        000F89
_LATA0                               (abs)        007C48
_LATA1                               (abs)        007C49
_LATA2                               (abs)        007C4A
_LATA3                               (abs)        007C4B
_LATA4                               (abs)        007C4C
_LATA5                               (abs)        007C4D
_LATB                                (abs)        000F8A
_LATB0                               (abs)        007C50
_MyPriority                          bssBANK0     00008A
_Nybble2MSBitNum                     smallconst   000341
_PEIE                                (abs)        007F96
_PIE1                                (abs)        000F9D
_PORTA                               (abs)        000F80
_PORTB                               (abs)        000F81
_PostCanRX_Service                   text27       0010C4
_ProcessReceive                      text26       000CF8
_Queue0                              bssCOMRAM    00003C
_RXB0CONbits                         (abs)        000F60
_RXB0D0                              (abs)        000F66
_RXB0D1                              (abs)        000F67
_RXB0EIDH                            (abs)        000F63
_RXB0EIDL                            (abs)        000F64
_RXB0IE                              (abs)        007D18
_RXB0IF                              (abs)        007D20
_RXB0SIDH                            (abs)        000F61
_RXB0SIDL                            (abs)        000F62
_RXF0EIDH                            (abs)        000F02
_RXF0EIDL                            (abs)        000F03
_RXF0SIDH                            (abs)        000F00
_RXF0SIDL                            (abs)        000F01
_RXM0EIDH                            (abs)        000F1A
_RXM0EIDL                            (abs)        000F1B
_RXM0SIDH                            (abs)        000F18
_RXM0SIDL                            (abs)        000F19
_Ready                               bssBANK0     000085
_RunCanRX_Service                    text7        0009F4
_SCS1                                (abs)        007E99
_ServDescList                        smallconst   000350
_SysTickCounter                      bssCOMRAM    000038
_T1CON                               (abs)        000FCD
_TMR_ActiveFlags                     bssBANK0     000087
_TMR_TimerArray                      bssBANK0     000060
_TRISA                               (abs)        000F92
_TRISBbits                           (abs)        000F93
_TXB0CONbits                         (abs)        000F40
_TXB0IE                              (abs)        007D1A
_TXB0IF                              (abs)        007D22
_TickCount                           bssBANK0     00008B
_Timer2PostFunc                      smallconst   000321
__CFG_BOREN$OFF                      (abs)        000000
__CFG_MCLRE$ON                       (abs)        000000
__CFG_OSC$IRCIO67                    (abs)        000000
__CFG_PBADEN$OFF                     (abs)        000000
__CFG_PWRT$OFF                       (abs)        000000
__CFG_WDT$OFF                        (abs)        000000
__HRAM                               (abs)        000000
__HW_Process_Pending_Ints            text4        0010AE
__HW_Timer_Init                      text21       001074
__HW_Timer_Init@Rate                 cstackBANK0  00008F
__Habs1                              abs1         000000
__Hbank0                             bank0        000000
__Hbank1                             bank1        000000
__Hbank2                             bank2        000000
__Hbigbss                            bigbss       000000
__Hbigdata                           bigdata      000000
__Hbigram                            bigram       000000
__Hbss                               bss          000000
__HbssBANK0                          bssBANK0     000000
__HbssCOMRAM                         bssCOMRAM    000000
__Hcinit                             cinit        000000
__Hclrtext                           clrtext      000000
__Hcomram                            comram       000000
__Hconfig                            config       30000E
__Hconst                             const        000000
__HcstackBANK0                       cstackBANK0  000000
__HcstackCOMRAM                      cstackCOMRAM 000000
__Hdata                              data         000000
__Heeprom_data                       eeprom_data  000000
__Hend_init                          end_init     00001A
__Hfarbss                            farbss       000000
__Hfardata                           fardata      000000
__Hibigdata                          ibigdata     000000
__Hidata                             idata        000000
__Hidloc                             idloc        200008
__Hifardata                          ifardata     000000
__Hinit                              init         000016
__Hintcode                           intcode      000016
__Hintcode_body                      intcode_body 000000
__Hintcodelo                         intcodelo    000016
__Hintentry                          intentry     000000
__Hintret                            intret       000000
__Hintsave_regs                      intsave_regs 000000
__Hirdata                            irdata       000000
__Hmediumconst                       mediumconst  000000
__HnvFARRAM                          nvFARRAM     000000
__Hnvbit                             nvbit        000000
__Hnvrram                            nvrram       000000
__Hparam                             rparam       000000
__Hpowerup                           powerup      000016
__Hram                               ram          000000
__Hramtop                            ramtop       000300
__Hrbit                              rbit         000000
__Hrbss                              rbss         000000
__Hrdata                             rdata        000000
__Hreset_vec                         reset_vec    000004
__Hrparam                            rparam       000000
__Hsfr                               sfr          000000
__Hsmallconst                        smallconst   0003B6
__Hspace_0                           (abs)        30000E
__Hspace_1                           (abs)        0000B4
__Hspace_2                           (abs)        000000
__Hstack                             stack        000000
__Hstruct                            struct       000000
__Htemp                              temp         000049
__Htext                              text         000000
__Htext0                             text0        000000
__Htext1                             text1        000000
__Htext10                            text10       000000
__Htext11                            text11       000000
__Htext12                            text12       000000
__Htext13                            text13       000000
__Htext14                            text14       000000
__Htext15                            text15       000000
__Htext16                            text16       000000
__Htext17                            text17       000000
__Htext18                            text18       000000
__Htext19                            text19       000000
__Htext2                             text2        000000
__Htext20                            text20       000000
__Htext21                            text21       000000
__Htext22                            text22       000000
__Htext24                            text24       000000
__Htext25                            text25       000000
__Htext26                            text26       000000
__Htext27                            text27       000000
__Htext28                            text28       000000
__Htext29                            text29       000000
__Htext3                             text3        000000
__Htext30                            text30       000000
__Htext31                            text31       000000
__Htext32                            text32       000000
__Htext33                            text33       000000
__Htext34                            text34       000000
__Htext4                             text4        000000
__Htext5                             text5        000000
__Htext6                             text6        000000
__Htext7                             text7        000000
__Htext8                             text8        000000
__Htext9                             text9        000000
__LRAM                               (abs)        000001
__Labs1                              abs1         000000
__Lbank0                             bank0        000000
__Lbank1                             bank1        000000
__Lbank2                             bank2        000000
__Lbigbss                            bigbss       000000
__Lbigdata                           bigdata      000000
__Lbigram                            bigram       000000
__Lbss                               bss          000000
__LbssBANK0                          bssBANK0     000000
__LbssCOMRAM                         bssCOMRAM    000000
__Lcinit                             cinit        000000
__Lclrtext                           clrtext      000000
__Lcomram                            comram       000000
__Lconfig                            config       300000
__Lconst                             const        000000
__LcstackBANK0                       cstackBANK0  000000
__LcstackCOMRAM                      cstackCOMRAM 000000
__Ldata                              data         000000
__Leeprom_data                       eeprom_data  000000
__Lend_init                          end_init     000016
__Lfarbss                            farbss       000000
__Lfardata                           fardata      000000
__Libigdata                          ibigdata     000000
__Lidata                             idata        000000
__Lidloc                             idloc        200000
__Lifardata                          ifardata     000000
__Linit                              init         000016
__Lintcode                           intcode      000008
__Lintcode_body                      intcode_body 000000
__Lintcodelo                         intcodelo    000016
__Lintentry                          intentry     000000
__Lintret                            intret       000000
__Lintsave_regs                      intsave_regs 000000
__Lirdata                            irdata       000000
__Lmediumconst                       mediumconst  000000
__LnvFARRAM                          nvFARRAM     000000
__Lnvbit                             nvbit        000000
__Lnvrram                            nvrram       000000
__Lparam                             rparam       000000
__Lpowerup                           powerup      000016
__Lram                               ram          000000
__Lramtop                            ramtop       000300
__Lrbit                              rbit         000000
__Lrbss                              rbss         000000
__Lrdata                             rdata        000000
__Lreset_vec                         reset_vec    000000
__Lrparam                            rparam       000000
__Lsfr                               sfr          000000
__Lsmallconst                        smallconst   000300
__Lspace_0                           (abs)        000000
__Lspace_1                           (abs)        000000
__Lspace_2                           (abs)        000000
__Lstack                             stack        000000
__Lstruct                            struct       000000
__Ltemp                              temp         000048
__Ltext                              text         000000
__Ltext0                             text0        000000
__Ltext1                             text1        000000
__Ltext10                            text10       000000
__Ltext11                            text11       000000
__Ltext12                            text12       000000
__Ltext13                            text13       000000
__Ltext14                            text14       000000
__Ltext15                            text15       000000
__Ltext16                            text16       000000
__Ltext17                            text17       000000
__Ltext18                            text18       000000
__Ltext19                            text19       000000
__Ltext2                             text2        000000
__Ltext20                            text20       000000
__Ltext21                            text21       000000
__Ltext22                            text22       000000
__Ltext24                            text24       000000
__Ltext25                            text25       000000
__Ltext26                            text26       000000
__Ltext27                            text27       000000
__Ltext28                            text28       000000
__Ltext29                            text29       000000
__Ltext3                             text3        000000
__Ltext30                            text30       000000
__Ltext31                            text31       000000
__Ltext32                            text32       000000
__Ltext33                            text33       000000
__Ltext34                            text34       000000
__Ltext4                             text4        000000
__Ltext5                             text5        000000
__Ltext6                             text6        000000
__Ltext7                             text7        000000
__Ltext8                             text8        000000
__Ltext9                             text9        000000
__PRIMASK_temp                       bssCOMRAM    00003A
__S0                                 (abs)        30000E
__S1                                 (abs)        0000B4
__S2                                 (abs)        000000
___awmod                             text19       000B3E
___awmod@counter                     cstackBANK0  000093
___awmod@dividend                    cstackBANK0  00008F
___awmod@divisor                     cstackBANK0  000091
___awmod@sign                        cstackBANK0  000094
___inthi_sp                          stack        000000
___intlo_sp                          stack        000000
___lbmod                             text11       000F0E
___lbmod@counter                     cstackBANK0  000091
___lbmod@dividend                    cstackBANK0  000090
___lbmod@divisor                     cstackBANK0  00008F
___lbmod@rem                         cstackBANK0  000092
___param_bank                        (abs)        000010
___rparam_used                       (abs)        000001
___sp                                stack        000000
___wmul                              text18       000F8E
___wmul@multiplicand                 cstackBANK0  000097
___wmul@multiplier                   cstackBANK0  000095
___wmul@product                      cstackBANK0  000099
__accesstop                          (abs)        000060
__activetblptr                       (abs)        000002
__end_of_BitNum2SetMask              smallconst   000321
__end_of_BusErrorResponse            text33       001104
__end_of_CanErrorResponse            text32       001102
__end_of_CanRCVResponse              text25       0010F4
__end_of_CanXmitResponse             text24       0010FA
__end_of_Check4Keystroke             text13       0010FE
__end_of_DistList00                  smallconst   00035B
__end_of_ES_CheckUserEvents          text12       000F0E
__end_of_ES_DeQueue                  text10       0004DE
__end_of_ES_EnQueueFIFO              text17       0007A0
__end_of_ES_EventList                smallconst   000359
__end_of_ES_GetMSBitSet              text6        000B3E
__end_of_ES_InitQueue                text22       000F8E
__end_of_ES_Initialize               text14       0006BE
__end_of_ES_PostToService            text16       000DEA
__end_of_ES_Run                      text3        0005D2
__end_of_ES_Timer_Init               text20       0010E8
__end_of_ES_Timer_Tick_Resp          text5        00087C
__end_of_EventQueues                 smallconst   000357
__end_of_ISR                         intcode_body 000940
__end_of_InitCanHardware             text9        000CF8
__end_of_InitCanRX_Service           text15       001028
__end_of_InitPins                    text8        0010AE
__end_of_Nybble2MSBitNum             smallconst   000350
__end_of_PostCanRX_Service           text27       0010DA
__end_of_ProcessReceive              text26       000D72
__end_of_RunCanRX_Service            text7        000A9A
__end_of_ServDescList                smallconst   000354
__end_of_Timer2PostFunc              smallconst   000341
__end_of__HW_Process_Pending_Ints    text4        0010C4
__end_of__HW_Timer_Init              text21       001092
__end_of___awmod                     text19       000BE0
__end_of___lbmod                     text11       000F52
__end_of___wmul                      text18       000FC4
__end_of__initialization             cinit        001040
__end_of_main                        text0        000C74
__end_of_printf                      text1        000FF8
__end_of_putch                       text2        001100
__end_ofi2_ES_EnQueueFIFO            text29       0009F4
__end_ofi2_ES_PostToService          text28       000EC4
__end_ofi2___awmod                   text31       000E5A
__end_ofi2___wmul                    text30       001074
__initialization                     cinit        001028
__mediumconst                        mediumconst  000000
__pbssBANK0                          bssBANK0     000060
__pbssCOMRAM                         bssCOMRAM    000034
__pcinit                             cinit        001028
__pcstackBANK0                       cstackBANK0  00008F
__pcstackCOMRAM                      cstackCOMRAM 000001
__pintcode                           intcode      000008
__pintcode_body                      intcode_body 00087C
__psmallconst                        smallconst   000300
__ptext0                             text0        000BE0
__ptext1                             text1        000FC4
__ptext10                            text10       0003B6
__ptext11                            text11       000F0E
__ptext12                            text12       000EC4
__ptext13                            text13       0010FA
__ptext14                            text14       0005D2
__ptext15                            text15       000FF8
__ptext16                            text16       000D72
__ptext17                            text17       0006BE
__ptext18                            text18       000F8E
__ptext19                            text19       000B3E
__ptext2                             text2        0010FE
__ptext20                            text20       0010DA
__ptext21                            text21       001074
__ptext22                            text22       000F52
__ptext24                            text24       0010F4
__ptext25                            text25       0010E8
__ptext26                            text26       000CF8
__ptext27                            text27       0010C4
__ptext28                            text28       000E5A
__ptext29                            text29       000940
__ptext3                             text3        0004DE
__ptext30                            text30       00104E
__ptext31                            text31       000DEA
__ptext32                            text32       001100
__ptext33                            text33       001102
__ptext34                            text34       000000
__ptext4                             text4        0010AE
__ptext5                             text5        0007A0
__ptext6                             text6        000A9A
__ptext7                             text7        0009F4
__ptext8                             text8        001092
__ptext9                             text9        000C74
__ramtop                             ramtop       000300
__size_of_BusErrorResponse           (abs)        000000
__size_of_CanErrorResponse           (abs)        000000
__size_of_CanRCVResponse             (abs)        000000
__size_of_CanXmitResponse            (abs)        000000
__size_of_Check4Keystroke            (abs)        000000
__size_of_ES_CheckUserEvents         (abs)        000000
__size_of_ES_DeQueue                 (abs)        000000
__size_of_ES_EnQueueFIFO             (abs)        000000
__size_of_ES_GetMSBitSet             (abs)        000000
__size_of_ES_InitQueue               (abs)        000000
__size_of_ES_Initialize              (abs)        000000
__size_of_ES_PostToService           (abs)        000000
__size_of_ES_Run                     (abs)        000000
__size_of_ES_Timer_Init              (abs)        000000
__size_of_ES_Timer_Tick_Resp         (abs)        000000
__size_of_ISR                        (abs)        000000
__size_of_InitCanHardware            (abs)        000000
__size_of_InitCanRX_Service          (abs)        000000
__size_of_InitPins                   (abs)        000000
__size_of_PostCanRX_Service          (abs)        000000
__size_of_ProcessReceive             (abs)        000000
__size_of_RunCanRX_Service           (abs)        000000
__size_of__HW_Process_Pending_Ints   (abs)        000000
__size_of__HW_Timer_Init             (abs)        000000
__size_of___awmod                    (abs)        000000
__size_of___lbmod                    (abs)        000000
__size_of___wmul                     (abs)        000000
__size_of_main                       (abs)        000000
__size_of_printf                     (abs)        000000
__size_of_putch                      (abs)        000000
__size_ofi2_ES_EnQueueFIFO           (abs)        000000
__size_ofi2_ES_PostToService         (abs)        000000
__size_ofi2___awmod                  (abs)        000000
__size_ofi2___wmul                   (abs)        000000
__smallconst                         smallconst   000300
_main                                text0        000BE0
_printf                              text1        000FC4
_putch                               text2        0010FE
btemp                                temp         000048
end_of_initialization                cinit        001040
i2ES_EnQueueFIFO@Event2Add           cstackCOMRAM 00000F
i2ES_EnQueueFIFO@SaveCrit            cstackCOMRAM 000015
i2ES_EnQueueFIFO@pBlock              cstackCOMRAM 00000D
i2ES_EnQueueFIFO@pThisQueue          cstackCOMRAM 000016
i2ES_PostToService@TheEvent          cstackCOMRAM 000018
i2ES_PostToService@WhichService      cstackCOMRAM 00001D
i2_ES_EnQueueFIFO                    text29       000940
i2_ES_PostToService                  text28       000E5A
i2___awmod                           text31       000DEA
i2___awmod@counter                   cstackCOMRAM 000005
i2___awmod@dividend                  cstackCOMRAM 000001
i2___awmod@divisor                   cstackCOMRAM 000003
i2___awmod@sign                      cstackCOMRAM 000006
i2___wmul                            text30       00104E
i2___wmul@multiplicand               cstackCOMRAM 000009
i2___wmul@multiplier                 cstackCOMRAM 000007
i2___wmul@product                    cstackCOMRAM 00000B
int$flags                            temp         000048
int_func                             intcode_body 00087C
intlevel0                            text         000000
intlevel1                            text         000000
intlevel2                            text         000000
intlevel3                            text         000000
main@ErrorType                       cstackBANK0  0000B3
printf@ap                            cstackBANK0  000091
printf@c                             cstackBANK0  000093
printf@f                             cstackBANK0  00008F
stackhi                              (abs)        0002FF
stacklo                              (abs)        0000B4
start                                init         000016
start_initialization                 cinit        001028


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 25 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ErrorType       1   36[BANK0 ] enum E15649
 Return value:  Size  Location     Type
                  2  299[None  ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:   12
 This function calls:
		_ES_Initialize
		_ES_Run
		_printf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _printf *****************
 Defined at:
		line 464 in file "/Applications/microchip/xc8/v1.38/sources/common/doprnt.c"
 Parameters:    Size  Location     Type
  f               2    0[BANK0 ] PTR const unsigned char 
		 -> STR_4(15), STR_3(23), STR_2(24), STR_1(27), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  cp              3    0        PTR const unsigned char 
  ap              2    2[BANK0 ] PTR void [1]
		 -> ?_printf(2), 
  len             2    0        unsigned int 
  val             2    0        unsigned int 
  c               1    4[BANK0 ] char 
  flag            1    0        unsigned char 
  prec            1    0        char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_putch
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 7 in file "/Applications/microchip/xc8/v1.38/sources/common/putch.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_printf
 This function uses a non-reentrant model


 *************** function _ES_Run *****************
 Defined at:
		line 277 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  HighestPrior    1   26[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15497
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       4       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_ES_CheckUserEvents
		_ES_DeQueue
		_ES_GetMSBitSet
		_RunCanRX_Service
		__HW_Process_Pending_Ints
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function __HW_Process_Pending_Ints *****************
 Defined at:
		line 220 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_Timer_Tick_Resp
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _ES_Timer_Tick_Resp *****************
 Defined at:
		line 284 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       4       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_ES_GetMSBitSet
 This function is called by:
		__HW_Process_Pending_Ints
 This function uses a non-reentrant model


 *************** function _ES_GetMSBitSet *****************
 Defined at:
		line 79 in file "ES_LookupTables.c"
 Parameters:    Size  Location     Type
  Val2Check       2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  LoopCntr        1    9[BANK0 ] char 
  Nybble2Test     1    8[BANK0 ] unsigned char 
  ReturnVal       1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       5       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_Run
		_ES_Timer_Tick_Resp
 This function uses a non-reentrant model


 *************** function _RunCanRX_Service *****************
 Defined at:
		line 142 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
  ThisEvent       3    0[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ReturnEvent     3    3[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3    0[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_InitCanHardware
		_InitPins
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _InitPins *****************
 Defined at:
		line 314 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_RunCanRX_Service
 This function uses a non-reentrant model


 *************** function _InitCanHardware *****************
 Defined at:
		line 246 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_RunCanRX_Service
 This function uses a non-reentrant model


 *************** function _ES_DeQueue *****************
 Defined at:
		line 164 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue0(12), 
  pReturnEvent    2   14[BANK0 ] PTR struct ES_Event_t
		 -> ES_Run@ThisEvent(3), ES_RecallEvents@RecalledEvent(3), 
 Auto vars:     Size  Location     Type
  pThisQueue      2   20[BANK0 ] PTR struct .
		 -> Queue0(12), 
  NumLeft         1   19[BANK0 ] unsigned char 
  SaveCrit        1   18[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       4       0       0
      Temps:          0       2       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___lbmod
		___wmul
 This function is called by:
		_ES_Run
		_ES_RecallEvents
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "/Applications/microchip/xc8/v1.38/sources/common/lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1    1[BANK0 ] unsigned char 
  rem             1    3[BANK0 ] unsigned char 
  counter         1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_DeQueue
 This function uses a non-reentrant model


 *************** function _ES_CheckUserEvents *****************
 Defined at:
		line 46 in file "ES_CheckEvents.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_Check4Keystroke
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _Check4Keystroke *****************
 Defined at:
		line 62 in file "EventCheckers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_CheckUserEvents
 This function uses a non-reentrant model


 *************** function _ES_Initialize *****************
 Defined at:
		line 242 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  NewRate         2   33[BANK0 ] enum E15426
 Auto vars:     Size  Location     Type
  i               1   35[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E15497
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   11
 This function calls:
		_ES_InitQueue
		_ES_Timer_Init
		_InitCanRX_Service
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitCanRX_Service *****************
 Defined at:
		line 91 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
  Priority        1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Priority        1   32[BANK0 ] unsigned char 
  ThisEvent       3   29[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ES_PostToService *****************
 Defined at:
		line 351 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   23[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   28[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_ES_EnQueueFIFO
 This function is called by:
		_InitCanRX_Service
 This function uses a non-reentrant model


 *************** function _ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue0(12), 
  Event2Add       3   14[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  pThisQueue      2   21[BANK0 ] PTR struct .
		 -> Queue0(12), 
  SaveCrit        1   20[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       3       0       0
      Temps:          0       3       0       0
      Totals:         0      11       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		___awmod
		___wmul
 This function is called by:
		_ES_PostToService
		_ES_PostAll
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[BANK0 ] unsigned int 
  multiplicand    2    8[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   10[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		_ES_DeQueue
		i2_ES_EnQueueFIFO
		_ES_EnQueueLIFO
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[BANK0 ] int 
  divisor         2    2[BANK0 ] int 
 Auto vars:     Size  Location     Type
  sign            1    5[BANK0 ] unsigned char 
  counter         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_EnQueueFIFO
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function _ES_Timer_Init *****************
 Defined at:
		line 130 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Rate            2    2[BANK0 ] enum E15426
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		__HW_Timer_Init
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function __HW_Timer_Init *****************
 Defined at:
		line 71 in file "ES_Port.c"
 Parameters:    Size  Location     Type
  Rate            2    0[BANK0 ] enum E15412
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_Timer_Init
 This function uses a non-reentrant model


 *************** function _ES_InitQueue *****************
 Defined at:
		line 58 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2    0[BANK0 ] PTR struct ES_Event_t
		 -> Queue0(12), 
  BlockSize       1    2[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pThisQueue      2    3[BANK0 ] PTR struct .
		 -> Queue0(12), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Nothing
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 111 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         16       0       0       0
      Totals:        16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_BusErrorResponse
		_CanErrorResponse
		_CanRCVResponse
		_CanXmitResponse
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _CanXmitResponse *****************
 Defined at:
		line 219 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _CanRCVResponse *****************
 Defined at:
		line 224 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2  131[None  ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_ProcessReceive
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _ProcessReceive *****************
 Defined at:
		line 329 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  Event2Post      3   32[COMRAM] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_PostCanRX_Service
 This function is called by:
		_CanRCVResponse
 This function uses a non-reentrant model


 *************** function _PostCanRX_Service *****************
 Defined at:
		line 122 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   29[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		i2_ES_PostToService
 This function is called by:
		_ProcessReceive
		_PostToList
 This function uses a non-reentrant model


 *************** function i2_ES_PostToService *****************
 Defined at:
		line 351 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   23[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   28[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i2_ES_EnQueueFIFO
 This function is called by:
		_PostCanRX_Service
 This function uses a non-reentrant model


 *************** function i2_ES_EnQueueFIFO *****************
 Defined at:
		line 85 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          2   12[COMRAM] PTR struct ES_Event_t
		 -> Queue0(12), 
  Event2Add       3   14[COMRAM] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ES_EnQueueFI    2   21[COMRAM] PTR struct .
		 -> Queue0(12), 
  ES_EnQueueFI    1   20[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         5       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:        11       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2___awmod
		i2___wmul
 This function is called by:
		i2_ES_PostToService
 This function uses a non-reentrant model


 *************** function i2___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v1.38/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    6[COMRAM] unsigned int 
  multiplicand    2    8[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  __wmul          2   10[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    6[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function i2___awmod *****************
 Defined at:
		line 8 in file "/Applications/microchip/xc8/v1.38/sources/common/awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  __awmod         1    5[COMRAM] unsigned char 
  __awmod         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i2_ES_EnQueueFIFO
 This function uses a non-reentrant model


 *************** function _CanErrorResponse *****************
 Defined at:
		line 233 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _BusErrorResponse *****************
 Defined at:
		line 238 in file "CanRX_Service.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
ES_Queue.c
		_ES_EnQueueFIFO		CODE           	06BE	0000	227
		_ES_DeQueue    		CODE           	03B6	0000	297
		_ES_InitQueue  		CODE           	0F52	0000	61

ES_Queue.c estimated size: 585

CanRX_Service.c
		_InitPins      		CODE           	1092	0000	29
		_CanXmitResponse		CODE           	10F4	0000	7
		_CanRCVResponse		CODE           	10E8	0000	13
		_InitCanRX_Service		CODE           	0FF8	0000	49
		_BusErrorResponse		CODE           	1102	0000	3
		_InitCanHardware		CODE           	0C74	0000	133
		_CanErrorResponse		CODE           	1100	0000	3
		_RunCanRX_Service		CODE           	09F4	0000	167
		_ProcessReceive		CODE           	0CF8	0000	123
		_PostCanRX_Service		CODE           	10C4	0000	23

CanRX_Service.c estimated size: 550

ES_CheckEvents.c
		_ES_CheckUserEvents		CODE           	0EC4	0000	75

ES_CheckEvents.c estimated size: 75

/Applications/microchip/xc8/v1.38/sources/common/lbmod.c
		___lbmod       		CODE           	0F0E	0000	69

/Applications/microchip/xc8/v1.38/sources/common/lbmod.c estimated size: 69

ES_LookupTables.c
		_ES_GetMSBitSet		CODE           	0A9A	0000	165

ES_LookupTables.c estimated size: 165

EventCheckers.c
		_Check4Keystroke		CODE           	10FA	0000	5

EventCheckers.c estimated size: 5

/Applications/microchip/xc8/v1.38/sources/common/Umul16.c
		___wmul        		CODE           	0F8E	0000	55

/Applications/microchip/xc8/v1.38/sources/common/Umul16.c estimated size: 55

ES_Framework.c
		_ES_PostToService		CODE           	0D72	0000	121
		_ES_Run        		CODE           	04DE	0000	245
		_ES_Initialize 		CODE           	05D2	0000	237

ES_Framework.c estimated size: 603

shared
		_BitNum2SetMask		SMALLCONST     	0301	0000	33
		_DistList00    		SMALLCONST     	0359	0000	3
		i2_ES_EnQueueFIFO		CODE           	0940	0000	181
		_ES_EventList  		SMALLCONST     	0357	0000	3
		i2___wmul      		CODE           	104E	0000	39
		i2_ES_PostToService		CODE           	0E5A	0000	107
		_Nybble2MSBitNum		SMALLCONST     	0341	0000	16
		_EventQueues   		SMALLCONST     	0354	0000	4
		__initialization		CODE           	1028	0000	25
		i2___awmod     		CODE           	0DEA	0000	113
		_Timer2PostFunc		SMALLCONST     	0321	0000	33
		_ServDescList  		SMALLCONST     	0350	0000	5

shared estimated size: 562

ES_Port.c
		_ISR           		CODE           	0008	0000	211
		__HW_Process_Pending_Ints		CODE           	10AE	0000	23
		__HW_Timer_Init		CODE           	1074	0000	31

ES_Port.c estimated size: 265

/Applications/microchip/xc8/v1.38/sources/common/awmod.c
		___awmod       		CODE           	0B3E	0000	163

/Applications/microchip/xc8/v1.38/sources/common/awmod.c estimated size: 163

/Applications/microchip/xc8/v1.38/sources/common/putch.c
		_putch         		CODE           	10FE	0000	3

/Applications/microchip/xc8/v1.38/sources/common/putch.c estimated size: 3

ES_Timers.c
		_ES_Timer_Init 		CODE           	10DA	0000	15
		_ES_Timer_Tick_Resp		CODE           	07A0	0000	221

ES_Timers.c estimated size: 236

main.c
		_main          		CODE           	0BE0	0000	149

main.c estimated size: 149

/Applications/microchip/xc8/v1.38/sources/common/doprnt.c
		_printf        		CODE           	0FC4	0000	53

/Applications/microchip/xc8/v1.38/sources/common/doprnt.c estimated size: 53

